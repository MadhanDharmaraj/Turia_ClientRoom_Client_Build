{"version":3,"sources":["views/apps/documents/list/Table.js","views/apps/documents/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","DocumentinOut","MySwal","withReactContent","Swal","useState","data","setData","id","localStorage","getItem","formModal","setFormModal","selected","setSelected","remarks","setRemarks","filesArr","setFilesArr","attachmentIds","setAttachmentsId","fileUploadProgress","setProgress","block","setBlock","Loader","schema","yup","shape","name","required","nameOfPerson","contactid","default","createdby","updatedby","organizationId","nullable","issuedDate","fileClassNames","image","pdf","xlsx","xls","docx","doc","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","setValue","configUpload","headers","onUploadProgress","Math","round","loaded","total","uploadFiles","files","formData","FormData","forEach","file","key","append","folderPath","axios","post","then","res","attachment_ids","catch","err","console","log","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","obj","extension","split","pop","push","length","toast","error","getRootProps","getInputProps","fileList","map","index","md","className","substr","size","onClick","filtered","filter","i","splice","handleRemoveFile","resetForm","closeModal","getLicenses","clientId","documentsinout","onSubmit","moment","valueOf","success","position","useEffect","getRow","fieldLabel","fieldName","reqflag","sm","classnames","for","render","field","invalid","message","tag","color","responsive","item","nameofperson","undefined","date","value","format","unix","card","openEditModal","lg","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","updatedBy","dismiss","DismissReason","cancel","deletefn","isOpen","toggle","blocking","loader","Object","keys","Form","onChange","dateStr","options","altInput","altFormat","dateFormat","type","e","target","k","tempIds","indexOf","temp","ob","test","handleRemoveFileFromLicense","originalfilename","xs","ServiceList","Table","UILoader","props","children","overlayColor","Tag","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/44.07cb32b8.chunk.js","sourcesContent":["// ** Reactstrap Imports\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport Flatpickr from 'react-flatpickr'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Label,\n  Input,\n  Button,\n  CardBody,\n  FormFeedback,\n  Table,\n  Modal,\n  CardTitle,\n  ModalHeader,\n  Badge,\n  ModalBody,\n  Progress\n} from 'reactstrap'\n\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport axios from '@src/configs/axios/axiosConfig'\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n// ** Third Party Components\nimport classnames from 'classnames'\nimport moment from 'moment'\nimport toast from 'react-hot-toast'\nimport { Edit, Trash2, Plus, X } from 'react-feather'\nimport { useDropzone } from 'react-dropzone'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n\nconst DocumentinOut = ({ }) => {\n\n  const MySwal = withReactContent(Swal)\n  const [data, setData] = useState([])\n  const id = localStorage.getItem('clientId')\n\n  const [formModal, setFormModal] = useState(false)\n  const [selected, setSelected] = useState(null)\n  const [remarks, setRemarks] = useState('')\n  const [filesArr, setFilesArr] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const [fileUploadProgress, setProgress] = useState(0)\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Please Enter Name\"),\n    nameOfPerson: yup.string().required(\"Please Enter Name of Person\"),\n    id: yup.string(),\n    contactid: yup.string().default(id),\n    createdby: yup.string().default(userId),\n    updatedby: yup.string().default(userId),\n    organizationId: yup.string().default(activeOrgId),\n    remarks: yup.string().nullable(),\n    issuedDate: yup.string().default('').required(\"Please Enter Issued Date\")\n  })\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n  const { handleSubmit, formState: { errors }, control, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n\n    formData.append('organizationId', activeOrgId)\n    formData.append('clientId', id)\n\n    const folderPath = [localStorage.getItem('clientName'), 'Documents']\n    formData.append('folderPath', folderPath)\n    setBlock(true)\n\n    axios.post('/files/upload', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      setBlock(false)\n    }).catch((err) => { console.log(err); setBlock(false) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    setFilesArr(filtered)\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={6} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n      <X size={14} className='cursor-pointer' onClick={() => handleRemoveFile(file, index)} />\n    </Col>\n  ))\n\n\n  const resetForm = () => {\n    setValue('name', '')\n    setValue('nameOfPerson', '')\n    setValue('remarks', '')\n    setValue('issuedDate', '')\n    setValue('contactid', id)\n    setValue('id', '')\n    setValue('organizationId', activeOrgId)\n    setValue('createdby', userId)\n    setValue('updatedby', userId)\n    setRemarks('')\n  }\n\n  const closeModal = () => {\n    setFormModal(false)\n    resetForm()\n  }\n\n  const openModal = () => {\n    setFormModal(true)\n    resetForm()\n  }\n\n  const openEditModal = card => {\n    setSelected(card)\n    setFormModal(true)\n    const issuedDate = moment(card.date, 'x').format('MMM DD, Y')\n\n    setValue('name', card.name)\n    setValue('issuedDate', issuedDate)\n    setValue('nameOfPerson', card.nameofperson)\n    setValue('remarks', card.remarks)\n    setValue('contactid', id)\n    setValue('id', card.id)\n    setValue('organizationId', activeOrgId)\n    setValue('createdby', userId)\n    setValue('updatedby', userId)\n    setRemarks(card.remarks)\n  }\n\n  const getLicenses = () => {\n    axios.post('/documentsinout/list', { clientId: id })\n      .then((res) => { setData(res.data.documentsinout) })\n      .catch((err) => { console.log(err) })\n  }\n\n  const deletefn = (id) => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await axios.post('/documentsinout/delete', { id, updatedBy: userId })\n        getLicenses()\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Document Status has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n        return true\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\n        return false\n      }\n    })\n  }\n\n  const onSubmit = async data => {\n    data.issuedDate = moment(data.issuedDate, \"MMM DD, Y\").valueOf()\n    data.attachmentIds = attachmentIds\n    if (selected !== null) {\n      axios.post('/documentsinout/update', data)\n        .then(async () => {\n          getLicenses()\n          setFormModal(false)\n          setFilesArr([])\n          setAttachmentsId([])\n          toast.success('Documents Place Updated Successfully', { position: 'bottom-right' })\n        })\n        .catch((err) => { console.log(err) })\n      setSelected(null)\n    } else {\n      axios.post('/documentsinout/create', data)\n        .then(async () => {\n          getLicenses()\n          setFormModal(false)\n          setFilesArr([])\n          setAttachmentsId([])\n          toast.success('Document Place Added Successfully', { position: 'bottom-right' })\n        })\n        .catch((err) => { console.log(err) })\n    }\n    closeModal()\n  }\n\n  const dateFormat = (value) => {\n    if (value === null || value === undefined) {\n      return ''\n    }\n    if (value.length === 13) {\n      return moment(value, 'x').format('MMM DD, YYYY')\n    } else {\n      return moment.unix(value).format('MMM DD, YYYY')\n    }\n  }\n\n  useEffect(() => {\n\n    getLicenses()\n\n  }, [])\n\n  const handleRemoveFileFromLicense = (id) => {\n\n    const tempIds = [...attachmentIds]\n    tempIds.splice(tempIds.indexOf(id), 1)\n    setAttachmentsId(tempIds)\n    const tempfile = [...selected.files]\n    const temp = tempfile.filter((ob) => { return ob.id !== id })\n\n    const test = { ...selected }\n    test.files = temp\n    setSelected(test)\n    setValue('attachmentIds', temp.map((obj) => obj.id) ?? [])\n\n  }\n\n  const getRow = (fieldLabel, fieldName, reqflag = true) => {\n    return (\n      <Col md={12}>\n        <Label sm='12' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName}>\n          {fieldLabel}\n        </Label>\n        <Col>\n          <Controller\n            id={fieldName}\n            name={fieldName}\n            control={control}\n            render={({ field }) => <Input invalid={errors[fieldName] && true} {...field} />}\n          />\n          {errors[fieldName] && <FormFeedback>{errors[fieldName].message}</FormFeedback>}\n        </Col>\n      </Col>\n    )\n  }\n\n  return (\n    <Card>\n      <CardBody >\n        <CardTitle className='align-items-end card-title d-flex justify-content-between mb-0' tag='h5'>\n          Document In - Out\n          <Button size='sm' className='me-1' color='primary' onClick={() => { openModal() }}>\n            <Plus size={14} />\n            Add New\n          </Button>\n        </CardTitle>\n      </CardBody>\n      <Table className='text-nowrap text-center border-bottom' responsive>\n        <thead>\n          <tr>\n            <th className='text-start'>Name</th>\n            <th>Name of the Person</th>\n            <th>Date</th>\n            <th>Remarks</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td className='text-start'>{item.name}</td>\n                <td>\n                  {item.nameofperson}\n                </td>\n                <td>\n                  {item.date !== undefined ? dateFormat(item.date) : ''}\n                </td>\n                <td className='text-start'>\n                  <span className='text-start'> {item.remarks} </span>\n                </td>\n                <td>\n                  <div className='column-action d-flex align-items-center'>\n                    <Col\n                      onClick={() => { openEditModal(item) }}>\n                      <Edit className='cursor-pointer mt-0' size={16} />\n                    </Col>\n                    <Col lg={4}\n                      onClick={() => { deletefn(item.id) }}>\n                      <Trash2\n                        className='cursor-pointer ms-1 mt-0' size={16} />\n                    </Col>\n                  </div>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => closeModal()}>Document In - Out</ModalHeader>\n        <UILoader blocking={block} loader={<Loader />}>\n          <ModalBody>\n            {\n              Object.keys(errors).map((key) => {\n\n                return <FormFeedback key={key}>${errors[key]?.message}</FormFeedback>\n\n              })\n            }\n            <Row tag={Form} className='gx-2 gy-1' onSubmit={handleSubmit(onSubmit)}>\n\n              {getRow('Name Of Document', 'name', true)}\n\n              {getRow('Name Of Person', 'nameOfPerson', true)}\n\n              <Col md={12}>\n                <Label className='form-label required' for='comments'>\n                  Date\n                </Label>\n                <Controller\n                  control={control}\n                  name={`issuedDate`}\n                  id='issuedDate'\n                  render={({ field }) => (\n                    <Flatpickr\n                      value={field.value}\n                      onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                      options={{ altInput: true, altFormat: \"M j, Y\", dateFormat: \"M j, Y\" }}\n                      className='form-control invoice-edit-input date-picker'\n                    />\n                  )}\n                />\n                {errors.issuedDate && <p className='text-danger' >{errors.issuedDate.message}</p>}\n\n              </Col>\n              <Col md={12}>\n                <Label className='form-label' for='comments'>\n                  Remarks\n                </Label>\n                <Controller\n                  control={control}\n                  name={`remarks`}\n                  id='remarks'\n                  render={({ }) => (\n                    <Input type='textarea' value={remarks} onChange={(e) => { setValue('remarks', e.target.value); setRemarks(e.target.value) }}\n                    />\n                  )}\n                />\n                {errors.remarks && <FormFeedback>{errors.remarks.message}</FormFeedback>}\n\n              </Col>\n              <Col>\n                <input {...getInputProps()} />\n                <Button color='primary' {...getRootProps({})}>Add Attachments</Button>\n              </Col>\n              {fileUploadProgress > 0 && <Progress color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n              <Row className='d-flex p-1'>{fileList}</Row>\n\n              <Row className='d-flex col-12'>\n                {selected?.files?.map((file, k) => {\n                  return (<Badge key={k} color={'primary'} className='me-1 mt-1 col-4' onClick={() => handleRemoveFileFromLicense(file.id)}>\n                    {file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}` : file.originalfilename} X</Badge>)\n                })\n                }\n              </Row>\n\n              <Col className='mt-2 pt-1' xs={12}>\n                <Button type='submit' className='me-1' color='primary'>\n                  Submit\n                </Button>\n                <Button className='me-1' color='warning' onClick={() => closeModal()}>\n                  Cancel\n                </Button>\n              </Col>\n\n            </Row>\n          </ModalBody>\n        </UILoader>\n      </Modal>\n    </Card >\n  )\n}\n\nexport default DocumentinOut\n","// ** User List Component\nimport Table from './Table'\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default ServiceList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}