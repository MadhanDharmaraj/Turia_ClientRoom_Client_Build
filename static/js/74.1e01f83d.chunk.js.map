{"version":3,"sources":["views/components/avatar/AvatarSizes.js","views/components/avatar/AvatarIcons.js","views/components/avatar/AvatarGroup.js","views/components/avatar/AvatarColors.js","views/components/avatar/AvatarStatus.js","views/components/avatar/AvatarInitials.js","views/components/avatar/AvatarLightColors.js","views/components/avatar/AvatarGroupTooltip.js","views/components/avatar/AvatarSourceCode.js","views/components/avatar/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js","@core/components/avatar-group/index.js","assets/images/portrait/small/avatar-s-20.jpg"],"names":["AvatarSizes","className","img","avatarImg","size","AvatarIcons","color","icon","data","require","default","AvatarGroupComponent","AvatarColors","content","AvatarStatus","status","AvatarInitials","initials","AvatarLightColors","title","avatarSizes","avatarInitials","avatarColors","avatarLightColors","avatarIcons","avatarStatus","avatarGroup","avatarGroupTooltip","Avatar","useEffect","Prism","highlightAll","xl","lg","code","sm","AvatarGroup","AvatarGroupTooltip","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","CardBody","onClick","Tag","i","ItemTag","placement","target","split","join","meta","id","undefined"],"mappings":"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","file":"static/js/74.1e01f83d.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} size='sm' />\n      <Avatar img={avatarImg} />\n      <Avatar img={avatarImg} size='lg' />\n      <Avatar img={avatarImg} size='xl' />\n    </div>\n  )\n}\nexport default AvatarSizes\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\n\nconst AvatarIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' icon={<Calendar size={14} />} />\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\n      <Avatar color='success' icon={<Inbox size={14} />} />\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\n      <Avatar color='light-warning' icon={<Award size={14} />} />\n      <Avatar color='light-info' icon={<Star size={14} />} />\n    </div>\n  )\n}\nexport default AvatarIcons\n","// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' content='PI' />\n      <Avatar color='secondary' content='PI' />\n      <Avatar color='success' content='PI' />\n      <Avatar color='danger' content='PI' />\n      <Avatar color='warning' content='PI' />\n      <Avatar color='info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarColors\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { GitHub } from 'react-feather'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarStatus = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} status='offline' />\n      <Avatar color='info' content='LD' status='busy' />\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\n      <Avatar color='light-success' content='AB' status='online' />\n    </div>\n  )\n}\nexport default AvatarStatus\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarInitials = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='Peter Ingraham' size='sm' initials />\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\n      <Avatar color='light-success' content='Peter Ingraham' size='lg' initials />\n      <Avatar color='light-danger' content='Peter Ingraham' size='xl' initials />\n    </div>\n  )\n}\nexport default AvatarInitials\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarLightColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='PI' />\n      <Avatar color='light-secondary' content='PI' />\n      <Avatar color='light-success' content='PI' />\n      <Avatar color='light-danger' content='PI' />\n      <Avatar color='light-warning' content='PI' />\n      <Avatar color='light-info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarLightColors\n","// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    title: 'Vinnie Mostowy',\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\n  },\n  {\n    title: 'Elicia Rieske',\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\n  },\n  {\n    title: 'Julee Rossignol',\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\n  },\n  {\n    title: 'Darcey Nooner',\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\n  },\n  {\n    title: 'Jenny Looper',\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n","export const avatarSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} size='sm' />\n      <Avatar img={avatarImg} />\n      <Avatar img={avatarImg} size='lg' />\n      <Avatar img={avatarImg} size='xl' />\n    </div>\n  )\n}\nexport default AvatarSizes\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarInitials = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarInitials = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='Peter Ingraham' initials />\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\n      <Avatar color='light-success' content='Peter Ingraham' initials />\n      <Avatar color='light-danger' content='Peter Ingraham' initials />\n    </div>\n  )\n}\nexport default AvatarInitials\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' content='PI' />\n      <Avatar color='secondary' content='PI' />\n      <Avatar color='success' content='PI' />\n      <Avatar color='danger' content='PI' />\n      <Avatar color='warning' content='PI' />\n      <Avatar color='info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarLightColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarLightColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='PI' />\n      <Avatar color='light-secondary' content='PI' />\n      <Avatar color='light-success' content='PI' />\n      <Avatar color='light-danger' content='PI' />\n      <Avatar color='light-warning' content='PI' />\n      <Avatar color='light-info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarLightColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarIcons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\n\nconst AvatarIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' icon={<Calendar size={14} />} />\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\n      <Avatar color='success' icon={<Inbox size={14} />} />\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\n      <Avatar color='light-warning' icon={<Award size={14} />} />\n      <Avatar color='light-info' icon={<Star size={14} />} />\n    </div>\n  )\n}\nexport default AvatarIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarStatus = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport { GitHub } from 'react-feather'\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarStatus = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} status='offline' />\n      <Avatar color='info' content='LD' status='busy' />\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\n      <Avatar color='light-success' content='AB' status='online' />\n    </div>\n  )\n}\nexport default AvatarStatus\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarGroup = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarGroupTooltip = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    title: 'Vinnie Mostowy',\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\n  },\n  {\n    title: 'Elicia Rieske',\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\n  },\n  {\n    title: 'Julee Rossignol',\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\n  },\n  {\n    title: 'Darcey Nooner',\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\n  },\n  {\n    title: 'Jenny Looper',\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport AvatarSizes from './AvatarSizes'\nimport AvatarIcons from './AvatarIcons'\nimport AvatarGroup from './AvatarGroup'\nimport AvatarColors from './AvatarColors'\nimport AvatarStatus from './AvatarStatus'\nimport AvatarInitials from './AvatarInitials'\nimport AvatarLightColors from './AvatarLightColors'\nimport AvatarGroupTooltip from './AvatarGroupTooltip'\n\n// ** Source Code\nimport {\n  avatarIcons,\n  avatarSizes,\n  avatarGroup,\n  avatarColors,\n  avatarStatus,\n  avatarInitials,\n  avatarLightColors,\n  avatarGroupTooltip\n} from './AvatarSourceCode'\n\nconst Avatar = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Avatar' data={[{ title: 'Components' }, { title: 'Avatar' }]} />\n      <Row className='match-height'>\n        <Col xl='6' lg='12'>\n          <Card title='Sizes' code={avatarSizes}>\n            <CardText className='mb-0'>\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size. You can also use <code>height</code> &{' '}\n              <code>width</code> prop for a custom size\n            </CardText>\n            <AvatarSizes />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Intials' code={avatarInitials}>\n            <CardText className='mb-0'>\n              Use prop <code>initials</code> to show only Initials of content.\n            </CardText>\n            <AvatarInitials />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Colors' code={avatarColors}>\n            <CardText className='mb-0'>\n              Use prop <code>color=[primary | success | danger | info | warning | dark]</code> to change background\n              color of your avatar.\n            </CardText>\n            <AvatarColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Light Colors' code={avatarLightColors}>\n            <CardText className='mb-0'>\n              Use prop{' '}\n              <code>\n                color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\n              </code>{' '}\n              to change background color of your avatar.\n            </CardText>\n            <AvatarLightColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Icons' code={avatarIcons}>\n            <CardText className='mb-0'>\n              Use prop <code>icon</code> to create avatar with icon.\n            </CardText>\n            <AvatarIcons />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Status' code={avatarStatus}>\n            <CardText className='mb-0'>\n              Use prop <code>status=[online | offline | away | busy]</code> to create avatar with status.\n            </CardText>\n            <AvatarStatus />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group' code={avatarGroup}>\n            <CardText>\n              Use <code>&lt;AvatarGroup /&gt;</code> component and pass <code>data</code> prop to create a grouped\n              avatar.\n            </CardText>\n            <CardText>Data prop must be an array of object which contains props to be passed on avatar.</CardText>\n            <AvatarGroup />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group Tooltip' code={avatarGroupTooltip}>\n            <CardText>\n              Add an extra property of <code>title</code> in the data you pass in <code>&lt;AvatarGroup /&gt;</code> to\n              create avatar group with tooltip.\n            </CardText>\n\n            <AvatarGroupTooltip />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Avatar\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Custom Components Imports\nimport Avatar from '@components/avatar'\n\nconst AvatarGroup = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : 'div'\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div'\n      return (\n        <Fragment key={i}>\n          {item.title ? (\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null}\n          {!item.meta ? (\n            <Avatar\n              tag={ItemTag}\n              className={classnames('pull-up', {\n                [item.className]: item.className\n              })}\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\n              {...item}\n              title={undefined}\n              meta={undefined}\n            />\n          ) : null}\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\n        </Fragment>\n      )\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar-group', {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";"],"sourceRoot":""}