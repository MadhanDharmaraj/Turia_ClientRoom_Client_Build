{"version":3,"sources":["views/apps/reimbursement/shared-sidebar/SidebarSendInvoice.js","views/apps/reimbursement/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrg","activeOrganization","userData","loggedInUser","SidebarSendInvoice","props","colourStyles","multiValue","styles","backgroundColor","useState","block","setBlock","Loader","toEmail","setToEmail","ccEmail","setCCEmail","data","setData","open","toggleSidebar","invoice","thankyouNote","setThankyouNote","userOptions","setUserOptions","clientOptions","setClientOptions","getCoatctInfo","id","axios","post","contactid","then","res","contactinformations","catch","getThankyouNotes","slug","value","test","emailtemplates","description","replace","paymentdue","length","moment","format","unix","taskinvoiceitemsservicename","contactperson","uniqueno","totalamount","name","replaceAll","temp","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","useEffect","undefined","clientid","Object","keys","organizationusers","ccOpen","setCCOpen","SelectComponent","Option","className","size","initials","content","charAt","email","toggleCC","e","preventDefault","scrollable","fade","keyboard","backdrop","container","isOpen","contentClassName","toggle","modalClassName","blocking","loader","href","onClick","onSubmit","for","isMulti","isClearable","theme","selectThemeColors","options","classNamePrefix","components","onChange","map","i","getOptionLabel","option","getOptionValue","placeholder","toolbarClassName","wrapperClassName","editorState","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","editorClassName","toolbar","inline","inDropdown","outline","color","subject","taskinvoiceId","clientName","contactname","toast","success","position","console","log","sendMail","MySwal","withReactContent","Swal","paymentstatusObj","CustomHeader","handleFilter","handlePerPage","rowsPerPage","exportList","setCurrentStatus","currentStatus","selecteIds","dispatch","useDispatch","lg","htmlFor","type","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","deleteInvoiceBulk","md","target","I","a","tag","Link","to","caret","InvoiceList","store","useSelector","state","reimbursementInvoice","setValue","sendSidebarOpen","setSendSidebarOpen","sort","setSort","sortColumn","setSortColumn","selectedData","setSelectedData","currentPage","setCurrentPage","setRowsPerPage","toggleSendSidebar","setSelectedIds","renderClient","row","Math","floor","random","dateFormat","renderStatus","val","find","o","parseInt","getData","q","page","perPage","status","handlePagination","selected","handleSort","col","exportInvoice","CustomPagination","count","Number","total","toFixed","nextLabel","breakLabel","previousLabel","pageCount","activeClassName","breakClassName","pageClassName","breakLinkClassName","nextLinkClassName","pageLinkClassName","nextClassName","previousLinkClassName","previousClassName","onPageChange","forcePage","containerClassName","dataToRender","filters","some","k","downloadPdf","downloadLink","document","createElement","fileName","pdf","download","click","removeChild","err","stringTrimfn","substr","responsive","scope","style","padding","fontSize","index","checked","ind","indexOf","splice","handleCheckBox","contactemail","reimbursementinvoiceitemsservicename","invoicedate","dueamount","pill","paymentstatus","placement","end","deleteInvoice","UILoader","children","overlayColor","Tag","classnames","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/60.82ba43da.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html'\nimport { EditorState, ContentState, convertFromHTML, convertToRaw } from 'draft-js'\nimport Select, { components } from 'react-select'\nimport CreatableSelect from 'react-select/creatable'\n\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash, File } from 'react-feather'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Modal,\n  Button,\n  ModalBody\n} from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\n// ** User Avatars\nimport { activeOrganization, loggedInUser } from '@src/helper/sassHelper'\nconst activeOrg = activeOrganization()\nconst userData = loggedInUser()\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport toast from 'react-hot-toast'\nconst SidebarSendInvoice = props => {\n\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const [block, setBlock] = useState(false)\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const [toEmail, setToEmail] = useState([])\n  const [ccEmail, setCCEmail] = useState([])\n  const [data, setData] = useState('')\n  const { open, toggleSidebar, invoice } = props\n  const [thankyouNote, setThankyouNote] = useState('')\n  const [userOptions, setUserOptions] = useState([])\n  const [clientOptions, setClientOptions] = useState([])\n\n  const getOrganizationUsers = () => {\n    axios.post('/organizationusers/dropdown').then((res) => {\n      setUserOptions(res.data.organizationusers)\n    }).catch(() => { })\n  }\n\n  const getCoatctInfo = (id) => {\n    axios.post('contactinformations/list', { contactid: id }).then((res) => {\n      setClientOptions(res.data.contactinformations)\n    }).catch(() => { })\n\n  }\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n\n  }\n\n  const getThankyouNotes = () => {\n    axios.post('/emailtemplates/get', { slug: 'invoice-send-mail' }).then((res) => {\n      const mailSub = res.data.emailtemplates.description\n      const test = mailSub.replace('{invoice_date}', dateFormat(invoice.paymentdue)).replace('{service}', invoice.taskinvoiceitemsservicename).replace('recipient_name', invoice.contactperson).replace('{recipient_name}', invoice.contactperson).replace('{invoice_no}', invoice.uniqueno).replace('{amount}', invoice.totalamount).replace('{invoice_amount}', invoice.totalamount).replace('{your_name}', userData.name).replaceAll('{firm_name}', activeOrg.name).replace('{', '').replace('}', '')\n\n      const temp = EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML(test)\n        )\n      )\n      setData(temp)\n      setThankyouNote(test)\n\n    }).catch(() => { })\n  }\n\n  const handleChange = (editorState) => {\n    setData(editorState)\n    setThankyouNote(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  }\n\n\n  useEffect(() => {\n    if (invoice.clientid !== undefined) {\n      getCoatctInfo(invoice.clientid)\n    }\n    if (invoice.contactid !== undefined) {\n      getCoatctInfo(invoice.contactid)\n    }\n    if (Object.keys(invoice).length > 0) {\n      getOrganizationUsers()\n      getThankyouNotes()\n    }\n  }, [invoice])\n\n  const sendMail = () => {\n    setBlock(true)\n    const subject = `${invoice.uniqueno} Invoices Acknowledgement Mail`\n    axios.post('/google/sendGmail', { content: thankyouNote, subject, toEmail, ccEmail, taskinvoiceId: invoice.id, clientName: invoice.contactname })\n      .then(() => {\n        toggleSidebar(false)\n        setBlock(false)\n        toast.success('Email send Successfully', { position: 'bottom-right' })\n      })\n    console.log(() => { })\n  }\n\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-50' size='sm' initials content={data.name?.charAt(0)} />\n          {data.name} - {data.email}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleSidebar()\n  }\n\n  return (\n\n    <div className='email-application'>\n      <div className='content-area-wrapper'>\n        <div className='col-md-12'>\n          <div className='content-body'>\n            <Modal\n              scrollable\n              fade={false}\n              keyboard={false}\n              backdrop={false}\n              id='compose-mail'\n              container='.content-body'\n              className='modal-lg'\n              isOpen={open}\n              contentClassName='p-0'\n              toggle={toggleSidebar}\n              modalClassName='modal-sticky'\n            >\n              <UILoader blocking={block} loader={<Loader />}>\n                <div className='modal-header'>\n                  <h5 className='modal-title'>Compose Mail</h5>\n                  <div className='modal-actions'>\n                    {/* <a href='/' className='text-body me-75' onClick={togglePopUp}>\n                      <Minus size={14} />\n                    </a>\n                    <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\n                      <Maximize2 size={14} />\n                    </a> */}\n                    <a href='/' className='text-body' onClick={togglePopUp}>\n                      <X size={14} />\n                    </a>\n                  </div>\n                </div>\n                <ModalBody className='flex-grow-1 p-0'>\n                  <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-to' className='form-label'>\n                        To:\n                      </Label>\n                      <div className='flex-grow-1'>\n                        <CreatableSelect\n                          isMulti\n                          id='email-to'\n                          isClearable={false}\n                          theme={selectThemeColors}\n                          options={clientOptions}\n                          className='react-select select-borderless'\n                          classNamePrefix='select'\n                          components={{ Option: SelectComponent }}\n                          styles={colourStyles}\n                          onChange={(e) => { setToEmail(e.map(i => i.email)) }}\n                          getOptionLabel={(option) => `${option.name} - ${option.email}`}\n                          getOptionValue={(option) => option.id}\n                        />\n                      </div>\n                      <div>\n                        <a href='/' className='toggle-cc text-body me-1' onClick={toggleCC}>\n                          Cc\n                        </a>\n                      </div>\n                    </div>\n                    {ccOpen === true ? (\n                      <div className='compose-mail-form-field cc-wrapper'>\n                        <Label for='email-cc' className='form-label'>\n                          Cc:\n                        </Label>\n                        <div className='flex-grow-1'>\n                          <Select\n                            isMulti\n                            id='email-cc'\n                            onChange={(e) => { setCCEmail(e.map(i => i.email)) }}\n                            isClearable={false}\n                            theme={selectThemeColors}\n                            options={userOptions}\n                            className='react-select select-borderless'\n                            classNamePrefix='select'\n                            components={{ Option: SelectComponent }}\n                            styles={colourStyles}\n                            getOptionLabel={(option) => `${option.name} - ${option.email}`}\n                            getOptionValue={(option) => option.id}\n                          />\n                        </div>\n                        <div>\n                          <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                            <X size={14} />\n                          </a>\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-subject' className='form-label'>\n                        Subject:\n                      </Label>\n                      <Input id='email-subject' placeholder='Subject' />\n                    </div>\n                    <div id='message-editor'>\n                      <Editor\n                        placeholder='Message'\n                        toolbarClassName='rounded-0'\n                        wrapperClassName='toolbar-bottom'\n                        editorState={data}\n                        onEditorStateChange={handleChange}\n                        editorClassName='rounded-0 border-0'\n                        toolbar={{\n                          options: ['inline', 'textAlign'],\n                          inline: {\n                            inDropdown: false,\n                            options: ['bold', 'italic', 'underline', 'strikethrough']\n                          }\n                        }}\n                      />\n                    </div>\n                    <div className='compose-footer-wrapper'>\n                      <div className='btn-wrapper d-flex align-items-center'>\n                        <Button outline color='primary' onClick={() => { sendMail() }}>Send</Button>\n                        <div className='email-attachement rounded border p-50 ms-50'>\n                          {invoice.uniqueno}.pdf\n                        </div>\n                      </div>\n                      <div className='footer-action d-flex align-items-center'>\n                        <Trash className='cursor-pointer' size={18} onClick={toggleSidebar} />\n                      </div>\n                    </div>\n                  </Form>\n                </ModalBody>\n              </UILoader>\n            </Modal>\n          </div></div></div>\n    </div>\n\n  )\n}\n\nexport default SidebarSendInvoice\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect, Fragment } from 'react'\nimport Avatar from '@components/avatar'\nimport Select from 'react-select'\n// ** Third Party Components\nimport { Can } from '@src/utility/context/Can.js'\nimport ReactPaginate from 'react-paginate'\nimport { Download, MoreVertical, Send, Eye, Edit, Trash, Copy, Trash2, Save } from 'react-feather'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Button, Input, Row, Col, Card, CardBody, Label,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Badge,\n  UncontrolledTooltip,\n  Table,\n  DropdownItem\n} from 'reactstrap'\n\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Store & Actions\nimport { getData, exportInvoice, deleteInvoice, deleteInvoiceBulk } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\nconst MySwal = withReactContent(Swal)\nconst paymentstatusObj = [\n  { id: '', name: \"Select All\" },\n  { id: '4', name: \"Draft\" },\n  { id: '5', name: \"Pending\", color: 'light-danger' },\n  { id: '6', name: \"Partially Paid\", color: 'light-warning' },\n  { id: '7', name: 'Paid', color: 'light-success' },\n  { id: '11', name: 'Sent', color: 'light-secondary' }\n]\n\nconst CustomHeader = ({ handleFilter, value, handlePerPage, rowsPerPage, exportList, setCurrentStatus, currentStatus, selecteIds }) => {\n\n  const dispatch = useDispatch()\n\n  const deleteInvoicefun = () => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteInvoiceBulk(selecteIds))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Invoice has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n\n  return (\n    <div className='invoice-list-table-header w-100 py-2 px-1'>\n      <Row>\n        <Col lg='3' className='d-flex align-items-center px-0 px-lg-1'>\n          <div className='d-flex align-items-center me-2'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              className='form-control ms-50 pe-3'\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n          </div>\n\n          {selecteIds.length > 0 &&\n            <Trash2 size={16} className='text-danger' onClick={() => { deleteInvoicefun() }} />\n          }\n        </Col>\n\n        <Col\n          lg='9'\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pe-lg-1 p-0'\n        >\n          <Col md='2'>\n            <Select\n              theme={selectThemeColors}\n              isClearable={false}\n              className='react-select'\n              placeholder={'Select Status'}\n              classNamePrefix='select'\n              options={paymentstatusObj}\n              value={currentStatus}\n              getOptionLabel={(option) => option.name}\n              getOptionValue={(option) => option.id}\n              onChange={async data => {\n                setCurrentStatus(data)\n              }}\n            />\n          </Col>\n          <div className='d-flex align-items-center'>\n            <Input\n              id='search-invoice'\n              className='ms-50 me-2 w-100'\n              type='text'\n              value={value}\n              onChange={e => handleFilter(e.target.value)}\n              placeholder='Search Invoice'\n            />\n          </div>\n          <Can I={'write'} a={'invoice'}>\n            <Button tag={Link} to='/reimbursement/add' color='primary'>\n              Add\n            </Button>\n          </Can>\n          <UncontrolledDropdown className='ms-1'>\n            <DropdownToggle color='secondary' caret outline>\n              <MoreVertical className='font-small-4 me-50' />\n            </DropdownToggle>\n            <DropdownMenu>\n\n            <Can I={'export'} a={'invoice'}>\n                <DropdownItem tag={Link} to={`/import/reimbursement`}> \n                  <Download className='font-small-4 me-50' />\n                  <span className='align-middle'>Import</span>\n                </DropdownItem>\n              </Can>\n              <Can I={'export'} a={'invoice'}>\n                <DropdownItem onClick={() => { exportList() }} >\n                  <Download className='font-small-4 me-50' />\n                  <span className='align-middle'>Export</span>\n                </DropdownItem>\n              </Can>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst InvoiceList = () => {\n  // ** Store vars\n\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.reimbursementInvoice)\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  // ** States\n  const [value, setValue] = useState('')\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('createdon')\n  const [selectedData, setSelectedData] = useState({})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(50)\n  const [currentStatus, setCurrentStatus] = useState({ id: '', name: 'Select Status' })\n\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n  const [selecteIds, setSelectedIds] = useState([])\n  // ** renders client column\n  const renderClient = row => {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n    return <Avatar color={color} className='me-50' content={row.contactname !== null ? row.contactname?.charAt(0) : ''} />\n\n  }\n\n  const dateFormat = (value) => {\n    if (!value) return ''\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n\n  }\n\n  const renderStatus = (val) => {\n    const obj = paymentstatusObj.find((o) => parseInt(o.id) === parseInt(val))\n    return obj\n  }\n  const deleteInvoicefun = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteInvoice(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Invoice has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id\n      })\n    )\n    setBlock(false)\n  }, [dispatch, currentStatus])\n\n  const handleFilter = async val => {\n    setValue(val)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id\n      })\n    )\n    setBlock(false)\n  }\n\n  const handlePerPage = async e => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        status: currentStatus.id,\n        perPage: parseInt(e.target.value)\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n    setBlock(false)\n  }\n\n  const handlePagination = async page => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        status: currentStatus.id,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n    setBlock(false)\n  }\n\n  const handleSort = async col => {\n\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn: col,\n        q: value,\n        status: currentStatus.id,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n    setSort(sort === 'asc' ? 'desc' : 'asc')\n    setSortColumn(col)\n    setBlock(false)\n  }\n\n  const exportList = async () => {\n    setBlock(true)\n    await dispatch(\n      exportInvoice({\n        sort,\n        sortColumn,\n        q: value,\n        status: currentStatus.id\n      })\n    )\n    setBlock(false)\n  }\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        nextLabel=''\n        breakLabel='...'\n        previousLabel=''\n        pageCount={count || 1}\n        activeClassName='active'\n        breakClassName='page-item'\n        pageClassName={'page-item'}\n        breakLinkClassName='page-link'\n        nextLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousLinkClassName={'page-link'}\n        previousClassName={'page-item prev'}\n        onPageChange={page => handlePagination(page)}\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\n      />\n    )\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      q: value,\n      status: currentStatus.id\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return []\n    }\n  }\n\n  useEffect(() => {\n    dataToRender()\n  }, [store.data])\n\n  const downloadPdf = async (row) => {\n    setBlock(true)\n    axios.post('/pdfmaker/pdf', { id: row.id })\n      .then((res) => {\n        const downloadLink = document.createElement(\"a\")\n        const fileName = `${row.uniqueno}.pdf`\n        downloadLink.href = res.data.pdf\n        downloadLink.download = fileName\n        downloadLink.click()\n        document.removeChild(downloadLink)\n        setBlock(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setBlock(false)\n      })\n  }\n\n  const stringTrimfn = (text) => {\n    return text.length >= 20 ? `${text.substr(0, 20)}...` : text\n  }\n\n  const handleCheckBox = (e, id) => {\n    if (e.target.checked) {\n      setSelectedIds([...selecteIds, id])\n    } else {\n      const temp = [...selecteIds]\n      const ind = temp.indexOf(id)\n      temp.splice(ind, 1)\n      setSelectedIds(temp)\n    }\n\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <div className='invoice-list-dataTable react-dataTable'>\n            <CustomHeader handlePerPage={handlePerPage} exportList={exportList} handleFilter={handleFilter} setCurrentStatus={setCurrentStatus} currentStatus={currentStatus} selecteIds={selecteIds} />\n            <Table responsive className='table-hover'>\n              <thead>\n                <tr>\n                  <th></th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 7px', fontSize: '13px' }}>ID</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 8px', fontSize: '13px' }}>Customer</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 8px', fontSize: '13px' }}>Service</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 8px', fontSize: '13px' }} onClick={() => { handleSort('invoicedate') }}>Date</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }} onClick={() => { handleSort('paymentdue') }}>Due Date</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Total</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Balance</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Payment Status</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dataToRender().map((row, index) => {\n                  return (\n                    <tr key={index}>\n                      <td>\n                        <Input type='checkbox' color='primary' value={row.id} onChange={(e) => { handleCheckBox(e, row.id) }} />\n                      </td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/reimbursement/view/${row.id}`}>\n                        <span className='text-body'>{`${row.uniqueno}`}</span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>{\n                        <Link to={`/reimbursement/view/${row.id}`}>\n                          <div className='d-flex' style={{ padding: \"0.2574rem 0rem\" }}>\n                            {renderClient(row)}\n                            <div className='d-flex flex-column text-overflow-ellipsis'>\n                              <h6 className='user-name text-truncate mb-0'>{stringTrimfn(row.contactname || '')}</h6>\n                              <small className='text-truncate text-muted mb-0'>{stringTrimfn(row.contactemail || '')}</small>\n                            </div>\n                          </div>\n                        </Link>\n                      }</td>\n                      <td className='text-nowrap' style={{ padding: '8px 0px', fontSize: '13px' }}><Link to={`/reimbursement/view/${row.id}`}>\n                        <span className='text-body text-truncate' style={{ padding: \"0.2574rem 0rem\" }}>{stringTrimfn(row.reimbursementinvoiceitemsservicename || '')}\n                        </span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/reimbursement/view/${row.id}`}>\n                        <span className='text-body'>{dateFormat(row.invoicedate)}</span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/reimbursement/view/${row.id}`}>\n                        <span className='text-body'>{dateFormat(row.paymentdue)}</span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/reimbursement/view/${row.id}`}><span className='text-body'>{row.totalamount || 0}</span>\n                      </Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>\n                        {row.dueamount !== '0' ? (\n                          <span>{row.dueamount}</span>\n                        ) : (\n                          <Badge color='light-success' pill>\n                            Paid\n                          </Badge>\n                        )}\n                      </td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>\n\n                        <Badge color={renderStatus(row.paymentstatus)?.color || 'light-primary'}>{renderStatus(row.paymentstatus).name || row.paymentstatus}</Badge>\n\n                      </td>\n\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>\n                        <div className='column-action d-flex align-items-center'>\n\n                          <Can I={'read'} a={'invoice'}><Send size={17} onClick={() => { toggleSendSidebar(); setSelectedData(row) }} /></Can>\n\n                          <Can I={'read'} a={'invoice'}> <Link to={`/reimbursement/view/${row.id}`} id={`pw-tooltip-${row.id}`}>\n                            <Eye size={17} className='mx-1' />\n                          </Link></Can>\n                          <UncontrolledTooltip placement='top' target={`pw-tooltip-${row.id}`}>\n                            Preview Challan\n                          </UncontrolledTooltip>\n                          <UncontrolledDropdown>\n                            <DropdownToggle tag='span'>\n                              <MoreVertical size={17} className='cursor-pointer' />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                              <Can I={'export'} a={'invoice'}>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => { e.preventDefault(); downloadPdf(row) }}>\n                                  <Download size={14} className='me-50' />\n                                  <span className='align-middle'>Download</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'write'} a={'invoice'}>\n                                <DropdownItem tag={Link} to={`/reimbursement/edit/${row.id}`} className='w-100'>\n                                  <Edit size={14} className='me-50' />\n                                  <span className='align-middle'>Edit</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'delete'} a={'invoice'}>\n                                <DropdownItem\n                                  tag='a'\n                                  href='/'\n                                  className='w-100'\n                                  onClick={e => {\n                                    e.preventDefault()\n                                    deleteInvoicefun(row.id)\n                                  }}\n                                >\n                                  <Trash size={14} className='me-50' />\n                                  <span className='align-middle'>Delete</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'write'} a={'invoice'}>\n                                <DropdownItem tag={Link} to={`/reimbursement/clone/${row.id}`} className='w-100' >\n                                  <Copy size={14} className='me-50' />\n                                  <span className='align-middle'>Duplicate</span>\n                                </DropdownItem>\n                              </Can>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  )\n                })\n                }\n              </tbody>\n            </Table>\n            <CustomPagination />\n          </div>\n          {sendSidebarOpen &&\n            <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} invoice={selectedData} />\n          }\n        </Card>\n      </UILoader>\n    </div>\n  )\n}\n\nexport default InvoiceList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}