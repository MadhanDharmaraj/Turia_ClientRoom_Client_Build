{"version":3,"sources":["views/apps/team/add/RoleCards.js","views/apps/team/add/AddCard.js","views/apps/team/add/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["RoleCards","permissions","useState","modules","setModules","useEffect","axios","post","then","res","data","catch","className","xs","responsive","map","module","index","name","type","id","slug","value","defaultChecked","indexOf","disabled","for","activeOrgId","activeOrganizationid","userId","orgUserId","AddCard","block","setBlock","Loader","dispatch","useDispatch","navigate","useNavigate","store","useSelector","state","team","schema","yup","shape","createdBy","default","organizationId","firstName","required","lastName","nullable","contactNo","max","min","userTypeId","email","designationId","roleId","invitedAt","moment","unix","recurringFlag","expiryDate","add","departmentId","isRegistered","invitedBy","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","setError","departmentOptions","setDepartmentOptions","designationOptions","setDesignationOptions","rolesOptions","setRolesOptions","setPermissions","setRoleId","designations","departments","roles","rolepermission","split","onSubmit","_formValues","addUser","teamErrors","Object","keys","obj","message","blocking","loader","md","sm","size","render","field","invalid","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","val","getOptionLabel","option","getOptionValue","length","color","outline","tag","Link","to","TeamAdd","xl","UILoader","props","children","overlayColor","Tag","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/74.db433b2c.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\nconst RoleCards = ({ permissions }) => {\n\n  const [modules, setModules] = useState([])\n\n  const getModules = () => {\n    axios.post('/modules/list').\n      then((res) => {\n        setModules(res.data.modules)\n      }).catch(() => { })\n  }\n\n  useEffect(() => {\n    setModules([])\n    getModules()\n  }, [permissions])\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody className='p-0'>\n          <Row >\n            <Col xs={12}>\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  {modules.map((module, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{module.name}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${module.slug}`} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled />\n                              <Label className='form-check-label' for={`read-${module.slug}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${module.slug}`} value={`${module.slug}-write`} defaultChecked={permissions.indexOf(`${module.slug}-write`) > -1} disabled />\n                              <Label className='form-check-label' for={`write-${module.slug}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`delete-${module.slug}`} value={`${module.slug}-delete`} defaultChecked={permissions.indexOf(`${module.slug}-delete`) > -1} disabled />\n                              <Label className='form-check-label' for={`delete-${module.slug}`}>\n                                Delete\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`import-${module.slug}`} value={`${module.slug}-import`} defaultChecked={permissions.indexOf(`${module.slug}-import`) > -1} disabled />\n                              <Label className='form-check-label' for={`import-${module.slug}`}>\n                                import\n                              </Label>\n                            </div>\n                            <div className='form-check'>\n                              <Input type='checkbox' id={`export-${module.slug}`} value={`${module.slug}-export`} defaultChecked={permissions.indexOf(`${module.slug}-export`) > -1} disabled />\n                              <Label className='form-check-label' for={`export-${module.slug}`}>\n                                Export\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Link, useNavigate } from 'react-router-dom'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport RoleCards from './RoleCards'\nimport Select from 'react-select'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport { addUser } from '../store/index'\nimport { Row, Col, Card, Label, Button, CardBody, Input, FormFeedback } from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState, Fragment } from 'react'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n\nconst AddCard = () => {\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const store = useSelector(state => state.team)\n  // ** States\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    organizationId: yup.string().default(activeOrgId),\n    firstName: yup.string().required(\"Please Enter a First Name\"),\n    lastName: yup.string().nullable().default(\"\"),\n    name: yup.string(),\n    contactNo: yup.string().required(\"Please Enter a Conatct No\").max(10).min(10, \"Invalid Contact No\"),\n    userTypeId: yup.string().default(4),\n    email: yup.string().email(\"Please Enter valid Email\").required(\"Please Enter valid Email\"),\n    designationId: yup.string().required(\"Please Select Designation\"),\n    roleId: yup.string().required(\"Please Select Role\"),\n    invitedAt: yup.string().default(moment().unix()),\n    recurringFlag: yup.boolean().default(true),\n    expiryDate: yup.string().default(moment().add(5, 'days').unix()),\n    departmentId: yup.string().required(\"Please Select Department\"),\n    isRegistered: yup.boolean().default(false),\n    invitedBy: yup.string().default(userId)\n  })\n\n  const { handleSubmit, control, formState: { errors }, setError } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const [departmentOptions, setDepartmentOptions] = useState([])\n  const [designationOptions, setDesignationOptions] = useState([])\n  const [rolesOptions, setRolesOptions] = useState([])\n  const [permissions, setPermissions] = useState([])\n  const [roleId, setRoleId] = useState('')\n\n  const getRolePermissions = () => {\n    axios.post('/rolepermissions/list', { roleId }).\n      then((res) => {\n        setPermissions(res.data.rolepermission.permissions.split(','))\n      }).catch(() => { })\n  }\n\n  const getDesignation = () => {\n    axios.post('/designations/dropdown').\n      then((res) => {\n        setDesignationOptions(res.data.designations)\n      }).catch(() => { })\n  }\n\n  const getDepartment = () => {\n    axios.post('/departments/dropdown')\n      .then((res) => {\n        setDepartmentOptions(res.data.departments)\n      }).catch(() => { })\n  }\n\n  const getRoles = () => {\n    axios.post('/roles/dropdown').then((res) => { setRolesOptions(res.data.roles) }).catch(() => { })\n  }\n\n  useEffect(() => {\n    getDesignation()\n    getDepartment()\n    getRoles()\n  }, [])\n\n  useEffect(() => {\n    if (roleId !== '') {\n      getRolePermissions()\n    }\n  }, [roleId])\n\n\n  const onSubmit = async data => {\n    setBlock(true)\n    data['name'] = `${control._formValues.firstName} ${control._formValues.lastName}`\n    await dispatch(addUser(data))\n    navigate(`/team/list`)\n    // if (res.payload.id !== undefined) {\n    //   invitemail(res.payload.id)\n    // }\n  }\n\n  useEffect(() => {\n    if (store.teamErrors !== null) {\n      setBlock(false)\n      Object.keys(store.teamErrors).map((obj) => {\n        setError(obj, { type: 'custom', message: store.teamErrors[obj][0] })\n      })\n    }\n  }, [store.teamErrors])\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)} >\n        <Card className='invoice-preview-card'>\n          {/* Header */}\n          <CardBody className='pb-0'>\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='firstName'>\n                    First Name\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='firstName'\n                      name='firstName'\n                      control={control}\n                      render={({ field }) => <Input invalid={errors.firstName && true} {...field} />}\n                    />\n                    {errors.firstName && <FormFeedback>{errors.firstName.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='lastName'>\n                    Last Name\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      id='lastName'\n                      name='lastName'\n                      render={({ field }) => (\n                        <Input type='text' invalid={errors.lastName && true} {...field} />\n                      )}\n                    />\n                    {errors.lastName && <FormFeedback>{errors.lastName.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='contactNo'>\n                    Conatct No\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='contactNo'\n                      name='contactNo'\n                      control={control}\n                      render={({ field }) => <Input invalid={errors.contactNo && true} {...field} />}\n                    />\n                    {errors.contactNo && <FormFeedback>{errors.contactNo.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='email'>\n                    Email\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      id='email'\n                      name='email'\n                      render={({ field }) => (\n                        <Input type='email' invalid={errors.email && true} {...field} />\n                      )}\n                    />\n                    {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='designationId'>\n                    Designation\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"designationId\"\n                      id=\"designationId\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.designationId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={designationOptions}\n                          value={designationOptions.find(c => { return c.id === value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.designationId && <FormFeedback className='text-danger'>{errors.designationId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='roleId'>\n                    Role\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"roleId\"\n                      id=\"roleId\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.roleId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={rolesOptions}\n                          value={rolesOptions.find(c => { return c.id === value })}\n                          onChange={val => { field.onChange(val.id); setRoleId(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.roleId && <FormFeedback className='text-danger'>{errors.roleId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='departmentId'>\n                    Department\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"departmentId\"\n                      id=\"departmentId\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.departmentId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={departmentOptions}\n                          value={departmentOptions.find(c => { return c.id === value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.departmentId && <FormFeedback className='text-danger'>{errors.departmentId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n\n            </Row>\n\n          </CardBody>\n\n          {permissions.length > 0 &&\n            <CardBody className='invoice-padding'>\n              <RoleCards permissions={permissions} />\n            </CardBody>\n          }\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button color='warning' outline tag={Link} to='/team/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form>\n    </UILoader>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TeamAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeamAdd\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}