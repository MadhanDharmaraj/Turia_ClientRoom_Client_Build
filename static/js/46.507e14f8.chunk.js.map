{"version":3,"sources":["views/components/import/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","@core/components/extensions-header/index.js"],"names":["Import","module","useParams","navigate","useNavigate","useState","block","setBlock","Loader","store","useSelector","state","importExcel","dispatch","useDispatch","name","setName","value","setValue","tableData","setTableData","finalData","setFinalData","filteredData","setFilteredData","getTableData","arr","useDropzone","multiple","onDrop","result","reader","FileReader","onload","fileData","wb","XLSX","type","cellDates","sheetName","Object","keys","Sheets","rowObj","sheet_to_row_object_array","range","decode_range","headers","C","s","c","e","addr","encode_cell","r","cell","push","v","toLowerCase","split","reduce","charAt","toUpperCase","slice","dataTemp","sheet_to_json","header","defval","rowJsonObj","forEach","col","temp","moment","Date","add","startOf","format","length","endsWith","readAsBinaryString","toast","error","className","style","minWidth","getRootProps","getInputProps","downloadExcelFormat","priority","recurringOptions","axios","post","then","res","clients","data","service","services","users","workbook","ExcelJS","worksheet","addWorksheet","worksheet2","obj","k","getCell","columns","key","dataValidation","allowBlank","formulae","xlsx","writeBuffer","excelBuffer","Blob","FileSaver","downloadClientExcelFormat","countries","gstregistrationtypes","businessentities","states","curencies","currencie","downloadServiceFormat","forms","serviceforms","taxgroups","exemptionreasons","downloadHolidaysSample","downloadSample","map","masters","passwordmasters","bankaccounts","transactionaccounts","options","roles","departments","designations","headArr","index","dataArr","renderTableBody","errflg","renderTd","ind","importErrors","err","i","useEffect","navigatePage","success","importRecords","moduleName","submodule","validationflag","importData","title","substring","blocking","loader","sm","md","onClick","size","href","preventDefault","tag","for","id","bsSize","onChange","target","filter","startsWithCondition","toString","startsWith","includesCondition","includes","handleFilter","responsive","head","outline","color","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner","ExtensionsHeader","link","rel","subTitle"],"mappings":"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","file":"static/js/46.507e14f8.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport * as ExcelJS from \"exceljs\"\nimport * as XLSX from 'xlsx'\nimport * as FileSaver from \"file-saver\"\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport { DownloadCloud, Users } from 'react-feather'\nimport { importData } from './store/index'\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label, Button } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport axios from '@src/configs/axios/axiosConfig'\nimport moment from 'moment'\n\nconst Import = () => {\n  // ** States\n  const { module } = useParams()\n  const navigate = useNavigate()\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const store = useSelector(state => state.importExcel)\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [value, setValue] = useState('')\n  const [tableData, setTableData] = useState([])\n  const [finalData, setFinalData] = useState([])\n  const [filteredData, setFilteredData] = useState([])\n\n  const getTableData = (arr, name) => {\n    setTableData(arr)\n    setName(name)\n  }\n\n  const formatColName = (str) => {\n\n    const ans = str.toLowerCase()\n\n    return ans.split(\" \").reduce((s, c) => s\n      + (c?.charAt(0).toUpperCase() + c.slice(1)))\n\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: result => {\n\n      const reader = new FileReader()\n      reader.onload = async () => {\n\n        setTableData([])\n        setName('')\n        const fileData = reader.result\n        const wb = XLSX.read(fileData, { type: 'binary', cellDates: true })\n\n        const sheetName = Object.keys(wb.Sheets)[0]\n        const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\n        const range = XLSX.utils.decode_range(wb.Sheets[sheetName]['!ref'])\n        const headers = []\n        for (let C = range.s.c; C <= range.e.c; ++C) {\n          const addr = XLSX.utils.encode_cell({ r: range.s.r, c: C })\n          const cell = wb.Sheets[sheetName][addr]\n          if (!cell) {\n            continue\n          }\n          headers.push(formatColName(cell.v))\n        }\n        const dataTemp = XLSX.utils.sheet_to_json(wb.Sheets[sheetName], { header: headers, cellDates: true, range: 1, defval: \"\" })\n\n        await getTableData(rowObj, result[0].name)\n        let rowJsonObj = dataTemp\n        if (module === 'tasks' || module === 'recurring-task') {\n          rowJsonObj = []\n          dataTemp.forEach((col) => {\n            const temp = col\n            if (typeof col['startDate'] === 'object') {\n              temp['startDate'] = moment(new Date(col['startDate'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n              temp['endDate'] = moment(new Date(col['endDate'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n            }\n            rowJsonObj.push(temp)\n          })\n        }\n\n        if (module === 'invoice' || module === 'reimbursement') {\n          rowJsonObj = []\n          dataTemp.forEach((col) => {\n            const temp = col\n            if (typeof col['invoiceDate'] === 'object') {\n              temp['invoiceDate'] = moment(new Date(col['invoiceDate'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n              temp['dueDate'] = moment(new Date(col['dueDate'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n            }\n            rowJsonObj.push(temp)\n          })\n        }\n\n        if (module === 'digitalsignatures' || module === 'license') {\n          rowJsonObj = []\n          dataTemp.forEach((col) => {\n            const temp = col\n            if (typeof col['issuedDate'] === 'object') {\n              temp['issuedDate'] = moment(new Date(col['issuedDate'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n              temp['expiryDate'] = moment(new Date(col['expiryDate'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n            }\n            rowJsonObj.push(temp)\n          })\n        }\n\n        if (module === 'holidays') {\n          rowJsonObj = []\n          dataTemp.forEach((col) => {\n            const temp = col\n            if (typeof col['date(dd/mm/y)'] === 'object') {\n              temp['date'] = moment(new Date(col['date(dd/mm/y)'])).add(1, 'd').startOf('d').format('DD/MM/Y')\n            }\n            rowJsonObj.push(temp)\n          })\n        }\n\n        await setFinalData(rowJsonObj)\n\n      }\n      if (result.length && result[0].name.endsWith('xlsx')) {\n        reader.readAsBinaryString(result[0])\n      } else {\n        toast.error(\n          () => (\n            <p className='mb-0'>\n              You can only upload <span className='fw-bolder'>.xlsx</span>, <span className='fw-bolder'>.xls</span> &{' '}\n              <span className='fw-bolder'>.csv</span> Files!.\n            </p>\n          ),\n          {\n            style: {\n              minWidth: '380px'\n            }\n          }\n        )\n      }\n    }\n  })\n\n  const downloadExcelFormat = async () => {\n\n    const priority = [\"Low\", \"Medium\", \"High\"]\n    const recurringOptions = [\"Monthly\", \"Yearly\", \"Quarterly\"]\n    axios.post('/modules/taskutilities')\n      .then(async (res) => {\n\n        const clients = res.data.result.clients\n        const service = res.data.result.services\n        const users = res.data.result.users\n\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n\n        clients.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        service.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n        priority.forEach((obj, k) => { worksheet2.getCell(`C${k + 1}`).value = obj })\n        users.forEach((obj, k) => { worksheet2.getCell(`D${k + 1}`).value = obj })\n        users.forEach((obj, k) => { worksheet2.getCell(`E${k + 1}`).value = obj })\n        recurringOptions.forEach((obj, k) => { worksheet2.getCell(`H${k + 1}`).value = obj })\n        if (module === 'tasks') {\n          worksheet.columns = [\n            { header: 'Client', key: 'client' },\n            { header: 'Service', key: 'service' },\n            { header: 'Priority', key: 'priority' },\n            { header: 'Assignee', key: 'assignee' },\n            { header: 'Reviewer', key: 'reviewer' },\n            { header: 'Start Date', key: 'sartdate' },\n            { header: 'End Date', key: 'enddate' }\n          ]\n        } else if (module === 'recurring-task') {\n          worksheet.columns = [\n            { header: 'Client', key: 'client' },\n            { header: 'Service', key: 'service' },\n            { header: 'Priority', key: 'priority' },\n            { header: 'Assignee', key: 'assignee' },\n            { header: 'Reviewer', key: 'reviewer' },\n            { header: 'Start Date', key: 'sartdate' },\n            { header: 'End Date', key: 'enddate' },\n            { header: 'Recurring Duration', key: 'recurringduration' },\n            { header: 'Quarterly Dates', key: 'quarterlydates' }\n          ]\n        }\n\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${clients.length}`]\n        }\n\n        worksheet.getCell('B2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${service.length}`]\n        }\n\n        worksheet.getCell('C2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$C$1:C${priority.length}`]\n        }\n\n        worksheet.getCell('D2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$D$1:D${users.length}`]\n        }\n\n        worksheet.getCell('E2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$E$1:E${users.length}`]\n        }\n\n        if (module === 'recurring-task') {\n          worksheet.getCell('H2').dataValidation = {\n            type: 'list',\n            allowBlank: true,\n            formulae: [`'Sheet 2'!$H$1:H${recurringOptions.length}`]\n          }\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Task_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadClientExcelFormat = async () => {\n\n    axios.post('/modules/clientutilities')\n      .then(async (res) => {\n\n        const countries = res.data.result.countries\n        const gstregistrationtypes = res.data.result.gstregistrationtypes\n        const businessentities = res.data.result.businessentities\n        const states = res.data.result.states\n        const users = res.data.result.users\n        const curencies = res.data.result.currencie\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n\n        businessentities.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        states.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n        countries.forEach((obj, k) => { worksheet2.getCell(`C${k + 1}`).value = obj })\n        gstregistrationtypes.forEach((obj, k) => { worksheet2.getCell(`D${k + 1}`).value = obj })\n        users.forEach((obj, k) => { worksheet2.getCell(`E${k + 1}`).value = obj })\n        curencies.forEach((obj, k) => { worksheet2.getCell(`F${k + 1}`).value = obj })        \n\n        worksheet.columns = [\n          { header: 'Business Name', key: 'businessname' },\n          { header: 'Client Name', key: 'clientname' },\n          { header: 'Email', key: 'email' },\n          { header: 'Contact Number ', key: 'contactnumber' },\n          { header: 'Business Entity', key: 'businessentity' },\n          { header: 'Assign User', key: 'assignuser' },\n          { header: 'Place Of Supply', key: 'placeofsupply' },\n          { header: 'Currency', key: 'currency' },\n          { header: 'GSTIN', key: 'gstin' },\n          { header: 'GST Resgitered Type', key: 'gstregisteredtype' },\n          { header: 'Address Line 1', key: 'addressline1' },\n          { header: 'Addresss Line 2', key: 'addressline2' },\n          { header: 'City', key: 'city' },\n          { header: 'State', key: 'state' },\n          { header: 'Country', key: 'country' },\n          { header: 'ZIP Code', key: 'zipcode' },\n          { header: 'Contact Person Name 1', key: 'contactpersonname1' },\n          { header: 'Contact Person Email 1', key: 'contactpersonname2' },\n          { header: 'Contact Person Contact 1', key: 'contactpersoncontact1' },\n          { header: 'Contact Person Designation 1', key: 'contactpersondesignation1' },\n          { header: 'Contact Person Primary Status 1', key: 'contactpersonprimarystatus1' },\n          { header: 'Contact Person Adhaar 1', key: 'contactpersonadhaar1' },\n          { header: 'Contact Person DIN 1', key: 'contactpersondin1' },\n          { header: 'Contact Person PAN 1', key: 'contactpersonpan1' },\n          { header: 'Registration No', key: 'registrationNo' }\n        ]\n\n        worksheet.getCell('E2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${businessentities.length}`]\n        }\n\n        worksheet.getCell('F2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$E$1:E${users.length}`]\n        }\n\n        worksheet.getCell('G2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${states.length}`]\n        }\n\n        worksheet.getCell('H2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$F$1:F${curencies.length}`]\n        }\n\n        worksheet.getCell('J2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$D$1:D${gstregistrationtypes.length}`]\n        }\n\n        worksheet.getCell('N2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${states.length}`]\n        }\n\n        worksheet.getCell('O2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$C$1:C${countries.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Client_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadServiceFormat = async () => {\n\n    axios.post('/modules/serviceutilities')\n      .then(async (res) => {\n\n        const forms = res.data.result.serviceforms\n        const taxgroups = res.data.result.taxgroups\n        const exemptionreasons = res.data.result.exemptionreasons\n\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n\n        forms.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        taxgroups.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n        exemptionreasons.forEach((obj, k) => { worksheet2.getCell(`C${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Service Name', key: 'servicename' },\n          { header: 'Professional Fee', key: 'fee' },\n          { header: 'Forms', key: 'foms' },\n          { header: 'Description ', key: 'description' },\n          { header: 'Tax Rate', key: 'taxgroup' },\n          { header: 'Exemption Reason', key: 'exemptionReason' },\n          { header: 'SAC Code', key: 'saccode' }\n        ]\n\n        worksheet.getCell('C2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${forms.length}`]\n        }\n\n        worksheet.getCell('E2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${taxgroups.length}`]\n        }\n\n        worksheet.getCell('F2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$C$1:C${exemptionreasons.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Service_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadSubTaskSample = () => {\n\n    axios.post('/services/dropdown')\n      .then(async (res) => {\n\n        const services = res.data.services.map((obj) => obj.name)\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n\n        services.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Service', key: 'service' },\n          { header: 'Name', key: 'name' },\n          { header: 'Description', key: 'description' },\n          { header: 'Task Index', key: 'taskIndex' }\n        ]\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${services.length}`]\n        }\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'SubTask_SampleData.xlsx')\n      })\n  }\n\n  const downloadPasswordSample = () => {\n\n    axios.post('/modules/passwordmanage')\n      .then(async (res) => {\n\n        const masters = res.data.result.passwordmasters\n        const clients = res.data.result.clients\n\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n\n        clients.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        masters.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Client', key: 'client' },\n          { header: 'Password Master', key: 'passwordmaster' },\n          { header: 'Username', key: 'username' },\n          { header: 'Password', key: 'password' },\n          { header: 'remarks', key: 'remarks' }\n        ]\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${clients.length}`]\n        }\n\n        worksheet.getCell('B2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${masters.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Password_Manager_SampleData.xlsx')\n      })\n  }\n\n  const downloadHolidaysSample = async () => {\n\n    const workbook = new ExcelJS.Workbook()\n\n    const worksheet = workbook.addWorksheet('Sheet 1')\n\n    worksheet.columns = [\n      { header: 'Name', key: 'name' },\n      { header: 'Date (DD/MM/Y)', key: 'date' },\n      { header: 'Comments', key: 'comments' }\n    ]\n\n    const excelBuffer = await workbook.xlsx.writeBuffer()\n\n    const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n    FileSaver.saveAs(data, 'Holidays_SampleData.xlsx')\n  }\n\n  const downloadInvoiceSample = () => {\n\n    axios.post('/modules/invoiceutilities')\n      .then(async (res) => {\n\n        const users = res.data.result.users\n        const clients = res.data.result.clients\n        const services = res.data.result.services\n        const states = res.data.result.states\n        const bankaccounts = res.data.result.transactionaccounts\n        const taxgroups = res.data.result.taxgroups\n        const exemptionreasons = res.data.result.exemptionreasons\n        const options = ['Proposal', 'Invoice']\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n        clients.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        bankaccounts.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n        users.forEach((obj, k) => { worksheet2.getCell(`C${k + 1}`).value = obj })\n        services.forEach((obj, k) => { worksheet2.getCell(`D${k + 1}`).value = obj })\n        taxgroups.forEach((obj, k) => { worksheet2.getCell(`E${k + 1}`).value = obj })\n        exemptionreasons.forEach((obj, k) => { worksheet2.getCell(`F${k + 1}`).value = obj })\n        states.forEach((obj, k) => { worksheet2.getCell(`G${k + 1}`).value = obj })\n        options.forEach((obj, k) => { worksheet2.getCell(`H${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Client', key: 'client' },\n          { header: 'Invoice Date', key: 'invoiceDate' },\n          { header: 'Due Date', key: 'dueDate' },\n          { header: 'Bank Account', key: 'bankAccount' },\n          { header: 'Employee', key: 'employees' },\n          { header: 'GSTIN', key: 'gstin' },\n          { header: 'Place Of Supply', key: 'placeofsupply' },\n          { header: 'Service', key: 'service' },\n          { header: 'Description', key: 'description' },\n          { header: 'SAC code', key: 'sacCode' },\n          { header: 'Tax Rate', key: 'taxRate' },\n          { header: 'Exemption Reason', key: 'exemptionReason' },\n          { header: 'Price', key: 'price' },\n          { header: 'Option', key: 'option' }\n        ]\n\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${clients.length}`]\n        }\n\n        worksheet.getCell('D2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${bankaccounts.length}`]\n        }\n\n        worksheet.getCell('E2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$C$1:C${users.length}`]\n        }\n\n        worksheet.getCell('G2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$G$1:G${services.length}`]\n        }\n\n        worksheet.getCell('H2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$D$1:D${taxgroups.length}`]\n        }\n\n        worksheet.getCell('K2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$E$1:E${taxgroups.length}`]\n        }\n\n        worksheet.getCell('L2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$F$1:F${exemptionreasons.length}`]\n        }\n\n        worksheet.getCell('N2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$H$1:H${exemptionreasons.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Invoice_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadReimbursementSample = () => {\n\n    axios.post('/modules/reimbursementutilities')\n      .then(async (res) => {\n\n        const users = res.data.result.users\n        const clients = res.data.result.clients\n        const services = res.data.result.services\n        const states = res.data.result.states\n        const bankaccounts = res.data.result.transactionaccounts\n\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n        clients.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        bankaccounts.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n        users.forEach((obj, k) => { worksheet2.getCell(`C${k + 1}`).value = obj })\n        services.forEach((obj, k) => { worksheet2.getCell(`D${k + 1}`).value = obj })\n        states.forEach((obj, k) => { worksheet2.getCell(`E${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Client', key: 'client' },\n          { header: 'Invoice Date', key: 'invoiceDate' },\n          { header: 'Due Date', key: 'dueDate' },\n          { header: 'Bank Account', key: 'bankAccount' },\n          { header: 'Employee', key: 'employees' },\n          { header: 'Place Of Supply', key: 'placeofsupply' },\n          { header: 'Service', key: 'service' },\n          { header: 'Description', key: 'description' },\n          { header: 'SAC code', key: 'sacCode' },\n          { header: 'Price', key: 'price' }\n\n        ]\n\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${clients.length}`]\n        }\n\n        worksheet.getCell('D2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${bankaccounts.length}`]\n        }\n\n        worksheet.getCell('E2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$C$1:C${users.length}`]\n        }\n\n        worksheet.getCell('F2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$E$1:E${states.length}`]\n        }\n\n        worksheet.getCell('G2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$D$1:D${services.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Reimbursement_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadTeamSample = () => {\n\n    axios.post('/modules/teamutilities')\n      .then(async (res) => {\n\n        const roles = res.data.result.roles\n        const departments = res.data.result.departments\n        const designations = res.data.result.designations\n\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n        roles.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n        departments.forEach((obj, k) => { worksheet2.getCell(`B${k + 1}`).value = obj })\n        designations.forEach((obj, k) => { worksheet2.getCell(`C${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'First Name', key: 'firstname' },\n          { header: 'Last Name', key: 'lastname' },\n          { header: 'Email', key: 'email' },\n          { header: 'Contact', key: 'contact' },\n          { header: 'Role', key: 'rolw' },\n          { header: 'Department', key: 'department' },\n          { header: 'Designation', key: 'designation' }\n\n        ]\n\n        worksheet.getCell('E2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${roles.length}`]\n        }\n\n        worksheet.getCell('F2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$B$1:B${departments.length}`]\n        }\n\n        worksheet.getCell('G2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$C$1:C${designations.length}`]\n        }\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'Team_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadLicenseSample = () => {\n\n    axios.post('/modules/taskutilities')\n      .then(async (res) => {\n        const clients = res.data.result.clients\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n        clients.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Client', key: 'client' },\n          { header: 'License Name', key: 'name' },\n          { header: 'License No', key: 'email' },\n          { header: 'Issued Date', key: 'issuedDate' },\n          { header: 'Expiry Date', key: 'expiryDate' }\n        ]\n\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${clients.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'License_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadDigitalsignaturesSample = () => {\n\n    axios.post('/modules/taskutilities')\n      .then(async (res) => {\n        const clients = res.data.result.clients\n        const workbook = new ExcelJS.Workbook()\n\n        const worksheet = workbook.addWorksheet('Sheet 1')\n\n        const worksheet2 = workbook.addWorksheet('Sheet 2')\n        clients.forEach((obj, k) => { worksheet2.getCell(`A${k + 1}`).value = obj })\n\n        worksheet.columns = [\n          { header: 'Client', key: 'client' },\n          { header: 'Name', key: 'name' },\n          { header: 'Email', key: 'email' },\n          { header: 'Mobile', key: 'mobile' },\n          { header: 'Issued Date', key: 'issuedDate' },\n          { header: 'Expiry Date', key: 'expiryDate' },\n          { header: 'Password', key: 'password' }\n        ]\n\n        worksheet.getCell('A2').dataValidation = {\n          type: 'list',\n          allowBlank: true,\n          formulae: [`'Sheet 2'!$A$1:A${clients.length}`]\n        }\n\n        const excelBuffer = await workbook.xlsx.writeBuffer()\n\n        const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n        FileSaver.saveAs(data, 'DigitalSignatures_SampleData.xlsx')\n      })\n\n  }\n\n  const downloadSample = () => {\n\n    switch (module) {\n      case 'tasks':\n      case 'recurring-task':\n        downloadExcelFormat()\n        break\n      case 'clients':\n        downloadClientExcelFormat()\n        break\n      case 'subtask':\n        downloadSubTaskSample()\n        break\n      case 'passwordmanage':\n        downloadPasswordSample()\n        break\n      case 'holidays':\n        downloadHolidaysSample()\n        break\n      case 'services':\n        downloadServiceFormat()\n        break\n      case 'invoice':\n        downloadInvoiceSample()\n        break\n      case 'digitalsignatures':\n        downloadDigitalsignaturesSample()\n        break\n      case 'license':\n        downloadLicenseSample()\n        break\n      case 'reimbursement':\n        downloadReimbursementSample()\n        break\n      case 'team':\n        downloadTeamSample()\n        break\n      default:\n        break\n    }\n\n  }\n\n  const handleFilter = e => {\n    const data = tableData\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const keys = Object.keys(col)\n\n        const startsWithCondition = keys.filter(key => {\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\n        })\n\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\n\n        if (startsWithCondition.length) return col[startsWithCondition]\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    } else {\n      return null\n    }\n  }\n  /*eslint-disable */\n  const headArr = tableData.length\n    ? tableData.map((col, index) => {\n      if (index === 0) return [...Object.keys(col)]\n      else return null\n    })\n    : []\n  /*eslint-enable */\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\n\n  const renderTableBody = () => {\n    if (dataArr !== null && dataArr.length) {\n\n      return dataArr.map((col, index) => {\n        let errflg = false\n        const keys = Object.keys(col)\n        keys.push('Error')\n        if (module === 'tasks' || module === 'recurring-task') {\n          if (typeof col['Start Date'] === 'object') {\n            col['Start Date'] = moment(new Date(col['Start Date'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n            col['End Date'] = moment(new Date(col['End Date'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n          }\n        }\n        if (module === 'invoice' || module === 'reimbursement') {\n          if (typeof col['Invoice Date'] === 'object') {\n            col['Invoice Date'] = moment(new Date(col['Invoice Date'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n            col['Due Date'] = moment(new Date(col['Due Date'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n          }\n        }\n        if (module === 'digitalsignatures' || module === 'license') {\n          if (typeof col['Issued Date'] === 'object') {\n            col['Issued Date'] = moment(new Date(col['Issued Date'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n            col['Expiry Date'] = moment(new Date(col['Expiry Date'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n          }\n        }\n        if (module === 'holidays') {\n          if (typeof col['Date (DD/MM/Y)'] === 'object') {\n            col['Date (DD/MM/Y)'] = moment(new Date(col['Date (DD/MM/Y)'])).add(1, 'd').startOf('d').format('MMM DD, Y')\n          }\n        }\n        const renderTd = keys.map((key, ind) => {\n          if (store.importErrors.length > 0) {\n            errflg = Object.keys(store.importErrors[index]).length > 0\n          }\n          if (key === 'Error') {\n            return <td key={ind} className='text-warning'>\n              {store.importErrors.length > 0 && store.importErrors[index].map((err, i) => <p className='text-sm' key={i}>{err}</p>)}\n            </td>\n          } else {\n            return <td key={ind}>{col[key]}</td>\n          }\n        }\n        )\n        return <tr className={errflg ? 'bg-light-warning' : ''} key={index}>{renderTd}</tr>\n      })\n    } else {\n      return null\n    }\n  }\n\n  useEffect(() => {\n    if (store.importErrors.length > 0) {\n      renderTableBody()\n    }\n  }, [store.importErrors])\n\n\n  const renderTableHead = () => {\n    if (headArr.length) {\n      headArr[0].push('Error')\n      return headArr[0].map((head, index) => {\n        return <th key={index}>{head}</th>\n      })\n    } else {\n      return null\n    }\n  }\n\n  const navigatePage = async () => {\n    if (store.importErrors.length === 0) {\n      await toast.success('Imported SuccessFully')\n      if (module === 'holidays') {\n        navigate('/attendancesetting/holidays')\n      } else if (module === 'tasks') {\n        navigate('/task/list')\n      } else if (module === 'passwordmanage') {\n        navigate('/clients/list')\n      } else if (module === 'subtask') {\n        navigate('/services/list')\n      } else if (module === 'license' || module === 'digitalsignatures') {\n        navigate('/clients/list')\n      } else {\n        navigate(`/${module}/list`)\n      }\n    } else {\n      await toast.error('Imported Failed, Please Fix Errors')\n    }\n  }\n\n  const importRecords = async () => {\n    setBlock(true)\n    let moduleName = module\n    if (module === 'invoice') moduleName = 'taskinvoices'\n    else if (module === 'reimbursement') moduleName = 'reimbursementinvoice'\n    else if (module === 'license') moduleName = 'digitalsignatures'\n    else if (module === 'team') moduleName = 'organizationusers'\n\n    const obj = {\n      data: finalData,\n      module: moduleName === 'subtask' ? 'workflows' : moduleName,\n      submodule: module === 'license' ? `licenseimport` : 'import',\n      validationflag: false\n    }\n    await dispatch(importData(obj))\n    setBlock(false)\n\n\n    navigatePage()\n  }\n\n  useEffect(async () => {\n    if (finalData !== null && finalData.length > 0) {\n      setBlock(true)\n      let moduleName = module\n      if (module === 'invoice') moduleName = 'taskinvoices'\n      else if (module === 'reimbursement') moduleName = 'reimbursementinvoice'\n      else if (module === 'license') moduleName = 'digitalsignatures'\n      else if (module === 'team') moduleName = 'organizationusers'\n      const obj = {\n        data: finalData,\n        module: moduleName === 'subtask' ? 'workflows' : moduleName,\n        submodule: module === 'license' ? `licenseimport` : 'import',\n        validationflag: true\n      }\n      await dispatch(importData(obj))\n      setBlock(false)\n    }\n  }, [finalData])\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title={`${module === 'passwordmanage' ? 'Import Password Manager' : `Import ${module?.charAt(0).toUpperCase() + module.substring(1)}`}`}\n      />\n      <UILoader blocking={block} loader={<Loader />}>\n        <Row className='import-component'>\n          <Row>\n            <Col sm='12' md='9'>\n              <Card>\n                <CardBody>\n                  <Col sm='12' md='3' className='py-50'>\n                    <span className='text-primary cursor-pointer' onClick={() => { downloadSample() }}> Download Sample Excel</span>\n                  </Col>\n                  <Row>\n                    <Col sm='12'>\n                      <div {...getRootProps({ className: 'dropzone' })}>\n                        <input {...getInputProps()} />\n                        <div className='d-flex align-items-center justify-content-center flex-column'>\n                          <DownloadCloud size={64} />\n                          <h5>Drop Files here or click to upload</h5>\n                          <p className='text-secondary'>\n                            Drop files here or click{' '}\n                            <a href='/' onClick={e => e.preventDefault()}>\n                              browse\n                            </a>{' '}\n                            thorough your machine\n                          </p>\n                        </div>\n                      </div>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          {tableData.length ? (\n            <Col sm='12'>\n              <Card>\n                <CardHeader className='justify-content-between flex-wrap'>\n                  <CardTitle tag='h4'>{name}</CardTitle>\n                  <div className='d-flex align-items-center justify-content-end'>\n                    <Label for='search-input' className='me-1'>\n                      Search\n                    </Label>\n                    <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\n                  </div>\n                </CardHeader>\n                <Table className='table-hover-animation' responsive>\n                  <thead>\n                    <tr>{renderTableHead()}</tr>\n                  </thead>\n                  <tbody>{renderTableBody()}</tbody>\n                </Table>\n              </Card>\n            </Col>\n          ) : null}\n        </Row>\n\n        <Row className='px-1'>\n          <Card className='p-1'>\n            <Col>\n              <Button outline color='warning' onClick={navigatePage}>Cancel</Button>\n              {\n                tableData.length > 0 &&\n                <Button color='primary' className='ms-1' onClick={() => { importRecords() }}>Import</Button>\n\n              }\n            </Col>\n          </Card>\n        </Row>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default Import\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}