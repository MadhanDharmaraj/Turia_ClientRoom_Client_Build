{"version":3,"sources":["views/pages/authentication/Login.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["OTPInput","length","counter","otpfn","useState","Array","fill","otp","setOtp","inputs","useRef","seconds","setSeconds","focusIndex","setFocusIndex","useEffect","interval","setInterval","clearInterval","current","focus","style","display","justifyContent","map","_","index","type","maxLength","value","onChange","e","target","match","newOtp","handleChange","onKeyDown","key","handleKeyDown","ref","el","className","RegisterBasic","block","setBlock","setType","verfiyCodesent","setVerifyCodeSent","Loader","dispatch","useDispatch","store","useSelector","state","register","VerifySchema","yup","shape","email","required","emailCode","matches","message","excludeEmptyString","acceptTermsAndCondition","oneOf","navigate","useNavigate","setEmail","search","useLocation","searchParams","URLSearchParams","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","errors","formState","setError","setValue","resend","obj","generateCode","onSubmit","data","verfiyCode","verifyError","Object","keys","accessToken","loginUser","handleLogin","listOrg","userId","id","usertype","res","org","payload","organizations","localStorage","setItem","JSON","stringify","clientid","sendCode","val","axios","post","then","toast","success","users","position","catch","err","error","response","get","userdata","parse","getItem","timer","setTimer","to","onClick","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fillRule","transform","d","opacity","points","tag","blocking","loader","k","sm","width","for","name","render","field","placeholder","classnames","disabled","color","join","defaultChecked","href","UILoader","props","children","overlayColor","Tag","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/59.ef685feb.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardBody, CardTitle, FormFeedback, Form, Label, Input, Button, Row, Col } from 'reactstrap'\n\n// ** React Imports\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\n\n// ** Custom Hooks\nimport classnames from 'classnames'\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\n\nimport { verfiyCode, generateCode, listOrg } from './register-multi-steps/store/index'\n// ** Actions\nimport { handleLogin } from '@store/authentication'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport toast from 'react-hot-toast'\n\nconst OTPInput = ({ length = 6, counter, otpfn }) => {\n  const [otp, setOtp] = useState(Array(length).fill(''))\n  const inputs = useRef([])\n  const [seconds, setSeconds] = useState(59)\n  const [focusIndex, setFocusIndex] = useState(-1)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1)\n        counter(seconds - 1)\n      }\n\n      if (seconds === 0) {\n        clearInterval(interval)\n      }\n    }, 1000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  })\n\n  const handleChange = (e, index) => {\n    const { value } = e.target\n\n    // Only allow single digit input\n    if (value.match(/^\\d$/)) {\n      const newOtp = [...otp]\n      newOtp[index] = value\n      setOtp(newOtp)\n      otpfn(newOtp)\n      // Move focus to the next input\n      if (index < length - 1) {\n        setFocusIndex(index + 1)\n        inputs.current[index + 1].focus()\n      }\n    }\n\n    // Move focus to previous input on backspace\n    if (value === '') {\n      const newOtp = [...otp]\n      newOtp[index] = ''\n      setOtp(newOtp)\n      otpfn(newOtp)\n    }\n    if (value === '' && index > 0) {\n      setFocusIndex(index - 1)\n      inputs.current[index - 1].focus()\n    }\n  }\n\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace' && otp[index] === '') {\n      // Move focus to previous input on backspace if current input is empty\n      if (index > 0) {\n        setFocusIndex(index - 1)\n        inputs.current[index - 1].focus()\n      }\n    }\n  }\n\n  useEffect(() => {\n    inputs.current[focusIndex]?.focus()\n  }, [focusIndex])\n\n  return (\n    <Fragment>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {otp.map((_, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            maxLength=\"1\"\n            value={otp[index]}\n            onChange={(e) => handleChange(e, index)}\n            onKeyDown={(e) => handleKeyDown(e, index)}\n            ref={(el) => (inputs.current[index] = el)}\n            className='width-15-per mx-50 text-center form-control'\n          />\n        ))}\n      </div>\n    </Fragment>\n  )\n}\n\nconst RegisterBasic = () => {\n\n  // ** Hooks \n  const [block, setBlock] = useState(false)\n  const [type, setType] = useState(1)\n  const [verfiyCodesent, setVerifyCodeSent] = useState(false)\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const codeRegExp = /^[0-9\\- ]{4,4}$/\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.register)\n  const VerifySchema = yup.object().shape({\n    email: yup.string().required('Email required'),\n    emailCode: yup.string().required('Please Enter Verify Code').matches(codeRegExp, { message: 'Please Enter Valid verify Code', excludeEmptyString: true }),\n    acceptTermsAndCondition: yup.boolean().oneOf([true], 'Please Accept terms and Condition')\n  })\n  const navigate = useNavigate()\n  const [email, setEmail] = useState('')\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }, setError, setValue\n  } = useForm({\n    defaultValues: { emailCode: '', acceptTermsAndCondition: true },\n    resolver: yupResolver(VerifySchema)\n  })\n\n  const resend = async () => {\n    const obj = { email }\n    await dispatch(generateCode(obj))\n  }\n\n  const onSubmit = async data => {\n    data.type = type\n    if (data.emailCode && data.emailCode.length > 0) {\n      setBlock(true)\n      await dispatch(verfiyCode(data))\n      setBlock(false)\n    }\n  }\n  useEffect(async () => {\n\n    if (store.verifyError !== null) {\n      setBlock(false)\n      Object.keys(store.verifyError).map((obj) => {\n        setError(obj, { type: 'custom', message: store.verifyError[obj][0] })\n      })\n    }\n  }, [store.verifyError])\n\n  useEffect(async () => {\n    if (store.accessToken) {\n      const data = {}\n      data['users'] = store.loginUser\n      data['token'] = store.accessToken\n      await dispatch(handleLogin(data))\n\n      const res = await dispatch(listOrg({ userId: store.loginUser?.id, type: store.loginUser?.usertype }))\n      const org = res.payload.organizations[0]\n      localStorage.setItem('activeOrganization', JSON.stringify(org))\n      if (org?.clientid) {\n        localStorage.setItem('clientId', org?.clientid)\n        navigate('/master')\n      } else {\n        navigate('/clients/list')\n      }\n\n\n    }\n  }, [store.accessToken])\n\n  const sendCode = (val) => {\n\n    if (email) {\n      setBlock(true)\n      axios.post('/users/sendcode', { email: val ?? email, type })\n        .then((res) => {\n          setVerifyCodeSent(true)\n          setBlock(false)\n          toast.success(res.data.users, { position: 'bottom-right' })\n        })\n        .catch((err) => {\n          setBlock(false)\n          toast.error(err.response.data.errors, { position: 'bottom-right' })\n        })\n    }\n\n  }\n\n  useEffect(() => {\n    if (!searchParams.get('email')) {\n      navigate('/login')\n    } else {\n      setEmail(searchParams.get('email'))\n      sendCode(searchParams.get('email'))\n      setValue('email', searchParams.get('email'))\n    }\n  }, [])\n\n  useEffect(async () => {\n    const userdata = JSON.parse(localStorage.getItem('userData'))\n    const token = localStorage.getItem('accessToken')\n    if (token && userdata) {\n      navigate('/clients/list')\n    }\n  }, [])\n\n  const [timer, setTimer] = useState(0)\n  const counter = (val) => {\n    setTimer(val)\n  }\n\n  const otpfn = (val) => {\n    setValue('emailCode', val.join(''))\n  }\n\n  return (\n    <div className='auth-wrapper auth-basic px-2'>\n      <div className='auth-inner my-2'>\n        <Card className='mb-0'>\n          <CardBody>\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n              <svg viewBox='0 0 139 95' version='1.1' height='28'>\n                <defs>\n                  <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                    <stop stopColor='#000000' offset='0%'></stop>\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\n                  </linearGradient>\n                  <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                    <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\n                  </linearGradient>\n                </defs>\n                <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n                  <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                    <g id='Group' transform='translate(400.000000, 178.000000)'>\n                      <path\n                        d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                        id='Path'\n                        className='text-primary'\n                        style={{ fill: 'currentColor' }}\n                      ></path>\n                      <path\n                        d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                        id='Path'\n                        fill='url(#linearGradient-1)'\n                        opacity='0.2'\n                      ></path>\n                      <polygon\n                        id='Path-2'\n                        fill='#000000'\n                        opacity='0.049999997'\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                      ></polygon>\n                      <polygon\n                        id='Path-2'\n                        fill='#000000'\n                        opacity='0.099999994'\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                      ></polygon>\n                      <polygon\n                        id='Path-3'\n                        fill='url(#linearGradient-2)'\n                        opacity='0.099999994'\n                        points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                      ></polygon>\n                    </g>\n                  </g>\n                </g>\n              </svg>\n              <h2 className='brand-text text-primary ms-1'>Turia</h2>\n            </Link>\n            <CardTitle tag='h4' className='mb-1'>\n              Welcome Turia Books 🚀\n            </CardTitle>\n\n            <Form className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <UILoader blocking={block} loader={<Loader />}>\n                <p>Please check mail inbox and spam folder for verification code</p>\n                {Object.keys(errors).map((obj, k) => {\n                  return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n                })}\n\n                <Row className='gx-2 mb-1'>\n                  {\n                    !verfiyCodesent &&\n                    <Fragment>\n                      <Col sm={12} className='mb-1'>\n                        <Input\n                          type='select'\n                          id='rows-per-page'\n                          className='w-100 mb-1'\n                          value={type}\n                          onChange={(e) => setType(e.target.value)}\n                          style={{ width: '5rem' }}\n                        >\n                          <option value='1'>Auditor</option>\n                          <option value='2'>Client</option>\n                        </Input>\n                      </Col>\n\n                      <Col sm={12} className='mb-1'>\n                        <Label className='form-label' for='email'>\n                          Email\n                        </Label>\n                        <Controller\n                          name='email'\n                          control={control}\n                          render={({ field }) => (\n                            <Input\n                              {...field}\n                              type='email'\n                              id='email'\n                              placeholder='jhon@email.com'\n                              onChange={(e) => { setEmail(e.target.value); setValue('email', e.target.value) }}\n                              className={classnames('form-control', { 'is-invalid': errors.email })}\n                            />\n                          )}\n                        />\n\n                        <Col>\n                          {errors.email && <FormFeedback>{errors.email?.message} </FormFeedback>}\n                        </Col>\n                        <div className='form-check mb-1 mt-1'>\n                          <Input type='checkbox' id='terms' />\n                          <Label className='form-check-label' for='terms'>\n                            Remember me\n                          </Label>\n                        </div>\n                        <Button disabled={!email} className='mt-1' color='primary' block onClick={() => { sendCode() }}>\n                          Send OTP\n                        </Button>\n                      </Col>\n                    </Fragment>\n                  }\n                  {verfiyCodesent &&\n                    <Fragment>\n                      <span className='font-small-3 text-primary'>{email}</span>\n                      <Col sm={12} className='mb-1'>\n\n                        <OTPInput length={4} counter={counter} otpfn={otpfn} />\n                        <Row className='d-flex justify-content-between'>\n                          <Col>\n                            {errors.emailCode && <FormFeedback>{errors.emailCode?.message} </FormFeedback>}\n                          </Col>\n                          <Col className='d-flex justify-content-end mt-50'>\n                            <span aria-disabled={timer > 0} className='text-primary cursor-pointer' onClick={() => { resend() }}>Resend\n                              {timer > 0 && <span> ({timer})</span>}\n                            </span>\n                          </Col>\n                        </Row>\n\n                      </Col>\n                      {errors['action'] && <p className='text-danger'>{errors['action']?.message}</p>}\n                      {errors['emailCode'] && <p className='text-danger'>{errors['emailCode']?.message}</p>}\n                      <Col sm={12} className='mb-1 '>\n                        <div className='form-check form-check-inline'>\n                          <Controller\n                            name='acceptTermsAndCondition'\n                            control={control}\n                            render={({ field }) => (\n                              <Input\n                                {...field}\n                                type='checkbox'\n                                defaultChecked={true}\n                                name='acceptTermsAndCondition'\n                                id='acceptTermsAndCondition'\n\n                              />\n                            )}\n                          />\n\n                          <Label className={classnames('form-label', { 'text-danger': errors.emailCode })}>\n                            <p>By choosing <b>Submit</b> you agree to <b>Turia's <a href=\"https://www.turia.in/terms\">Terms of Use</a>, <a href=\"https://www.turia.in/privacy\">Privacy</a> and <a href=\"https://www.turia.in/privacy\">Data Protection Policies</a>.</b></p>\n                          </Label>\n                        </div>\n\n                      </Col>\n                    </Fragment>\n                  }\n                </Row>\n                {verfiyCodesent &&\n                  <div className='d-flex justify-content-between mt-2'>\n                    <Button type='submit' color='primary' className='btn-next'>\n                      <span className='align-middle d-sm-inline-block d-none'>Submit</span>\n                    </Button>\n                  </div>\n                }\n              </UILoader>\n            </Form>\n\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterBasic\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}