{"version":3,"sources":["views/apps/service/add/AddCardModal.js","views/apps/task/add/AddCard.js","views/apps/task/add/AddCardINTL.js","views/apps/task/add/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/apps/proposal/helper/hepler.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","activeOrg","activeOrganization","AddCard","serviceModal","serviceIdCallBack","useState","block","setBlock","Loader","colourStyles","multiValue","styles","backgroundColor","store","useSelector","state","service","formModal","setFormModal","dispatch","useDispatch","isTaxApplicable","setIsTaxApplicable","taxGroupOptions","setTaxGroupOptions","formOptions","setFormOptions","exemptionReasonOptions","setExemptionReasonOptions","formList","setFormList","schema","yup","shape","createdBy","default","categoryId","nullable","tat","categoryType","formslist","name","required","organizationId","taxGroupId","sellingPrice","exemptionReasonId","sacCode","description","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","setValue","setError","useEffect","axios","post","then","response","arr","data","taxgroups","exemptionreasons","serviceforms","Errors","Object","keys","map","obj","type","message","onSubmit","addService","datatemp","seviceId","payload","id","showExemption","val","nontaxableflag","handleForms","e","temp","Array","isArray","o","getRow","fieldLabel","fieldName","reqflag","className","sm","size","classnames","for","render","field","invalid","getSelectRow","options","ref","inputRef","classNamePrefix","value","find","c","onChange","getOptionLabel","option","getOptionValue","blocking","loader","isOpen","toggle","lg","md","isgstregistered","isMulti","color","outline","onClick","search","useLocation","searchParams","URLSearchParams","navigate","useNavigate","moment","unix","startDate","setStartDate","clientId","serviceId","forms","assignee","min","reviewer","clientAccessFlag","taskStatus","invoiceId","endDate","recurringFlag","priority","invoiceFlag","invoiceItems","of","price","convertionAmount","exemptioReasonId","actualPrice","subTotalAmount","taxes","when","is","task","invoicestore","invoice","get","fileClassNames","image","pdf","xlsx","xls","docx","doc","priorityOptions","assigneeUserOptions","setAssigneeUserOptions","reviewerUserOptions","setReviewerUserOptions","clientOptions","setClientOptions","serviceOptions","setServiceOptions","userOptions","setUserOptions","setinvoiceFlag","taxValues","setTaxValues","taskParticipants","seTaskParticipants","selectedClient","setSelectedClient","invoiceData","setInvoiceData","invoiceTaxes","setInvoiceTaxes","setInvoiceItems","finalTotal","setFinalTotal","finalSubTotal","setFinalSubTotal","taskDescription","setTaskDescription","finalTotalTaxAmount","setFinalTotalTaxAmount","useFieldArray","keyName","fields","append","remove","accountdetails","setAccountDeails","filesArr","setFilesArr","fileUploadProgress","setProgress","attachmentIds","setAttachmentsId","ability","useContext","AbilityContext","moveFiles","taskId","addTaskParticipants","rows","client","oj","_formValues","sendTaskNotification","length","comment","isDefault","addDescription","cloneWorkFlows","can","calculateTaxes","JSON","stringify","totalTaxAmount","String","dueAmount","totalAmount","addInvoice","addInvoiceItems","updateInvocieId","updatedBy","selEmployees","users","addInvoiceParticipant","resetInvoice","formatparticipants","user","predata","tempParticipants","forEach","push","undefined","taskcreateapproval","addTask","getServices","status","services","getClientData","getClient","res","getOrganizationUsers","organizationusers","catch","err","console","log","configUpload","headers","onUploadProgress","Math","round","loaded","total","uploadFiles","files","formData","FormData","file","key","attachment_ids","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","extension","split","pop","toast","error","getRootProps","getInputProps","getTaxValue","taxType","taxvalues","addItem","taxPrice","Invoicedata","acc","bankName","branchAddress","accountHolderName","ifscCode","accountNumber","billingaddresscountriesshorcode","billingaddresscity","billingaddressline1","billingaddressline2","billingaddressstatesname","billingaddresszip","currencyid","currenciessymbol","currenciescode","currenciesname","email","gstin","placeofsupplyid","addressline1","addressline2","organizationcity","statename","pinzipcode","organizationimageid","stateshortname","startOf","valueOf","taxtype","stateid","billingaddressstateothers","placeofsupplyothers","currencyConvert","toUpperCase","currencycode","ItemFinalTotalAmount","items","finalsubTotalAmount","finalTaxAmount","parseFloat","output","a","parser","flat","reduce","item","existItem","taxName","taxAmount","assign","calculateInvoiceTax","loadItemData","ind","service_price","tax_group_id","desFlg","priceFlg","sacFlg","taxFlg","itemFlg","eachObj","selectedService","saccode","sellingprice","taxgroupid","exemptionreasonid","calculateTaxAmount","invoice_item_taxes","taxGroups","taxApplicable","istaxapplicable","taxid","calculateTax","percentage","dataTemp","parseInt","toFixed","fileList","index","substr","filtered","filter","i","splice","handleRemoveFile","clients","transactionaccount","handleAssigneeChange","reviewerOptions","tempArr","x","id1","some","id2","handleReviwerChange","assigneeOptions","setServiceModal","OptionComponent","props","Option","tatTime","setTaTtime","setServiceDefault","taTvalue","endtime","add","k","components","onInput","target","rules","dateFormat","date","dateStr","handleStartDate","altInput","altFormat","Can","I","serId","enableInvoice","defaultChecked","rowid","tag","Link","to","TaxComponent","mainInd","refreshTax","itemAmount","parentaxCallback","addTaxItem","calTax","tax","taxamount","j","placeholder","setDate","setRefresTax","stateothers","subInd","main","subind","country","countryshortname","TaskAdd","xl","AddCardINTL","UILoader","children","overlayColor","Tag","style","defaultProps","ComponentSpinner","amount","taxRateInPercentage","TaxType","calculatedTax","str","parse","replace"],"mappings":"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","file":"static/js/57.49b950eb.chunk.js","sourcesContent":["import Select from \"react-select\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { addService } from '../store'\nimport axios from '@src/configs/axios/axiosConfig'\nimport classnames from 'classnames'\n\n// ** Reactstrap Importsz\nimport { Row, Col, Card, Label, Button, CardBody, Input, FormFeedback, CardTitle, CardHeader, Modal, ModalBody } from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState, Fragment } from \"react\"\nimport { activeOrganizationid, orgUserId, activeOrganization } from '@src/helper/sassHelper'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\nconst AddCard = ({ serviceModal, serviceIdCallBack }) => {\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n  const store = useSelector(state => state.service)\n  const [formModal, setFormModal] = useState(false)\n  const dispatch = useDispatch()\n  const [isTaxApplicable, setIsTaxApplicable] = useState(true)\n  const [taxGroupOptions, setTaxGroupOptions] = useState([])\n  const [formOptions, setFormOptions] = useState([])\n  const [exemptionReasonOptions, setExemptionReasonOptions] = useState([])\n  const [formList, setFormList] = useState([])\n\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    categoryId: yup.string().nullable(),\n    tat: yup.number().default(0),\n    categoryType: yup.number().default(1),\n    formslist: yup.array().default([]),\n    name: yup.string().required(\"Please Enter Service Name\"),\n    organizationId: yup.string().default(activeOrgId),\n    taxGroupId: yup.string().nullable(),\n    sellingPrice: yup.string().nullable(),\n    isTaxApplicable: yup.boolean().default(false),\n    exemptionReasonId: yup.string().nullable(),\n    sacCode: yup.string().nullable(),\n    description: yup.string().default('').nullable()\n  })\n\n  const { handleSubmit, control, formState: { errors }, setValue, setError } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const getExemptionReason = () => {\n    axios.post('/exemptionreasons/dropdown').then(response => {\n      const arr = response.data\n      setExemptionReasonOptions(arr.exemptionreasons)\n    })\n  }\n\n  const getForms = () => {\n    axios.post('/serviceforms/dropdown').then(response => {\n      const arr = response.data\n      setFormOptions(arr.serviceforms)\n    })\n  }\n\n  const getTaxGroups = () => {\n    axios.post('/taxgroups/dropdown').then(response => {\n      const arr = response.data\n      setTaxGroupOptions(arr.taxgroups)\n    })\n  }\n\n  useEffect(() => {\n    setFormModal(serviceModal)\n  }, [serviceModal])\n\n  useEffect(() => {\n\n    getTaxGroups()\n    getExemptionReason()\n    getForms()\n  }, [])\n\n  useEffect(() => {\n    if (store.Errors !== null) {\n      setBlock(false)\n      Object.keys(store.Errors).map((obj) => {\n        setError(obj, { type: 'custom', message: store.Errors[obj][0] })\n      })\n    }\n  }, [store.Errors])\n\n  const onSubmit = async (data) => {\n    setBlock(true)\n    const datatemp = await dispatch(addService(data))\n    const seviceId = datatemp.payload.id\n    if (seviceId) {\n      serviceIdCallBack(seviceId)\n      setFormModal(false)\n      setBlock(false)\n\n    }\n  }\n\n  const showExemption = (val) => {\n    if (val.nontaxableflag) {\n      setIsTaxApplicable(false)\n      setValue('isTaxApplicable', false)\n    } else {\n      setIsTaxApplicable(true)\n      setValue('exemptionReasonId', null)\n      setValue('isTaxApplicable', true)\n    }\n  }\n  const handleForms = (e) => {\n    setFormList(e)\n    const temp = Array.isArray(e) ? e.map((o) => o.id) : []\n    setValue('formslist', temp)\n  }\n  const getRow = (fieldLabel, fieldName, reqflag = false) => {\n    return (\n      <Row className='mb-1'>\n        <Label sm='3' size='lg' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName}>\n          {fieldLabel}\n        </Label>\n        <Col sm='9'>\n          <Controller\n            id={fieldName}\n            name={fieldName}\n            control={control}\n            render={({ field }) => <Input invalid={errors[fieldName] && true} {...field} />}\n          />\n          {errors[fieldName] && <FormFeedback>{errors[fieldName].message}</FormFeedback>}\n        </Col>\n      </Row>\n    )\n  }\n\n  const getSelectRow = (fieldLabel, fieldName, options, reqflag = false) => {\n    return (\n\n      <Row className='mb-1'>\n        <Label sm='3' size='lg' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName}>\n          {fieldLabel}\n        </Label>\n        <Col sm='9'>\n          <Controller\n            control={control}\n            name={fieldName}\n            id={fieldName}\n            render={({ field, ref }) => (\n              <Select\n                inputRef={ref}\n                className={classnames('react-select', { 'is-invalid': errors[fieldName] })}\n                {...field}\n                classNamePrefix='select'\n                options={options}\n                value={options.find(c => { return c.id === field.value })}\n                onChange={val => { field.onChange(val.id); if (fieldName === 'taxGroupId') { showExemption(val) } }}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n              />\n            )}\n\n          />\n          {errors[fieldName] && <FormFeedback className='text-danger'>{errors[fieldName]?.message}</FormFeedback>}\n        </Col>\n      </Row>\n\n    )\n  }\n\n  return (\n\n    <UILoader blocking={block} loader={<Loader />}>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered modal-dsc'>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Card className='invoice-preview-card'>\n              {/* Header */}\n              <CardHeader>\n                <CardTitle> Add Service</CardTitle>\n              </CardHeader>\n              <CardBody className='pb-0'>\n                <Row lg={12} sm={12}>\n                  <Col lg={6} sm={12} className='border border-start-0 border-top-0 border-bottom-0'>\n                    <Row>\n                      <Col md='12' className='mb-1'>\n                        {getRow('Service Name', 'name', true)}\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md='12' className='mb-1'>\n                        {getRow('Professional Fee', 'sellingPrice', false)}\n                      </Col>\n                    </Row>\n                    {activeOrg.isgstregistered &&\n                      <Fragment>\n                        <Row>\n                          <Col md='12' className='mb-1'>\n                            {getSelectRow('Tax Rate', 'taxGroupId', taxGroupOptions, false)}\n                          </Col>\n                        </Row>\n                        {!isTaxApplicable &&\n                          <Row>\n                            <Col md='12' className='mb-1'>\n                              {getSelectRow('Exemption Reason', 'exemptionReasonId', exemptionReasonOptions, false)}\n                            </Col>\n                          </Row>\n                        }\n                        <Row>\n                          <Col md='12' className='mb-1'>\n                            {getRow('SAC Code', 'sacCode', false)}\n                          </Col>\n                        </Row>\n                      </Fragment>\n                    }\n                  </Col>\n                  <Col lg={6} sm={12}>\n                    <Row className=\"mb-2\">\n                      <Label sm='3' size='lg' className={classnames(`form-label`)} for={'formslist'}>\n                        Forms\n                      </Label>\n                      <Col sm='9'>\n                        <Controller\n                          control={control}\n                          name={'formslist'}\n                          id={'formslist'}\n                          render={({ field, ref }) => (\n                            <Select\n                              inputRef={ref}\n                              className={classnames('react-select', { 'is-invalid': errors['formslist'] })}\n                              {...field}\n                              classNamePrefix='select'\n                              options={formOptions}\n                              isMulti\n                              onChange={handleForms}\n                              value={formList}\n                              getOptionLabel={(option) => option.name}\n                              getOptionValue={(option) => option.id}\n                              styles={colourStyles}\n                            />\n                          )}\n\n                        />\n                        {errors['formslist'] && <FormFeedback className='text-danger'>{errors['formslist']?.message}</FormFeedback>}\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md='12' className='mb-1'>\n                        {getRow('Turn Around Time(TAT)', 'tat', false)}\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md='12' className='mb-1'>\n                        <Row className='mb-1'>\n                          <Label sm='3' size='lg' className='form-label' for='description'>\n                            Description\n                          </Label>\n                          <Col sm='9'>\n                            <Controller\n                              id='description'\n                              name='description'\n                              control={control}\n                              render={({ field }) => <Input type=\"textarea\" invalid={errors.description && true} {...field} />}\n                            />\n                            {errors.description && <FormFeedback>{errors.description.message}</FormFeedback>}\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </CardBody>\n              {/* /Header */}\n            </Card>\n            <Card>\n              <CardBody>\n                <div className='modal-footer border-0'>\n                  <Button color='warning' outline onClick={() => { setFormModal(false) }}>\n                    Cancel\n                  </Button>\n                  <Button color='primary' type=\"submit\" >\n                    Save\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n\n          </form>\n        </ModalBody>\n      </Modal>\n    </UILoader>\n  )\n}\n\nexport default AddCard\n","// ** React Imports\nimport { useState, useEffect, Fragment, useContext } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\n// ** Custom Components\nimport classnames from 'classnames'\nimport { useDropzone } from 'react-dropzone'\nimport axios from '@src/configs/axios/axiosConfig'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Plus, Paperclip } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { Can } from '@src/utility/context/Can.js'\nimport { getClient, addTask, updateInvocieId, addTaskParticipants, addDescription, cloneWorkFlows, sendTaskNotification } from '../store'\nimport { addInvoice, addInvoiceItems, addInvoiceParticipant, resetInvoice } from '@src/views/apps/invoice/store/index.js'\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, CardText, FormFeedback, Input, CardHeader, Progress } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { currencyConvert } from '@src/helper/functionHelper.js'\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { activeOrganizationid, activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { calculateTax, parser } from '@src/views/apps/proposal/helper/hepler.js'\nimport moment from 'moment'\n\nconst activeOrgId = activeOrganizationid()\nconst activeOrg = activeOrganization()\nconst userId = orgUserId()\nimport AddService from '@src/views/apps/service/add/AddCardModal.js'\n\nconst AddCard = () => {\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n\n  const navigate = useNavigate()\n  const [startDate, setStartDate] = useState(moment().unix())\n\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    clientId: yup.string().required(\"Please select a Client\"),\n    serviceId: yup.string().required(\"Please select a Service\"),\n    forms: yup.array(),\n    assignee: yup.array().min(1, \"Please select Assignee\"),\n    reviewer: yup.array(),\n    clientAccessFlag: yup.boolean().default(false),\n    organizationId: yup.string().default(activeOrgId),\n    taskStatus: yup.number().default(1),\n    invoiceId: yup.string().default(0),\n    startDate: yup.string().required('Please Select Start Date').default(startDate),\n    endDate: yup.string(),\n    recurringFlag: yup.boolean().default(false),\n    priority: yup.string().nullable(),\n    invoiceFlag: yup.boolean().default(true),\n    invoiceItems: yup.array().of(\n      yup.object().shape({\n        serviceId: yup.string().required(\"Please Select Service Item\"),\n        invoiceId: yup.string(),\n        sacCode: yup.string(),\n        price: yup.string(),\n        convertionAmount: yup.string().default('0'),\n        organizationId: yup.string().default(activeOrgId),\n        exemptioReasonId: yup.string(),\n        actualPrice: yup.string().nullable(),\n        taxGroupId: yup.string().nullable(),\n        subTotalAmount: yup.string().nullable('Subtotal Should be Greater than 0'),\n        isTaxApplicable: yup.boolean().default(true),\n        taxes: yup.string()\n      })\n    ).when(\"invoiceFlag\", { is: (invoiceFlag) => invoiceFlag === true, then: yup.array().min(1, \"Require Atleast one Item when Proposal For this Task.\") })\n  })\n  const store = useSelector(state => state.task)\n  const invoicestore = useSelector(state => state.invoice)\n\n  const { handleSubmit, formState: { errors }, control, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  useEffect(() => {\n\n    if (searchParams.get('clientId')) {\n      setValue('clientId', searchParams.get('clientId'))\n    }\n    if ((searchParams.get('serviceId'))) {\n      setValue('serviceId', searchParams.get('serviceId'))\n    }\n\n  }, [searchParams])\n\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n  const priorityOptions = [\n    { id: 1, name: \"Low\" },\n    { id: 2, name: \"Medium\" },\n    { id: 3, name: \"High\" }\n  ]\n\n  const [assigneeUserOptions, setAssigneeUserOptions] = useState([])\n  const [reviewerUserOptions, setReviewerUserOptions] = useState([])\n\n  const dispatch = useDispatch()\n  const [clientOptions, setClientOptions] = useState([])\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [userOptions, setUserOptions] = useState([])\n  const [exemptionReasonOptions, setExemptionReasonOptions] = useState([])\n  const [taxGroupOptions, setTaxGroupOptions] = useState([])\n  const [invoiceFlag, setinvoiceFlag] = useState(true)\n  const [taxValues, setTaxValues] = useState([])\n  const [taskParticipants, seTaskParticipants] = useState([])\n  const [selectedClient, setSelectedClient] = useState({})\n  const [invoiceData, setInvoiceData] = useState({})\n  const [invoiceTaxes, setInvoiceTaxes] = useState([])\n  const [invoiceItems, setInvoiceItems] = useState([])\n  const [finalTotal, setFinalTotal] = useState(0)\n  const [finalSubTotal, setFinalSubTotal] = useState(0)\n  //const [convertionRate, setConvertedConvertionRate] = useState(0.00)\n  //const [convertedAmount, setConvertedAmount] = useState(0.00)\n  const [taskDescription, setTaskDescription] = useState('')\n  const [finalTotalTaxAmount, setFinalTotalTaxAmount] = useState(0)\n  const { fields, append, remove } = useFieldArray({ name: 'invoiceItems', keyName: 'rowid', control })\n  const [accountdetails, setAccountDeails] = useState(null)\n  const [filesArr, setFilesArr] = useState([])\n  //const [files, setFiles] = useState([])\n  const [fileUploadProgress, setProgress] = useState(0)\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const ability = useContext(AbilityContext)\n  const moveFiles = async () => {\n    const obj = { taskId: store.taskId, organizationId: activeOrgId, attachmentIds, createdBy: userId }\n    await axios.post('/google/movetaskfiles', obj).then(() => {\n\n    })\n  }\n\n  useEffect(async () => {\n    if (store.taskId !== null) {\n      const arr = taskParticipants.map((obj) => {\n        return { ...obj, taskId: store.taskId }\n      })\n      await dispatch(addTaskParticipants({ rows: arr }))\n\n      const client = clientOptions.find((oj) => oj.id === control._formValues.clientId)\n      const service = serviceOptions.find((oj) => oj.id === control._formValues.serviceId)\n      await dispatch(sendTaskNotification({ rows: arr, message: `New Task created for ${service?.name} to ${client.name}`, userId }))\n\n      if (taskDescription !== '' || attachmentIds.length > 0) {\n        const comment = {\n          comment: taskDescription,\n          taskId: store.taskId,\n          createdBy: userId,\n          organizationId: activeOrgId,\n          attachmentIds,\n          isDefault: true\n        }\n        await dispatch(addDescription(comment))\n      }\n\n      const obj = {\n        taskId: store.taskId,\n        serviceId: control._formValues.serviceId,\n        organizationId: activeOrgId,\n        createdBy: userId\n      }\n      await dispatch(cloneWorkFlows(obj))\n\n      if (attachmentIds.length > 0) {\n        await moveFiles()\n      }\n\n      if (invoiceFlag && (ability.can('write', 'invoice'))) {\n        const data = { ...invoiceData, calculateTaxes: JSON.stringify(invoiceTaxes), totalTaxAmount: String(finalTotalTaxAmount), dueAmount: String(finalTotal), totalAmount: String(finalTotal), subTotalAmount: String(finalSubTotal) }\n        await dispatch(addInvoice(data))\n      } else {\n        const id = store.taskId\n        navigate(`/task/view/${id}`)\n      }\n    }\n  }, [store.taskId])\n\n  useEffect(async () => {\n    if (invoiceFlag) {\n      if (invoicestore.invoiceId !== null) {\n        const temp = invoiceItems.map((obj) => {\n          return { ...obj, invoiceId: invoicestore.invoiceId }\n        })\n        await dispatch(addInvoiceItems(temp))\n        const invoiceId = invoicestore.invoiceId\n        const id = store.taskId\n        await dispatch(updateInvocieId({ updatedBy: userId, id, invoiceId }))\n\n        const selEmployees = taskParticipants.map((o) => o.userId)\n        const obj = { users: selEmployees, organizationId: activeOrgId, invoiceId }\n        await dispatch(addInvoiceParticipant(obj))\n        await dispatch(resetInvoice(null))\n        navigate(`/task/view/${id}`)\n      }\n    }\n  }, [invoicestore.invoiceId])\n\n  const formatparticipants = (user, type) => {\n    const obj = {\n      organizationId: activeOrgId,\n      userId: user,\n      type,\n      createdBy: userId\n    }\n    return obj\n  }\n\n  const onSubmit = async data => {\n    setBlock(true)\n    const temp = data.invoiceItems\n    setInvoiceItems(predata => ([...predata, ...temp]))\n    const tempParticipants = []\n    data.assignee.forEach((user) => {\n      tempParticipants.push(formatparticipants(user, 1))\n    })\n\n    if (data.reviewer !== undefined) {\n      data.reviewer.forEach((user) => {\n        tempParticipants.push(formatparticipants(user, 2))\n      })\n    }\n    if (activeOrg.taskcreateapproval) {\n      data.taskStatus = 8\n    }\n\n    seTaskParticipants(tempParticipants)\n    delete data.invoiceItems\n    delete data.assignee\n    delete data.reviewer\n\n    await dispatch(addTask(data))\n  }\n\n  const getExemptionReason = () => {\n    axios.post('/exemptionreasons/dropdown').then(response => {\n      const arr = response.data\n      setExemptionReasonOptions(arr.exemptionreasons)\n    })\n  }\n\n  const getClients = () => {\n    axios.post('/clients/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setClientOptions(arr.clients)\n    })\n  }\n\n  const getDefaultAccount = () => {\n    axios.post('/transactionaccounts/defaultaccount').then(response => {\n      setAccountDeails(response.data.transactionaccount)\n\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const addOpt = {\n        id: 'add-new',\n        name: 'Add New Service',\n        type: 'button',\n        color: 'flat-success'\n      }\n      const arr = [addOpt, ...response.data.services]\n      setServiceOptions(arr)\n    })\n  }\n\n  const getTaxGroups = () => {\n    axios.post('/taxgroups/dropdown').then(response => {\n      const arr = response.data\n      setTaxGroupOptions(arr.taxgroups)\n    })\n  }\n\n  const getClientData = async (id) => {\n    const res = await dispatch(getClient(id))\n    setSelectedClient(res.payload)\n  }\n\n  useEffect(() => {\n\n    if (searchParams.get('clientId') && Object.keys(selectedClient).length === 0) {\n      const clientId = searchParams.get('clientId')\n      setValue('clientId', clientId)\n      getClientData(clientId)\n    }\n    if (searchParams.get('serviceId')) {\n      setValue('serviceId', searchParams.get('serviceId'))\n    }\n\n  }, [searchParams])\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data\n      setReviewerUserOptions(arr.organizationusers)\n      setAssigneeUserOptions(arr.organizationusers)\n      setUserOptions(arr.organizationusers)\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    const formData = new FormData()\n    setBlock(true)\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n\n    axios.post('/google/taskfiles', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      setBlock(false)\n    }).catch((err) => { console.log(err) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        //setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const getTaxValue = (taxType) => {\n    const data = {\n      type: taxType\n    }\n    axios.post('/taxvalues/list', data).then(response => {\n      const arr = response.data\n      setTaxValues(arr.taxvalues)\n    })\n\n  }\n\n  const addItem = ((serId = '') => {\n    append({ invoiceId: 0, organizationId: activeOrgId, serviceId: serId, sacCode: '', actualPrice: 0, taxGroupId: '', subTotalAmount: 0, taxPrice: 0, description: '', isTaxApplicable: true })\n  })\n\n  useEffect(async () => {\n    if (Object.keys(selectedClient).length > 0) {\n      const Invoicedata = {}\n      const acc = accountdetails\n      Invoicedata['bankAccountBankName'] = acc?.bankName\n      Invoicedata['bankAccountBranchName'] = acc?.branchAddress\n      Invoicedata['bankAccountHolderName'] = acc?.accountHolderName\n      Invoicedata['bankAccountId'] = acc?.id\n      Invoicedata['bankAccountIfscCode'] = acc?.ifscCode\n      Invoicedata['bankAccountNumber'] = acc?.accountNumber\n      Invoicedata['isgstregistered'] = (activeOrg?.isgstregistered && selectedClient.billingaddresscountriesshorcode === 'IN')\n      Invoicedata['billingAddressCity'] = selectedClient.billingaddresscity\n      Invoicedata['billingAddressLine1'] = selectedClient.billingaddressline1\n      Invoicedata['billingAddressLine2'] = selectedClient.billingaddressline2 || ''\n      Invoicedata['billingAddressState'] = selectedClient.billingaddressstatesname || ''\n      Invoicedata['billingAddressZipCode'] = selectedClient.billingaddresszip\n      Invoicedata['billingCurrencyId'] = selectedClient.currencyid || activeOrg.currencyid\n      Invoicedata['billingCurrencySymbol'] = selectedClient.currenciessymbol\n      Invoicedata['billingCurrencyShortName'] = selectedClient.currenciescode\n      Invoicedata['billingCurrencyName'] = selectedClient.currenciesname\n      Invoicedata['contactEmail'] = selectedClient.email\n      Invoicedata['gstin'] = selectedClient.gstin\n      Invoicedata['isRcmApplicable'] = false\n      Invoicedata['contactName'] = selectedClient.name\n      Invoicedata['placeOfSupplyId'] = selectedClient.placeofsupplyid\n      Invoicedata['contactId'] = selectedClient.id\n      Invoicedata['organizationAddressLine1'] = activeOrg.addressline1\n      Invoicedata['organizationAddressLine2'] = activeOrg.addressline2\n      Invoicedata['organizationCity'] = activeOrg.organizationcity\n      Invoicedata['organizationState'] = activeOrg.statename\n      Invoicedata['organizationZipCode'] = activeOrg.pinzipcode\n      Invoicedata['organizationName'] = activeOrg.name\n      Invoicedata['organizationImageUrl'] = activeOrg.organizationimageid\n      Invoicedata['organizationStateCode'] = activeOrg.stateshortname\n      Invoicedata['organizationGstin'] = activeOrg.gstin\n      Invoicedata['createdBy'] = userId\n      Invoicedata['invoiceDate'] = moment().startOf('day').valueOf()\n      Invoicedata['organizationId'] = activeOrgId\n      Invoicedata['note'] = ''\n      Invoicedata['paymentStatus'] = 5\n      Invoicedata['status'] = 4\n      Invoicedata['paymentDue'] = moment().startOf('day').valueOf()\n      Invoicedata['convertionAmount'] = '0'\n      remove()\n      addItem()\n      if (activeOrg?.isgstregistered && selectedClient.billingaddresscountriesshorcode === 'IN') {\n        let taxtype = 1\n        if (activeOrg.stateid === selectedClient.placeofsupplyid) {\n          taxtype = 2\n        }\n        getTaxValue(taxtype)\n      } else {\n        Invoicedata['billingAddressStateOthers'] = selectedClient.billingaddressstateothers ?? ''\n        Invoicedata['placeOfSupplyOthers'] = selectedClient.placeofsupplyothers ?? ''\n      }\n      if (selectedClient.billingaddresscountriesshorcode !== 'IN') {\n        const temp = await currencyConvert(selectedClient.currenciescode.toUpperCase(), activeOrg.currencycode)\n        //setConvertedConvertionRate(temp)\n        Invoicedata['convertionAmount'] = temp ?? '0'\n      }\n\n      setInvoiceData(Invoicedata)\n\n    }\n\n  }, [selectedClient])\n\n  const calculateInvoiceTax = () => {\n\n    const inputArray = control._formValues.invoiceItems.map(a => parser(a.taxes))\n    let temp = []\n    temp = inputArray.flat()\n    let output = []\n    output = temp.reduce((acc, item) => {\n      if (item !== undefined) {\n        const existItem = acc.find((obj) => {\n          return item.taxName === obj.taxName\n        })\n        if (existItem) {\n          existItem.taxAmount = parseFloat(existItem.taxAmount) + parseFloat(item.taxAmount)\n        } else {\n          acc.push(Object.assign({}, item))\n        }\n      }\n      return acc\n    }, [])\n\n    setInvoiceTaxes(output)\n\n  }\n\n  const ItemFinalTotalAmount = () => {\n\n    const items = control._formValues.invoiceItems\n    let finalTotal = 0\n    let finalsubTotalAmount = 0\n    let finalTaxAmount = 0\n    items.forEach(obj => {\n      finalTotal = parseFloat(obj.subTotalAmount) + parseFloat(finalTotal)\n      finalsubTotalAmount = parseFloat(obj.price) + parseFloat(finalsubTotalAmount)\n      finalTaxAmount = parseFloat(finalTaxAmount) + parseFloat(obj.taxPrice)\n    })\n\n    setFinalTotal(finalTotal)\n\n    setFinalSubTotal(finalsubTotalAmount)\n    setFinalTotalTaxAmount(finalTaxAmount)\n    calculateInvoiceTax()\n  }\n\n  const removeItem = ((ind) => {\n    remove(ind)\n    ItemFinalTotalAmount()\n  })\n\n  const loadItemData = (ind, desFlg = false, priceFlg = false, sacFlg = false, taxFlg = false, itemFlg = false) => {\n    const eachObj = control._formValues.invoiceItems[ind] || {}\n\n    if (eachObj.serviceId === undefined || eachObj.serviceId === '') {\n      return false\n    }\n    let service_price, tax_group_id\n    const selectedService = serviceOptions.find((a) => a.id === eachObj.serviceId)\n    setValue(`invoiceItems[${ind}].serviceId`, eachObj.serviceId)\n    if (itemFlg) {\n      setValue(`invoiceItems[${ind}].sacCode`, selectedService.saccode)\n      service_price = selectedService.sellingprice || 0\n      tax_group_id = selectedService.taxgroupid\n      setValue(`invoiceItems[${ind}].actualPrice`, service_price)\n      setValue(`invoiceItems[${ind}].price`, String(selectedService.sellingprice) || 0)\n      setValue(`invoiceItems[${ind}].taxGroupId`, tax_group_id)\n      setValue(`invoiceItems[${ind}].description`, selectedService.description)\n      setValue(`invoiceItems[${ind}].exemptionReasonId`, selectedService.exemptionreasonid || '')\n    } else {\n      setValue(`invoiceItems[${ind}].sacCode`, sacFlg ? eachObj.sacCode : selectedService.saccode)\n      service_price = priceFlg ? eachObj.price : selectedService.sellingprice || 0\n      tax_group_id = taxFlg ? eachObj.taxGroupId : selectedService.taxgroupid\n      setValue(`invoiceItems[${ind}].price`, service_price)\n      setValue(`invoiceItems[${ind}].actualPrice`, String(selectedService.sellingprice) || 0)\n      setValue(`invoiceItems[${ind}].taxGroupId`, tax_group_id)\n      setValue(`invoiceItems[${ind}].description`, desFlg ? eachObj.description : selectedService.description)\n      setValue(`invoiceItems[${ind}].exemptionReasonId`, selectedService.exemptionreasonid || '')\n    }\n\n    let calculateTaxAmount = 0\n    const invoice_item_taxes = []\n\n    const taxGroups = taxGroupOptions.find((a) => a.id === tax_group_id)\n\n    let taxApplicable = taxGroups !== undefined ? !taxGroups.nontaxableflag : selectedService.istaxapplicable || false\n    taxApplicable = (taxApplicable && (activeOrg?.isgstregistered && (activeOrg?.isgstregistered && selectedClient.billingaddresscountriesshorcode === 'IN')))\n\n    setValue(`invoiceItems[${ind}].isTaxApplicable`, taxApplicable)\n\n    if (taxApplicable) {\n      if (taxGroups !== undefined) {\n        taxValues.forEach(obj => {\n          if (obj.taxid === tax_group_id) {\n            let temp = 0\n            temp = calculateTax(service_price, obj.percentage, 2)\n            calculateTaxAmount = parseFloat(calculateTaxAmount) + parseFloat(temp)\n            const dataTemp = {}\n            dataTemp[\"taxName\"] = `${obj.name} (${obj.percentage}%)`\n            dataTemp[\"taxId\"] = parseInt(obj.id)\n            dataTemp[\"taxNameValue\"] = obj.name\n            dataTemp[\"taxPercentage\"] = String(obj.percentage)\n            dataTemp[\"taxAmount\"] = String(temp)\n\n            invoice_item_taxes.push(dataTemp)\n          }\n        })\n      }\n    }\n\n    setValue(`invoiceItems[${ind}].subTotalAmount`, parseFloat(parseFloat(calculateTaxAmount || 0.00) + parseFloat(service_price || 0.00)).toFixed(2))\n    setValue(`invoiceItems[${ind}].taxPrice`, parseFloat(calculateTaxAmount).toFixed(2))\n    setValue(`invoiceItems[${ind}].taxes`, JSON.stringify(invoice_item_taxes))\n    setValue(`invoiceItems[${ind}].createdBy`, userId)\n\n    ItemFinalTotalAmount()\n\n  }\n\n  const enableInvoice = () => {\n\n    setinvoiceFlag(!invoiceFlag)\n    setValue('invoiceFlag', !invoiceFlag)\n    if (invoiceFlag) {\n      remove()\n    } else {\n      if (control._formValues.invoiceItems.length === 0) {\n        const serId = control._formValues.serviceId\n        addItem(serId)\n        setValue(`invoiceItems[0].serviceId`, serId)\n        loadItemData(0, false, false, false, false, true)\n      }\n    }\n  }\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    //setFiles(filtered)\n    setFilesArr(filtered)\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={4} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n      <X size={14} className='cursor-pointer' onClick={() => handleRemoveFile(file, index)} />\n    </Col>\n  ))\n\n  useEffect(() => {\n    getClients()\n    getServices()\n    getTaxGroups()\n    getDefaultAccount()\n    getOrganizationUsers()\n    getExemptionReason()\n    addItem()\n\n  }, [])\n\n  // handle onChange event of the dropdown\n  const handleAssigneeChange = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let reviewerOptions\n    if (tempArr.length > 0) {\n      reviewerOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { reviewerOptions = userOptions }\n\n    setReviewerUserOptions(reviewerOptions)\n    setValue(\"assignee\", tempArr)\n  }\n\n  const handleReviwerChange = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let assigneeOptions\n    if (tempArr.length > 0) {\n      assigneeOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { assigneeOptions = userOptions }\n\n    setAssigneeUserOptions(assigneeOptions)\n    setValue(\"reviewer\", tempArr)\n  }\n\n  const [serviceModal, setServiceModal] = useState(false)\n  // ** Custom Options Component\n  const OptionComponent = ({ data, ...props }) => {\n    if (data.type === 'button') {\n      return (\n        <Button className='text-start rounded-0 px-50' color={data.color} block onClick={() => setServiceModal(true)}>\n          <Plus className='font-medium-1 me-50' />\n          <span className='align-middle'>{data.name}</span>\n        </Button>\n      )\n    } else {\n      return <components.Option {...props}> {data.name} </components.Option>\n    }\n  }\n\n  const [tatTime, setTaTtime] = useState(0)\n\n  const setServiceDefault = async (serviceId) => {\n\n    if (!serviceId) return\n    const service = serviceOptions.find((obj) => obj.id === serviceId)\n    setValue('forms', service?.formslist ?? [])\n    const taTvalue = parseInt(service?.tat || 0)\n    setTaTtime(taTvalue)\n    const endtime = moment((startDate * 1000), 'x').add(taTvalue, 'days').valueOf()\n    setValue('endDate', String(endtime / 1000))\n    if (control._formValues.invoiceItems.length === 0) {\n      addItem(serviceId)\n    }\n    setValue(`invoiceItems[0].serviceId`, serviceId)\n    loadItemData(0, false, false, false, false, true)\n  }\n\n  const handleStartDate = (val) => {\n    setStartDate(val)\n    const endtime = moment((val * 1000), 'x').add(tatTime, 'days').valueOf()\n    setValue('endDate', String(endtime / 1000))\n  }\n\n  const serviceIdCallBack = async (id) => {\n\n    if (id !== undefined) {\n      await getServices()\n      setValue('serviceId', id)\n    } else {\n      setServiceModal(false)\n    }\n\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n\n      {serviceModal &&\n        <AddService serviceModal={serviceModal} serviceIdCallBack={serviceIdCallBack} />\n      }\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Card className='invoice-preview-card'>\n          {Object.keys(errors).map((obj, k) => {\n            return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n          })}\n          <CardHeader>Add Task</CardHeader>\n          {/* Header */}\n          <CardBody className='pb-2 px-2'>\n            <Row>\n              <div className='col-lg-6 col-sm-12'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='clientId'>\n                    Client\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"clientId\"\n                      id=\"clientId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.clientId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={clientOptions}\n                          value={clientOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { field.onChange(val.id); getClientData(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.clientId && <FormFeedback className='text-danger'>{errors.clientId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='serviceId'>\n                    Service\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"serviceId\"\n                      id=\"serviceId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.serviceId })}\n                          {...field}\n                          classNamePrefix='select'\n                          components={{\n                            Option: OptionComponent\n                          }}\n                          options={serviceOptions}\n                          value={serviceOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { setServiceDefault(val.id); return field.onChange(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.serviceId && <FormFeedback className='text-danger'>{errors.serviceId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='description'>\n                    Description\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='description'\n                      name='description'\n                      control={control}\n                      render={({ field }) => <Input type=\"textarea\" onInput={(e) => { setTaskDescription(e.target.value) }} invalid={errors.description && true} {...field} />}\n                    />\n                    {errors.description && <FormFeedback>{errors.description.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='my-2'>\n                  <Col>\n                    <div className='d-lg-flex'>\n\n                      <input {...getInputProps()} />\n\n                      <Button type='button' color='primary' size='sm' {...getRootProps({})} >\n                        <Paperclip size={14} className=''></Paperclip> Add Attachment\n                      </Button>\n\n                      {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Row className='d-flex p-1'>{fileList}</Row>\n                </Row>\n              </div>\n              <div className='col-lg-6 col-sm-12'>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='assignee'>\n                    Assigned To\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"assignee\"\n                      id=\"assignee\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.assignee })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={assigneeUserOptions}\n                          isMulti={true}\n                          value={value} // set selected values\n                          onChange={handleAssigneeChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.assignee && <FormFeedback className='text-danger'>{errors.assignee?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='reviewer'>\n                    Reviewer\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"reviewer\"\n                      id=\"reviewer\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.reviewer })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={reviewerUserOptions}\n                          isMulti={true}\n                          value={value} // set selected values\n                          onChange={handleReviwerChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.reviewer && <FormFeedback className='text-danger'>{errors.reviewer?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='startDate'>\n                    Start Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      name=\"startDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr); handleStartDate(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.startDate })} />\n                      )}\n                    />\n\n                    {errors.startDate && <FormFeedback className='text-danger'>{errors.startDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='endDate'>\n                    End Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      name=\"endDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.endDate })} />\n                      )}\n                    />\n\n                    {errors.endDate && <FormFeedback className='text-danger'>{errors.endDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='priority'>\n                    Priority\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"priority\"\n                      id=\"priority\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.priority })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={priorityOptions}\n                          value={priorityOptions.find(c => { return c.id === value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.priority && <FormFeedback className='text-danger'>{errors.priority?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </CardBody>\n\n          <Can I={'write'} a={'invoice'}>\n\n            <hr className='invoice-spacing' />\n            <Row className='px-1 pb-2'>\n              <div className='form-check form-check-primary mx-2'>\n                <Controller\n                  control={control}\n                  name={`invoiceFlag`}\n                  rules={{ required: true }}\n                  render={({ field }) => (\n                    <Input className='form-check-input' type='checkbox' id='invoice_flag' {...field} onChange={(val) => { field.onChange(val); enableInvoice() }} defaultChecked={invoiceFlag} />\n                  )}\n                />\n                <Label className='form-check-label' for='invoice_flag'>\n                  Create Profoma Invoice for this Task\n                </Label>\n              </div>\n            </Row>\n            {invoiceFlag && (\n              <CardBody className='invoice-padding invoice-product-details'>\n                {fields.map((item, index) => {\n                  return (\n                    <div key={item.rowid} className='repeater-wrapper'>\n                      <Row>\n                        <Col className='d-lg-flex product-details-border position-relative pe-0' sm='12'>\n                          <Row className='w-100 pe-lg-0 pe-1 py-2'>\n                            <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-4 col-sm-12'>\n                              <CardText className='col-title mb-md-50 mb-0'>Item</CardText>\n                              <Controller\n                                control={control}\n                                name={`invoiceItems[${index}].serviceId`}\n                                rules={{ required: true }}\n                                render={({ field, ref }) => (\n                                  <Select\n                                    {...field}\n                                    inputRef={ref}\n                                    className={classnames('react-select', { 'is-invalid': errors.invoiceItems?.[index]?.serviceId })}\n                                    classNamePrefix='select'\n                                    options={serviceOptions}\n                                    value={serviceOptions.find(c => c.id === field.value)}\n                                    onChange={val => { field.onChange(val.id); loadItemData(index, false, false, false, false, true) }}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                  />\n                                )}\n                              />\n                              {errors.invoiceItems?.[index]?.serviceId && <FormFeedback>{errors.invoiceItems?.[index]?.serviceId.message}</FormFeedback>}\n                              <Controller\n                                id={`invoiceItems_${index}_description`}\n                                name={`invoiceItems[${index}].description`}\n                                control={control}\n                                render={({ field }) => <Input className='mt-1' invalid={errors.invoiceItems?.[index]?.description && true} onInput={(val) => { field.onChange(val); loadItemData(index, true, false, false, false, false) }} {...field} />}\n                              />\n                            </Col>\n                            {activeOrg.isgstregistered &&\n                              <Col className='my-lg-0 my-2 col-lg-2 col-sm-12'>\n                                <CardText className='col-title mb-md-2 mb-0'>SAC Code</CardText>\n                                <Controller\n                                  id={`invoiceItems_${index}_sacCode`}\n                                  name={`invoiceItems[${index}].sacCode`}\n                                  control={control}\n                                  render={({ field }) => <Input type='text' invalid={errors.invoiceItems?.[index]?.sacCode && true} onInput={(val) => { field.onChange(val); loadItemData(index, false, true, true, false, false) }} {...field} />}\n                                />\n                                {errors.invoiceItems?.[index]?.sacCode && <FormFeedback>{errors.invoiceItems?.[index]?.sacCode.message}</FormFeedback>}\n                              </Col>\n                            }\n                            <Col className='my-lg-0 my-2' lg='2' sm='12'>\n                              <CardText className='col-title mb-md-2 mb-0'>Price</CardText>\n                              <Controller\n                                id={`invoiceItems_${index}_price`}\n                                name={`invoiceItems[${index}].price`}\n                                control={control}\n                                render={({ field }) => <Input type='number' id={`input_invoiceItems_${index}_price`} onInput={(val) => { field.onChange(val); loadItemData(index, false, true, false, false, false) }} {...field} invalid={errors.invoiceItems?.[index]?.price && true} />}\n                              />\n                              {errors.invoiceItems?.[index]?.price && <FormFeedback>{errors.invoiceItems?.[index]?.price.message}</FormFeedback>}\n                            </Col>\n                            {invoiceData?.isgstregistered &&\n                              <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                                <CardText className='col-title mb-md-50 mb-0'>Tax Rate</CardText>\n                                <Controller\n                                  control={control}\n                                  name={`invoiceItems[${index}].taxGroupId`}\n                                  rules={{ required: true }}\n                                  render={({ field, ref }) => (\n                                    <Select\n                                      {...field}\n                                      inputRef={ref}\n                                      className={classnames('react-select', { 'is-invalid': errors.invoiceItems?.[index]?.taxGroupId })}\n                                      classNamePrefix='select'\n                                      options={taxGroupOptions}\n                                      value={taxGroupOptions.find(c => c.id === field.value)}\n                                      onChange={(val) => { field.onChange(val.id); loadItemData(index, false, true, false, true, false) }}\n                                      getOptionLabel={(option) => option.name}\n                                      getOptionValue={(option) => option.id}\n                                    />\n                                  )}\n                                />\n                                {errors.invoiceItems?.[index]?.taxGroupId && <FormFeedback>{errors.invoiceItems?.[index]?.taxGroupId.message}</FormFeedback>}\n                                {\n                                  !item.isTaxApplicable && <Controller\n                                    control={control}\n                                    name={`invoiceItems[${index}].exemptionReasonId`}\n                                    rules={{ required: true }}\n                                    render={({ field, ref }) => (\n                                      <Select\n                                        {...field}\n                                        inputRef={ref}\n                                        className={classnames('react-select mt-1', { 'is-invalid': errors.invoiceItems?.[index]?.taxGroupId })}\n                                        classNamePrefix='select'\n                                        options={exemptionReasonOptions}\n                                        value={exemptionReasonOptions.find(c => c.id === field.value)}\n                                        onChange={(val) => { field.onChange(val.id) }}\n                                        getOptionLabel={(option) => option.name}\n                                        getOptionValue={(option) => option.id}\n                                      />\n                                    )}\n                                  />\n                                }\n\n                              </Col>\n                            }\n                            <Col className='my-lg-0 mt-2' lg='1' sm='12'>\n                              <CardText className='col-title mb-md-50 mb-0'>Amount</CardText>\n                              {control._formValues.invoiceItems[index].subTotalAmount}\n                            </Col>\n                          </Row>\n                          <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                            <X size={18} className='cursor-pointer' onClick={() => { removeItem(index) }} />\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  )\n                })}\n                <Row className='mt-1'>\n                  <Col sm='12' className='px-0'>\n                    <Button color='primary' size='sm' className='btn-add-new' onClick={() => addItem()}>\n                      <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            )}\n          </Can>\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button className='add-new-user' outline color='warning' tag={Link} to='/task/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form >\n    </UILoader>\n  )\n}\n\nexport default AddCard\n","// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\n// ** Custom Components\nimport classnames from 'classnames'\nimport { useDropzone } from 'react-dropzone'\n\nimport axios from '@src/configs/axios/axiosConfig'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Plus, Paperclip, Trash2, PlusCircle } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\nimport { getClient, addTask, updateInvocieId, addTaskParticipants, addDescription, cloneWorkFlows } from '../store'\nimport { addInvoice, addInvoiceItems, addInvoiceParticipant, resetInvoice } from '@src/views/apps/invoice/store/index.js'\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, CardText, FormFeedback, Input, CardHeader, ListGroupItem, ListGroup, Progress } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { activeOrganizationid, activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { calculateTax } from '@src/views/apps/proposal/helper/hepler.js'\nimport moment from 'moment'\nconst activeOrgId = activeOrganizationid()\nconst activeOrg = activeOrganization()\nconst userId = orgUserId()\n\nconst TaxComponent = ({ mainInd, refreshTax, taxGroupOptions, itemAmount, parentaxCallback, control }) => {\n\n  const { fields, append, remove } = useFieldArray({ control, name: `invoiceItems[${mainInd}].taxes` })\n\n  const addTaxItem = () => {\n    append({ taxGroupId: '', taxAmount: 0, taxName: '' })\n  }\n\n  const removeItem = (i) => {\n    remove(i)\n  }\n\n  useEffect(() => {\n    if (control._formValues.invoiceItems[mainInd]?.taxes.length === 0) {\n      addTaxItem()\n    }\n  }, [])\n\n  const calTax = (id, ind) => {\n    const tax = taxGroupOptions.find((obj) => obj.id === id)\n    const taxamount = calculateTax(itemAmount, tax.percentage, 2)\n    parentaxCallback({ taxAmount: taxamount, taxName: tax.name, taxGroupId: tax.id }, mainInd, ind)\n\n  }\n  useEffect(() => {\n    if (refreshTax) {\n      control._formValues.invoiceItems[mainInd].taxes.forEach((tax, i) => {\n        if (tax.taxGroupId !== '') {\n          calTax(tax.taxGroupId, i)\n        }\n      })\n    }\n  }, [refreshTax])\n  return (\n\n    fields.map((item, j) => {\n      return (\n\n        <Row className='d-flex align-items-center justify-content-between pe-lg-0 pe-1 py-50' md={12} key={item.id}>\n          <Col md={6}></Col>\n          <Col md={1} className='d-flex justify-content-end'>\n            {j === fields.length - 1 &&\n              <PlusCircle size={'16'} className='text-primary' onClick={() => addTaxItem()} />\n            }\n          </Col>\n          <Col className='my-lg-0 mt-2' lg='3' sm='12'>\n            <Controller\n              control={control}\n              name={`taxes[${j}].taxGroupId`}\n              rules={{ required: true }}\n              render={({ field, ref }) => (\n                <Select\n                  {...field}\n                  inputRef={ref}\n                  className={classnames('react-select')}\n                  classNamePrefix='select'\n                  options={taxGroupOptions}\n                  placeholder='Select Tax Rate'\n                  value={taxGroupOptions.find(c => c.id === field.value)}\n                  onChange={(val) => { field.onChange(val.id); calTax(val.id, j) }}\n                  getOptionLabel={(option) => option.name}\n                  getOptionValue={(option) => option.id}\n                />\n              )}\n            />\n\n          </Col>\n          <Col className='my-lg-0 mt-2' lg='1' sm='12'>\n            {control._formValues.invoiceItems[mainInd].taxes[j]?.taxAmount || 0}\n          </Col>\n          <Col className='my-lg-0 mt-2' lg='1' sm='12'>\n            {control._formValues.invoiceItems[mainInd].taxes.length > 1 &&\n              <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                <Trash2 size={16} onClick={() => removeItem(j)} />\n              </div>\n            }\n          </Col>\n        </Row>\n      )\n    })\n  )\n}\n\nconst AddCard = () => {\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n\n  const navigate = useNavigate()\n  const [setOpen] = useState(false)\n  const [date, setDate] = useState(\"\")\n\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    clientId: yup.string().required(\"Please select a Client\"),\n    serviceId: yup.string().required(\"Please select a Service\"),\n    assignee: yup.array().min(1, \"Please select Assignee\"),\n    reviewer: yup.array(),\n    clientAccessFlag: yup.boolean().default(false),\n    organizationId: yup.string().default(activeOrgId),\n    taskStatus: yup.number().default(1),\n    invoiceId: yup.string().default(0),\n    startDate: yup.string().required('Please Select Start Date'),\n    endDate: yup.string().required('Please Select End Date'),\n    recurringFlag: yup.boolean().default(false),\n    priority: yup.string().required(\"Please select a Priority\"),\n    invoiceFlag: yup.boolean().default(true),\n    invoiceItems: yup.array().of(\n      yup.object().shape({\n        serviceId: yup.string().required(\"Please Select Service Item\"),\n        invoiceId: yup.string(),\n        price: yup.string(),\n        organizationId: yup.string().default(activeOrgId),\n        actualPrice: yup.string().nullable(),\n        subTotalAmount: yup.string().nullable('Subtotal Should be Greater than 0'),\n        isTaxApplicable: yup.boolean().default(true),\n        taxes: yup.array().of(\n          yup.object().shape({\n            taxGroupId: yup.string().required(\"Pleace Select Tax\"),\n            taxAmount: yup.string().required(1),\n            taxName: yup.string()\n          })\n        )\n      })\n    ).when(\"invoiceFlag\", { is: (invoiceFlag) => invoiceFlag === true, then: yup.array().min(1, \"Require Atleast one Item when Proposal For this Task.\") })\n  })\n  const store = useSelector(state => state.task)\n  const invoicestore = useSelector(state => state.invoice)\n\n  const { handleSubmit, formState: { errors }, control, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  useEffect(() => {\n\n    if (searchParams.get('clientId')) {\n      setValue('clientId', searchParams.get('clientId'))\n    }\n    if ((searchParams.get('serviceId'))) {\n      setValue('serviceId', searchParams.get('serviceId'))\n    }\n\n  }, [searchParams])\n\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n  const priorityOptions = [\n    { id: 1, name: \"Low\" },\n    { id: 2, name: \"Medium\" },\n    { id: 3, name: \"High\" }\n  ]\n\n  const [assigneeUserOptions, setAssigneeUserOptions] = useState([])\n  const [reviewerUserOptions, setReviewerUserOptions] = useState([])\n\n  const dispatch = useDispatch()\n  const [clientOptions, setClientOptions] = useState([])\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [userOptions, setUserOptions] = useState([])\n  const [taxGroupOptions, setTaxGroupOptions] = useState([])\n  const [invoiceFlag, setinvoiceFlag] = useState(true)\n  const [taskParticipants, seTaskParticipants] = useState([])\n  const [selectedClient, setSelectedClient] = useState({})\n  const [invoiceData, setInvoiceData] = useState({})\n  const [invoiceTaxes, setInvoiceTaxes] = useState([])\n  const [invoiceItems, setInvoiceItems] = useState([])\n  const [finalTotal, setFinalTotal] = useState(0)\n  const [refreshTax, setRefresTax] = useState(false)\n  const [finalSubTotal, setFinalSubTotal] = useState(0)\n  const [taskDescription, setTaskDescription] = useState('')\n  const [finalTotalTaxAmount, setFinalTotalTaxAmount] = useState(0)\n  const { fields, append, remove } = useFieldArray({ name: 'invoiceItems', keyName: 'rowid', control })\n\n  const [filesArr, setFilesArr] = useState([])\n  //const [files, setFiles] = useState([])\n  const [fileUploadProgress, setProgress] = useState(0)\n  const [attachmentIds, setAttachmentsId] = useState([])\n\n  const moveFiles = async () => {\n    const obj = { taskId: store.taskId, organizationId: activeOrgId, attachmentIds, createdBy: userId }\n    await axios.post('/google/movetaskfiles', obj).then(() => {\n\n    })\n  }\n\n  useEffect(async () => {\n    if (store.taskId !== null) {\n      const arr = taskParticipants.map((obj) => {\n        return { ...obj, taskId: store.taskId }\n      })\n      await dispatch(addTaskParticipants({ rows: arr }))\n\n      if (taskDescription !== '' || attachmentIds.length > 0) {\n        const comment = {\n          comment: taskDescription,\n          taskId: store.taskId,\n          createdBy: userId,\n          organizationId: activeOrgId,\n          attachmentIds,\n          isDefault: true\n        }\n        await dispatch(addDescription(comment))\n      }\n\n      const obj = {\n        taskId: store.taskId,\n        serviceId: control._formValues.serviceId,\n        organizationId: activeOrgId,\n        createdBy: userId\n      }\n      await dispatch(cloneWorkFlows(obj))\n\n      if (attachmentIds.length > 0) {\n        await moveFiles()\n      }\n\n      if (invoiceFlag) {\n        const data = { ...invoiceData, calculateTaxes: JSON.stringify(invoiceTaxes), totalTaxAmount: String(finalTotalTaxAmount), dueAmount: String(finalTotal), totalAmount: String(finalTotal), subTotalAmount: String(finalSubTotal) }\n        await dispatch(addInvoice(data))\n      } else {\n        const id = store.taskId\n        navigate(`/task/view/${id}`)\n      }\n    }\n  }, [store.taskId])\n\n  useEffect(async () => {\n    if (invoiceFlag) {\n      if (invoicestore.invoiceId !== null) {\n        const temp = invoiceItems.map((obj) => {\n          return { ...obj, invoiceId: invoicestore.invoiceId }\n        })\n        await dispatch(addInvoiceItems(temp))\n        const invoiceId = invoicestore.invoiceId\n        const id = store.taskId\n        await dispatch(updateInvocieId({ updatedBy: userId, id, invoiceId }))\n\n        const selEmployees = taskParticipants.map((o) => o.userId)\n        const obj = { users: selEmployees, organizationId: activeOrgId, invoiceId }\n        await dispatch(addInvoiceParticipant(obj))\n        await dispatch(resetInvoice(null))\n        navigate(`/task/view/${id}`)\n      }\n    }\n  }, [invoicestore.invoiceId])\n\n  const formatparticipants = (user, type) => {\n    const obj = {\n      organizationId: activeOrgId,\n      userId: user,\n      type,\n      createdBy: userId\n    }\n    return obj\n  }\n\n  const onSubmit = async data => {\n    setBlock(true)\n    const temp = data.invoiceItems\n    setInvoiceItems(predata => ([...predata, ...temp]))\n    const tempParticipants = []\n    data.assignee.forEach((user) => {\n      tempParticipants.push(formatparticipants(user, 1))\n    })\n\n    if (data.reviewer !== undefined) {\n      data.reviewer.forEach((user) => {\n        tempParticipants.push(formatparticipants(user, 2))\n      })\n    }\n\n    seTaskParticipants(tempParticipants)\n    delete data.invoiceItems\n    delete data.assignee\n    delete data.reviewer\n\n    await dispatch(addTask(data))\n  }\n\n  const getClients = () => {\n    axios.post('/clients/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setClientOptions(arr.clients)\n    })\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setServiceOptions(arr.services)\n    })\n  }\n\n  const getTaxGroups = () => {\n    axios.post('/taxgroups/dropdown', { country: activeOrg.countryshortname }).then(response => {\n      const arr = response.data\n      setTaxGroupOptions(arr.taxgroups)\n    })\n  }\n\n  const getClientData = async (id) => {\n    const res = await dispatch(getClient(id))\n    setSelectedClient(res.payload)\n  }\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data\n      setReviewerUserOptions(arr.organizationusers)\n      setAssigneeUserOptions(arr.organizationusers)\n      setUserOptions(arr.organizationusers)\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n\n    axios.post('/google/taskfiles', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n    }).catch((err) => { console.log(err) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        //setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const addItem = ((serId = '') => {\n    append({ invoiceId: 0, organizationId: activeOrgId, serviceId: serId, taxes: [], actualPrice: 0, subTotalAmount: 0, taxPrice: 0, description: '', isTaxApplicable: true })\n  })\n\n  useEffect(() => {\n    if (Object.keys(selectedClient).length > 0) {\n      const Invoicedata = {}\n      Invoicedata['billingAddressCity'] = selectedClient.billingaddresscity\n      Invoicedata['billingAddressLine1'] = selectedClient.billingaddressline1\n      Invoicedata['billingAddressLine2'] = selectedClient.billingaddressline2 || ''\n      Invoicedata['billingAddressState'] = selectedClient.billingaddressstatesname || ''\n      Invoicedata['billingAddressZipCode'] = selectedClient.billingaddresszip\n      Invoicedata['billingCurrencyId'] = selectedClient.currencyid || activeOrg.currencyid\n      Invoicedata['billingCurrencySymbol'] = selectedClient.currenciessymbol\n      Invoicedata['billingCurrencyShortName'] = selectedClient.currenciescode\n      Invoicedata['billingCurrencyName'] = selectedClient.currenciesname\n      Invoicedata['bankAccountBankName'] = ''\n      Invoicedata['bankAccountBranchName'] = ''\n      Invoicedata['bankAccountHolderName'] = ''\n      Invoicedata['bankAccountId'] = ''\n      Invoicedata['bankAccountIfscCode'] = ''\n      Invoicedata['bankAccountNumber'] = ''\n      Invoicedata['contactEmail'] = selectedClient.email\n      Invoicedata['gstin'] = selectedClient.gstin\n      Invoicedata['isRcmApplicable'] = false\n      Invoicedata['contactName'] = selectedClient.name\n      Invoicedata['placeOfSupplyId'] = selectedClient.placeofsupplyid\n      Invoicedata['contactId'] = selectedClient.id\n      Invoicedata['organizationAddressLine1'] = activeOrg.addressline1\n      Invoicedata['organizationAddressLine2'] = activeOrg.addressline2\n      Invoicedata['organizationCity'] = activeOrg.organizationcity\n      Invoicedata['organizationState'] = activeOrg.statename || ''\n      Invoicedata['organizationZipCode'] = activeOrg.pinzipcode\n      Invoicedata['organizationName'] = activeOrg.name\n      Invoicedata['organizationImageUrl'] = activeOrg.organizationimageid || ''\n      Invoicedata['organizationStateOther'] = activeOrg.stateothers || ''\n      Invoicedata['organizationStateCode'] = activeOrg.stateothers\n      Invoicedata['organizationGstin'] = activeOrg.gstin\n      Invoicedata['createdBy'] = userId\n      Invoicedata['invoiceDate'] = moment().startOf('day').valueOf()\n      Invoicedata['organizationId'] = activeOrgId\n      Invoicedata['note'] = ''\n      Invoicedata['paymentStatus'] = 5\n      Invoicedata['status'] = 4\n      Invoicedata['paymentDue'] = moment().startOf('day').valueOf()\n\n      setInvoiceData(Invoicedata)\n    }\n\n  }, [selectedClient])\n\n  const calculateInvoiceTax = () => {\n\n    const inputArray = control._formValues.invoiceItems.map(a => a.taxes)\n    let temp = []\n    temp = inputArray.flat()\n    let output = []\n    output = temp.reduce((acc, item) => {\n      if (item !== undefined) {\n        const existItem = acc.find((obj) => {\n          return item.taxName === obj.taxName\n        })\n        if (existItem) {\n          existItem.taxAmount = parseFloat(existItem.taxAmount) + parseFloat(item.taxAmount)\n        } else {\n          acc.push(Object.assign({}, item))\n        }\n      }\n      return acc\n    }, [])\n\n    setInvoiceTaxes(output)\n\n  }\n\n  const ItemFinalTotalAmount = () => {\n\n    const items = control._formValues.invoiceItems\n    let finalTotal = 0\n    let finalsubTotalAmount = 0\n    let finalTaxAmount = 0\n    items.forEach(obj => {\n      finalTotal = parseFloat(obj.subTotalAmount) + parseFloat(finalTotal)\n      finalsubTotalAmount = parseFloat(obj.price) + parseFloat(finalsubTotalAmount)\n      finalTaxAmount = parseFloat(finalTaxAmount) + parseFloat(obj.taxPrice)\n    })\n\n    setFinalTotal(finalTotal)\n    setFinalSubTotal(finalsubTotalAmount)\n    setFinalTotalTaxAmount(finalTaxAmount)\n    calculateInvoiceTax()\n  }\n\n  const removeItem = ((ind) => {\n    remove(ind)\n    ItemFinalTotalAmount()\n  })\n\n  const loadItemData = (ind, desFlg = false, priceFlg = false, sacFlg = false, taxFlg = false, itemFlg = false, taxes = {}, subInd = 0) => {\n    const eachObj = control._formValues.invoiceItems[ind]\n    if (eachObj.serviceId === undefined || eachObj.serviceId === '') {\n      return false\n    }\n    let service_price, tax_group_id\n    const selectedService = serviceOptions.find((a) => a.id === eachObj.serviceId)\n    setValue(`invoiceItems[${ind}].serviceId`, eachObj.serviceId)\n    if (itemFlg) {\n      setValue(`invoiceItems[${ind}].sacCode`, selectedService.saccode)\n      service_price = selectedService.sellingprice || 0\n      tax_group_id = selectedService.taxgroupid\n      setValue(`invoiceItems[${ind}].actualPrice`, service_price)\n      setValue(`invoiceItems[${ind}].price`, String(selectedService.sellingprice) || 0)\n      setValue(`invoiceItems[${ind}].taxGroupId`, tax_group_id)\n      setValue(`invoiceItems[${ind}].description`, selectedService.description)\n\n    } else {\n      setValue(`invoiceItems[${ind}].sacCode`, sacFlg ? eachObj.sacCode : selectedService.saccode)\n      service_price = priceFlg ? eachObj.price : selectedService.sellingprice || 0\n      tax_group_id = taxFlg ? eachObj.taxGroupId : selectedService.taxgroupid\n      setValue(`invoiceItems[${ind}].price`, service_price)\n      setValue(`invoiceItems[${ind}].actualPrice`, String(selectedService.sellingprice) || 0)\n      setValue(`invoiceItems[${ind}].taxGroupId`, tax_group_id)\n      setValue(`invoiceItems[${ind}].description`, desFlg ? eachObj.description : selectedService.description)\n\n    }\n\n    let calculateTaxAmount = 0\n\n    if (Object.keys(taxes).length > 0 && taxFlg) {\n\n      control._formValues.invoiceItems[ind].taxes[subInd] = taxes\n      const temp = control._formValues.invoiceItems[ind].taxes\n\n      setValue(`invoiceItems[${ind}].taxes`, temp)\n    }\n    control._formValues.invoiceItems[ind].taxes.forEach((obj) => {\n      calculateTaxAmount += obj.taxAmount\n    })\n\n    setValue(`invoiceItems[${ind}].isTaxApplicable`, true)\n    setValue(`invoiceItems[${ind}].subTotalAmount`, parseFloat(parseFloat(calculateTaxAmount || 0.00) + parseFloat(service_price || 0.00)).toFixed(2))\n    setValue(`invoiceItems[${ind}].taxPrice`, parseFloat(calculateTaxAmount).toFixed(2))\n    setValue(`invoiceItems[${ind}].createdBy`, userId)\n\n    ItemFinalTotalAmount()\n\n  }\n\n  const parentaxCallback = (props, main, subind) => {\n    if (props) {\n      setRefresTax(false)\n      loadItemData(main, true, true, true, true, false, props, subind)\n    }\n  }\n\n  const enableInvoice = () => {\n\n    setinvoiceFlag(!invoiceFlag)\n    setValue('invoiceFlag', !invoiceFlag)\n    if (invoiceFlag) {\n      remove()\n    } else {\n      if (control._formValues.invoiceItems.length === 0) {\n        const serId = control._formValues.serviceId\n        addItem(serId)\n        setValue(`invoiceItems[0].serviceId`, serId)\n        loadItemData(0, false, false, false, false, true)\n      }\n    }\n  }\n\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    //setFiles(filtered)\n    setFilesArr(filtered)\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={4} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n      <X size={14} className='cursor-pointer' onClick={() => handleRemoveFile(file, index)} />\n    </Col>\n  ))\n\n  useEffect(async() => {\n    getClients()\n    getServices()\n    getTaxGroups()\n    getOrganizationUsers()\n    addItem()\n    await dispatch(resetInvoice(null))\n\n  }, [])\n\n  // handle onChange event of the dropdown\n  const handleAssigneeChange = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let reviewerOptions\n    if (tempArr.length > 0) {\n      reviewerOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { reviewerOptions = userOptions }\n\n    setReviewerUserOptions(reviewerOptions)\n    setValue(\"assignee\", tempArr)\n  }\n\n  const handleReviwerChange = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let assigneeOptions\n    if (tempArr.length > 0) {\n      assigneeOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { assigneeOptions = userOptions }\n\n    setAssigneeUserOptions(assigneeOptions)\n    setValue(\"reviewer\", tempArr)\n  }\n\n  // ** Custom Options Component\n  const OptionComponent = ({ data, ...props }) => {\n    if (data.type === 'button') {\n      return (\n        <Button className='text-start rounded-0 px-50' color={data.color} block onClick={() => setOpen(true)}>\n          <Plus className='font-medium-1 me-50' />\n          <span className='align-middle'>{data.label}</span>\n        </Button>\n      )\n    } else {\n      return <components.Option {...props}> {data.label} </components.Option>\n    }\n  }\n\n  const setServiceDefault = (serviceId) => {\n    if (control._formValues.invoiceItems.length === 0) {\n      addItem(serviceId)\n    }\n    setValue(`invoiceItems[0].serviceId`, serviceId)\n    loadItemData(0, false, false, false, false, true)\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Card className='invoice-preview-card'>\n          {Object.keys(errors).map((obj, k) => {\n            return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n          })}\n          <CardHeader>Add Task</CardHeader>\n          {/* Header */}\n          <CardBody className='pb-2 px-2'>\n            <Row>\n              <div className='col-lg-6 col-sm-12'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='clientId'>\n                    Client\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"clientId\"\n                      id=\"clientId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.clientId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={clientOptions}\n                          value={clientOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { field.onChange(val.id); getClientData(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.clientId && <FormFeedback className='text-danger'>{errors.clientId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='serviceId'>\n                    Service\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"serviceId\"\n                      id=\"serviceId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.serviceId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={serviceOptions}\n                          value={serviceOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { setServiceDefault(val.id); return field.onChange(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.serviceId && <FormFeedback className='text-danger'>{errors.serviceId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='description'>\n                    Description\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='description'\n                      name='description'\n                      control={control}\n                      render={({ field }) => <Input type=\"textarea\" onInput={(e) => { setTaskDescription(e.target.value) }} invalid={errors.description && true} {...field} />}\n                    />\n                    {errors.description && <FormFeedback>{errors.description.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='my-2'>\n                  <Col>\n                    <div className='d-lg-flex'>\n\n                      <input {...getInputProps()} />\n\n                      <Button type='button' color='primary' size='sm' {...getRootProps({ className: 'dropzone' })} >\n                        <Paperclip size={14} className=''></Paperclip> Add Attachment\n                      </Button>\n\n                      {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Row className='d-flex p-1'>{fileList}</Row>\n                </Row>\n              </div>\n              <div className='col-lg-6 col-sm-12'>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='assignee'>\n                    Assigned To\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"assignee\"\n                      id=\"assignee\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.assignee })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={assigneeUserOptions}\n                          isMulti={true}\n                          value={value} // set selected values\n                          onChange={handleAssigneeChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.assignee && <FormFeedback className='text-danger'>{errors.assignee?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='reviewer'>\n                    Reviewer\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"reviewer\"\n                      id=\"reviewer\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.reviewer })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={reviewerUserOptions}\n                          isMulti={true}\n                          value={value} // set selected values\n                          onChange={handleReviwerChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.reviewer && <FormFeedback className='text-danger'>{errors.reviewer?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='startDate'>\n                    Start Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      value={date}\n                      name=\"startDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.startDate })} />\n                      )}\n                    />\n\n                    {errors.startDate && <FormFeedback className='text-danger'>{errors.startDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='endDate'>\n                    End Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      value={date}\n                      onChange={date => setDate(date)}\n                      name=\"endDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.endDate })} />\n                      )}\n                    />\n\n                    {errors.endDate && <FormFeedback className='text-danger'>{errors.endDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='priority'>\n                    Priority\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"priority\"\n                      id=\"priority\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.priority })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={priorityOptions}\n                          value={priorityOptions.find(c => { return c.id === value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.priority && <FormFeedback className='text-danger'>{errors.priority?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </CardBody>\n          <hr className='invoice-spacing' />\n          <Row className='px-1 pb-2'>\n            <div className='form-check form-check-primary mx-2'>\n              <Controller\n                control={control}\n                name={`invoiceFlag`}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <Input className='form-check-input' type='checkbox' id='invoice_flag' {...field} onChange={(val) => { field.onChange(val); enableInvoice() }} defaultChecked={invoiceFlag} />\n                )}\n              />\n              <Label className='form-check-label' for='invoice_flag'>\n                Create Profoma Invoice for this Task\n              </Label>\n            </div>\n          </Row>\n          {invoiceFlag && (\n            <CardBody className='invoice-padding invoice-product-details'>\n              {fields.map((item, index) => {\n                return (\n                  <div key={item.rowid} className='repeater-wrapper'>\n                    <Row className='product-details-border'>\n                      <Row className='d-lg-flex position-relative w-100 pe-lg-0 pe-1 py-50' md={12}>\n                        <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2' md={3} sm={12}>\n                          <CardText className='col-title mb-md-50 mb-0'>Item</CardText>\n                          <Controller\n                            control={control}\n                            name={`invoiceItems[${index}].serviceId`}\n                            rules={{ required: true }}\n                            render={({ field, ref }) => (\n                              <Select\n                                {...field}\n                                inputRef={ref}\n                                className={classnames('react-select', { 'is-invalid': errors.invoiceItems?.[index]?.serviceId })}\n                                classNamePrefix='select'\n                                options={serviceOptions}\n                                value={serviceOptions.find(c => c.id === field.value)}\n                                onChange={val => { field.onChange(val.id); setRefresTax(true); loadItemData(index, false, false, false, false, true) }}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                              />\n                            )}\n                          />\n                          {errors.invoiceItems?.[index]?.serviceId && <FormFeedback>{errors.invoiceItems?.[index]?.serviceId.message}</FormFeedback>}\n\n                        </Col>\n                        <Col lg={4}>\n                          <Controller\n                            id={`rows_${index}_description`}\n                            name={`invoiceItems[${index}].description`}\n                            control={control}\n                            render={({ field }) => <Input placeholder='Description' invalid={errors.invoiceItems?.[index]?.description && true} onInput={(val) => { field.onChange(val); loadItemData(index, true, false, false, false, false) }} {...field} />}\n                          />\n                        </Col>\n                        <Col className='my-lg-0 my-2' lg='3' sm='12'>\n                          <CardText className='col-title mb-md-2 mb-0'>Price</CardText>\n                          <Controller\n                            id={`rows_${index}_price`}\n                            name={`invoiceItems[${index}].price`}\n                            control={control}\n                            render={({ field }) => <Input type='number' id={`input_rows_${index}_price`} onInput={(val) => { field.onChange(val); loadItemData(index, false, true, false, false, false); setRefresTax(true) }} {...field} invalid={errors.invoiceItems?.[index]?.price && true} />}\n                          />\n                          {errors.invoiceItems?.[index]?.price && <FormFeedback>{errors.invoiceItems?.[index]?.price.message}</FormFeedback>}\n                        </Col>\n                        <Col className='my-lg-0 mt-2' lg='1' sm='12'>\n                          <CardText className='col-title mb-md-50 mb-0'>Amount</CardText>\n                          {control._formValues.invoiceItems[index].subTotalAmount}\n                        </Col>\n                        <Col md={1}>\n                          <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                            <Trash2 size={18} className='cursor-pointer' onClick={() => { removeItem(index) }} />\n                          </div>\n                        </Col>\n                      </Row>\n                      <TaxComponent parentaxCallback={parentaxCallback} refreshTax={refreshTax} taxGroupOptions={taxGroupOptions} mainInd={index} itemAmount={control._formValues.invoiceItems[index].price} errors={errors} control={control} />\n                    </Row>\n                  </div>\n                )\n              })}\n              <Row className='mt-1'>\n                <Col sm='12' className='px-0'>\n                  <Button color='primary' size='sm' className='btn-add-new' onClick={() => addItem()}>\n                    <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          )}\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button className='add-new-user' outline color='warning' tag={Link} to='/task/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form >\n    </UILoader>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\nimport AddCardINTL from './AddCardINTL'\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { activeOrganization } from '@src/helper/sassHelper'\nconst activeOrg = activeOrganization()\n\nconst TaskAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          {activeOrg.countryshortname === 'IN' ? <AddCard /> : <AddCardINTL />}\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TaskAdd\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","export const calculateTax = (amount, taxRateInPercentage, TaxType) => {\n    let calculatedTax = 0\n    if (TaxType === 1) { //Inclusive\n        calculatedTax = parseFloat(amount) - (parseFloat(amount) * (100 / (100 + parseFloat(taxRateInPercentage))))\n        // calculatedTax = parseFloat(amount) - parseFloat(calculatedTax);\n\n    } else if (TaxType === 2) { //Exclusive\n        calculatedTax = (parseFloat(amount) * parseFloat(taxRateInPercentage)) / 100\n    }\n    return parseFloat(calculatedTax)\n}\n\nexport const parser = (str) => {\n\n    return JSON.parse(Array.isArray(str) ? JSON.stringify(str).replace(/\\\\/g, '') : str.replace(/\\\\/g, ''))\n\n}"],"sourceRoot":""}