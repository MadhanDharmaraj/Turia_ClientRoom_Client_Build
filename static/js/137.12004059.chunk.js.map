{"version":3,"sources":["views/pages/account-settings/TaskStatus.js","views/pages/account-settings/PasswordManager.js","views/pages/account-settings/ServiceForms.js","views/pages/account-settings/Preference.js","@core/components/ui-loader/index.js","../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/webpack/bootstrap","../ReactPaginate/node_modules/prop-types/index.js","../webpack:/ReactPaginate/external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js"],"names":["userId","orgUserId","activeOrgId","activeOrganizationid","MySwal","withReactContent","Swal","TaskStatus","useState","formModal","setFormModal","statusList","setStatusList","name","setName","serviceId","setServiceId","selceted","setSelected","serviceOptions","setServiceOptions","total","setTotal","currentPage","setCurrentPage","getList","params","axios","post","then","res","data","taskstatus","catch","closeModal","deleteStatus","id","perPage","page","CustomPagination","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","useEffect","status","response","arr","services","className","outline","color","onClick","size","isOpen","toggle","classnames","classNamePrefix","options","value","find","c","onChange","val","getOptionLabel","option","getOptionValue","type","e","target","createdBy","organizationId","createStatus","responsive","length","colSpan","map","obj","k","servicename","statusname","serviceid","editModal","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","PasswordManager","link","setLink","passwordmanagermaster","updatedBy","organizationid","formsList","description","setDescription","serviceforms","actOrg","activeOrganization","TaskApproval","dataemp","disable","default","setData","dispatch","useDispatch","temp","taskapproval","includes","opt","i","disabled","defaultChecked","approveArr","checked","push","pop","getactiveorg","toast","success","position","updateTaskApproval","for","taskcreateapproval","createapprove","updateCreateTaskApproval","Preference","ServiceForms","UILoader","props","children","blocking","loader","tag","overlayColor","Tag","style","backgroundColor","defaultProps","__WEBPACK_EXTERNAL_MODULE__1__","module","exports","require","installedModules","__webpack_require__","moduleId","l","modules","call","m","d","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","PageView","activeLinkClassName","getEventListener","pageSelectedHandler","href","extraAriaContext","ariaLabel","ariaCurrent","role","tabIndex","aria-label","aria-current","onKeyPress","propTypes","BreakView","breakLabel","breakClassName","breakLinkClassName","breakHandler","PaginationBoxView","initialSelected","evt","state","preventDefault","returnValue","handlePageSelected","setState","callCallback","handlerFunction","eventListener","index","getForwardJump","getBackwardJump","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","getPageElement","breakView","leftSide","rightSide","createPageView","handleBreakClick","initialPage","this","disableInitialCallback","console","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","disabledClassName","previousAriaLabel","prevRel","nextAriaLabel","nextRel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","aria-disabled","rel","pagination","handleNextPage","Component"],"mappings":"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","file":"static/js/137.12004059.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, Col, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap'\nimport axios from '@src/configs/axios/axiosConfig'\nimport classnames from 'classnames'\nimport Select from 'react-select'\nimport '@styles/react/libs/react-select/_react-select.scss'\n//import Spinner from '@components/spinner/Loading-spinner'\nimport { Edit, Plus, Trash } from 'react-feather'\nimport { orgUserId, activeOrganizationid } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrgId = activeOrganizationid()\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\nimport ReactPaginate from 'react-paginate'\nconst TaskStatus = () => {\n\n  const [formModal, setFormModal] = useState(false)\n  const [statusList, setStatusList] = useState([])\n  const [name, setName] = useState('')\n  const [serviceId, setServiceId] = useState('')\n  const [selceted, setSelected] = useState(null)\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [total, setTotal] = useState(1)\n  const rowsPerPage = 6\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const getList = (params) => {\n\n    axios.post('/taskstatus/list', params)\n      .then((res) => {\n        setStatusList(res.data.taskstatus.taskstatus)\n        setTotal(res.data.taskstatus.total)\n      })\n      .catch(() => { })\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const arr = response.data.services\n      setServiceOptions(arr)\n    })\n  }\n\n  const closeModal = () => {\n    setFormModal(false)\n    setName('')\n    setServiceId('')\n    setSelected(null)\n  }\n\n  const createStatus = () => {\n\n    if (name === '') return\n    if (selceted === null) {\n      const data = {\n        name,\n        createdBy: userId,\n        organizationId: activeOrgId,\n        serviceId\n      }\n      axios.post('/taskstatus/create', data)\n        .then(() => {\n          closeModal()\n          const params = {\n            perPage: rowsPerPage,\n            page: currentPage\n          }\n          getList(params)\n\n        })\n        .catch(() => { })\n    } else {\n      const data = {\n        name,\n        id: selceted.id,\n        serviceId\n      }\n      axios.post('/taskstatus/update', data)\n        .then(() => {\n          const params = {\n            perPage: rowsPerPage,\n            page: currentPage\n          }\n          getList(params)\n          closeModal()\n        })\n        .catch(() => { })\n    }\n  }\n\n  const deleteStatus = (id) => {\n\n    const data = {\n      id\n    }\n    axios.post('/taskstatus/delete', data)\n      .then(() => {\n        const params = {\n          perPage: rowsPerPage,\n          page: currentPage\n        }\n        getList(params)\n      })\n      .catch(() => { })\n\n  }\n\n\n  const deletefn = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await deleteStatus(id)\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Status has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n    const params = {\n      perPage: rowsPerPage,\n      page: page.selected + 1\n    }\n    getList(params)\n  }\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const editModal = (obj) => {\n    setFormModal(true)\n    setName(obj.statusname)\n    setServiceId(obj.serviceid)\n    setSelected(obj)\n  }\n\n  useEffect(() => {\n    const params = {\n      perPage: rowsPerPage,\n      page: currentPage\n    }\n    getList(params)\n    getServices()\n  }, [])\n\n  // const [block, setBlock] = useState(false)\n  // const Loader = () => {\n\n  //   return (\n  //     <Fragment>\n  //       <Spinner />\n  //     </Fragment>\n  //   )\n  // }\n  return (\n    <Card>\n\n      <Col className='d-flex align-items-center justify-content-between px-2 pt-1'>\n        Task Sub Status\n        <Button outline color='primary' onClick={() => setFormModal(true)} size='sm'>\n          <Plus size={14} />\n          Sub Status\n        </Button>\n      </Col>\n      <CardBody className=''>\n        <Row className='d-flex'>\n          <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered modal-sm'>\n            <ModalHeader toggle={() => setFormModal(!formModal)} >\n              Add Sub Status\n            </ModalHeader>\n            <ModalBody>\n              <Col className=''>\n                <Label className='mt-1'>Service</Label>\n                <Row>\n                  <Select\n                    className={classnames('react-select')}\n                    classNamePrefix='select'\n                    options={serviceOptions}\n                    value={serviceOptions.find(c => { return c.id === serviceId })}\n                    onChange={val => { setServiceId(val.id) }}\n                    getOptionLabel={(option) => option.name}\n                    getOptionValue={(option) => option.id}\n                  />\n                </Row>\n                <Label className='required mt-1'>Sub Status</Label>\n                <Input type='text' value={name} onChange={(e) => { setName(e.target.value) }} />\n                <Col className='d-flex justify-content-between mt-2'>\n                  <Col></Col>\n                  <Button outline className='me-1' color={'warning'} onClick={() => { closeModal() }}>Cancel</Button>\n                  <Button outline color={'primary'} onClick={() => { createStatus() }}>Save</Button>\n                </Col>\n              </Col>\n            </ModalBody>\n          </Modal>\n        </Row>\n        <Col>\n          <Table className='table table-hover mt-1 col-lg-6' responsive>\n            <thead>\n              <tr>\n                <th>Service</th>\n                <th>Sub Status</th>\n                <th className='text-end'>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {statusList.length === 0 &&\n                <tr>\n                  <td colSpan=\"3\" className='text-center'> No Records...</td></tr>\n              }\n              {statusList.length > 0 &&\n                statusList.map((obj, k) => {\n                  return (<tr key={k}>\n                    <td> {obj.servicename}</td>\n                    <td> {obj.statusname}</td>\n                    <td className='text-end'>\n                      <Edit size='15' className='me-1' onClick={() => { editModal(obj) }} />\n                      <Trash size={15} onClick={() => { deletefn(obj.id) }} />\n                    </td>\n                  </tr>\n                  )\n                })\n              }\n            </tbody>\n          </Table>\n          <CustomPagination />\n        </Col>\n      </CardBody>\n    </Card>\n  )\n}\nexport default TaskStatus","import React, { Fragment, useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, Col, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap'\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport UILoader from '@components/ui-loader'\n//import Spinner from '@components/spinner/Loading-spinner'\nimport { Edit, Plus, Trash } from 'react-feather'\nimport { orgUserId, activeOrganizationid } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrgId = activeOrganizationid()\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst PasswordManager = () => {\n\n    const [formModal, setFormModal] = useState(false)\n    const [statusList, setStatusList] = useState([])\n    const [name, setName] = useState('')\n    const [link, setLink] = useState('')\n    const [selceted, setSelected] = useState(null)\n\n    const getList = () => {\n        axios.post('/passwordmanagermaster/list')\n            .then(async (res) => {\n                setStatusList(res.data.passwordmanagermaster)\n            })\n            .catch(() => { })\n    }\n\n    const closeModal = () => {\n        setFormModal(false)\n        setLink('')\n        setName('')\n        setSelected(null)\n    }\n\n    const createStatus = () => {\n        if (selceted === null) {\n            const data = {\n                name,\n                createdBy: userId,\n                link,\n                organizationId: activeOrgId\n            }\n            axios.post('/passwordmanagermaster/create', data)\n                .then(() => {\n                    closeModal()\n                    getList()\n                })\n                .catch(() => { })\n        } else {\n            const data = {\n                name,\n                id: selceted.id,\n                link,\n                updatedBy: userId\n            }\n            axios.post('/passwordmanagermaster/update', data)\n                .then(() => {\n                    getList()\n                    closeModal()\n                })\n                .catch(() => { })\n        }\n    }\n\n    const deleteStatus = (id) => {\n\n        const data = {\n            id\n        }\n        axios.post('/passwordmanagermaster/delete', data)\n            .then(() => {\n                getList()\n            })\n            .catch(() => { })\n\n    }\n\n\n    const deletefn = (id) => {\n\n        return MySwal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ms-1'\n            },\n            buttonsStyling: false\n        }).then(async (result) => {\n            if (result.value) {\n                await deleteStatus(id)\n                MySwal.fire({\n                    icon: 'success',\n                    title: 'Deleted!',\n                    text: 'Password List has been deleted.',\n                    customClass: {\n                        confirmButton: 'btn btn-success'\n                    }\n                })\n            }\n        })\n    }\n\n    const editModal = (obj) => {\n        setFormModal(true)\n        setName(obj.name)\n        setLink(obj.link)\n        setSelected(obj)\n    }\n\n    useEffect(() => {\n        getList()\n    }, [])\n    // const [block, setBlock] = useState(false)\n    // const Loader = () => {\n\n    //   return (\n    //     <Fragment>\n    //       <Spinner />\n    //     </Fragment>\n    //   )\n    // }\n    return (\n        <Card>\n            <Col className='d-flex align-items-center justify-content-between px-2 pt-1'>\n                Password Manager\n                <Button outline color='primary' onClick={() => setFormModal(true)} size='sm'>\n                    <Plus size={14} />\n                    Password List\n                </Button>\n            </Col>\n            <CardBody className=''>\n                <Row className='d-flex'>\n                    <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered modal-sm'>\n                        <ModalHeader toggle={() => setFormModal(!formModal)} >\n                            Add Password List\n                        </ModalHeader>\n                        <ModalBody>\n                            <Col className='px-1'>\n                                <Row className='mt-1'>\n                                    <Label className='required'>Name</Label>\n                                    <Input type='text' value={name} onChange={(e) => { setName(e.target.value) }} />\n                                </Row>\n                                <Row className='mt-1'>\n                                    <Label className='required'>Link</Label>\n                                    <Input type='text' value={link} onChange={(e) => { setLink(e.target.value) }} />\n                                </Row>\n                                <Col className='d-flex justify-content-between mt-1'>\n                                    <Col></Col>\n                                    <Button outline className='me-1' color={'warning'} onClick={() => { setFormModal(false) }}>Cancel</Button>\n                                    <Button outline color={'primary'} onClick={() => { createStatus() }}>Save</Button>\n                                </Col>\n                            </Col>\n                        </ModalBody>\n                    </Modal>\n                </Row>\n                <Col>\n\n                    <Table className='table table-hover mt-1 col-lg-6' responsive>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Link</th>\n                                <th className='text-end'>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {statusList.length === 0 &&\n                                <tr>\n                                    <td colSpan=\"3\" className='text-center'> No Records...</td></tr>\n                            }\n                            {statusList.length > 0 &&\n                                statusList.map((obj, k) => {\n                                    return (<tr key={k}>\n                                        <td> {obj.name}</td>\n                                        <td> {obj.link}</td>\n                                        <td className='text-end'>{\n                                            obj.organizationid &&\n                                            <Fragment>\n                                                <Edit size='15' className='me-1' onClick={() => { editModal(obj) }} />\n                                                <Trash size={15} onClick={() => { deletefn(obj.id) }} />\n                                            </Fragment>\n                                        }\n                                        </td>\n                                    </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                </Col>\n            </CardBody>\n        </Card>\n    )\n}\nexport default PasswordManager","import React, { useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, Col, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap'\nimport axios from '@src/configs/axios/axiosConfig'\nimport '@styles/react/libs/react-select/_react-select.scss'\n//import Spinner from '@components/spinner/Loading-spinner'\nimport { Edit, Plus, Trash } from 'react-feather'\nimport { orgUserId, activeOrganizationid } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrgId = activeOrganizationid()\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\nimport ReactPaginate from 'react-paginate'\nconst TaskStatus = () => {\n\n  const [formModal, setFormModal] = useState(false)\n  const [formsList, setStatusList] = useState([])\n  const [name, setName] = useState('')\n  const [selceted, setSelected] = useState(null)\n  const [description, setDescription] = useState('')\n  const [total, setTotal] = useState(1)\n  const rowsPerPage = 6\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const getList = (params) => {\n\n    axios.post('/serviceforms/list', params)\n      .then((res) => {\n        setStatusList(res.data.serviceforms.serviceforms)\n        setTotal(res.data.serviceforms.total)\n      })\n      .catch(() => { })\n  }\n\n  const closeModal = () => {\n    setFormModal(false)\n    setName('')\n    setDescription('')\n    setSelected(null)\n  }\n\n  const createStatus = () => {\n\n    if (name === '') return\n    if (selceted === null) {\n      const data = {\n        name,\n        createdBy: userId,\n        organizationId: activeOrgId,\n        description\n      }\n      axios.post('/serviceforms/create', data)\n        .then(() => {\n          closeModal()\n          const params = {\n            perPage: rowsPerPage,\n            page: currentPage\n          }\n          getList(params)\n\n        })\n        .catch(() => { })\n    } else {\n      const data = {\n        name,\n        id: selceted.id,\n        description\n      }\n      axios.post('/serviceforms/update', data)\n        .then(() => {\n          const params = {\n            perPage: rowsPerPage,\n            page: currentPage\n          }\n          getList(params)\n          closeModal()\n        })\n        .catch(() => { })\n    }\n  }\n\n  const deleteStatus = (id) => {\n\n    const data = {\n      id\n    }\n    axios.post('/serviceforms/delete', data)\n      .then(() => {\n        const params = {\n          perPage: rowsPerPage,\n          page: currentPage\n        }\n        getList(params)\n      })\n      .catch(() => { })\n\n  }\n\n\n  const deletefn = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await deleteStatus(id)\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Status has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n  const handlePagination = (page) => {\n    setCurrentPage(page.selected + 1)\n    const params = {\n      perPage: rowsPerPage,\n      page: page.selected + 1\n    }\n    getList(params)\n  }\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const editModal = (obj) => {\n    setFormModal(true)\n    setName(obj.name)\n    setDescription(obj.description)\n    setSelected(obj)\n  }\n\n  useEffect(() => {\n    const params = {\n      perPage: rowsPerPage,\n      page: currentPage\n    }\n    getList(params)\n\n  }, [])\n\n  // const [block, setBlock] = useState(false)\n  // const Loader = () => {\n\n  //   return (\n  //     <Fragment>\n  //       <Spinner />\n  //     </Fragment>\n  //   )\n  // }\n  return (\n    <Card>\n\n      <Col className='d-flex align-items-center justify-content-between px-2 pt-1'>\n        Forms\n        <Button outline color='primary' onClick={() => setFormModal(true)} size='sm'>\n          <Plus size={14} />\n          Add\n        </Button>\n      </Col>\n      <CardBody className=''>\n        <Row className='d-flex'>\n          <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered modal-sm'>\n            <ModalHeader toggle={() => setFormModal(!formModal)} >\n              Form\n            </ModalHeader>\n            <ModalBody>\n              <Col className=''>\n                <Label className='required mt-1'>Form Name</Label>\n                <Input type='text' value={name} onChange={(e) => { setName(e.target.value) }} />               \n              </Col>\n              <Col className=''>\n                <Label className='mt-1'>Description</Label>\n                <Input type='textarea' value={description} onChange={(e) => { setDescription(e.target.value) }} />\n                <Col className='d-flex justify-content-between mt-2'>\n                  <Col></Col>\n                  <Button outline className='me-1' color={'warning'} onClick={() => { closeModal() }}>Cancel</Button>\n                  <Button outline color={'primary'} onClick={() => { createStatus() }}>Save</Button>\n                </Col>\n              </Col>\n            </ModalBody>\n          </Modal>\n        </Row>\n        <Col>\n          <Table className='table table-hover mt-1 col-lg-6' responsive>\n            <thead>\n              <tr>                \n                <th>Form Name</th>\n                <th>Description</th>\n                <th className='text-end'>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {formsList.length === 0 &&\n                <tr>\n                  <td colSpan=\"3\" className='text-center'> No Records...</td></tr>\n              }\n              {formsList.length > 0 &&\n                formsList.map((obj, k) => {\n                  return (<tr key={k}>\n                    <td> {obj.name}</td>\n                    <td> {obj.description}</td>\n                    <td className='text-end'>\n                      <Edit size='15' className='me-1' onClick={() => { editModal(obj) }} />\n                      <Trash size={15} onClick={() => { deletefn(obj.id) }} />\n                    </td>\n                  </tr>\n                  )\n                })\n              }\n            </tbody>\n          </Table>\n          <CustomPagination />\n        </Col>\n      </CardBody>\n    </Card>\n  )\n}\nexport default TaskStatus","\nimport TaskStatus from './TaskStatus'\nimport PasswordManager from './PasswordManager'\nimport { Card, CardBody, CardHeader, Input, Label, Row, Col } from 'reactstrap'\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { activeOrganization } from '@src/helper/sassHelper'\nconst actOrg = activeOrganization()\nimport { getactiveorg } from './store'\nimport { useDispatch } from 'react-redux'\nimport ServiceForms from './ServiceForms'\nimport toast from 'react-hot-toast'\nconst TaskApproval = () => {\n\n  const dataemp = [{ name: 'Admin', id: '1', disable: true, default: true }, { name: 'Creater', id: '2', disable: true, default: true }, { name: 'Reviewer', id: '3', disable: false, default: false }, { name: 'Assignee', id: '4', disable: false, default: false }]\n  const [data, setData] = useState([])\n\n  const dispatch = useDispatch()\n  const updateTaskApproval = (name, e) => {\n    const approveArr = actOrg.taskapproval || []\n    if (e.target.checked) {\n      approveArr.push(name)\n    } else {\n      approveArr.pop(name)\n    }\n\n    axios.post('/organizations/updatecustomization', { approveArr })\n      .then(async () => {\n        await dispatch(getactiveorg(actOrg.id))\n        toast.success('Approve done Successfully', {position:'bottom-right'})\n      })\n      .catch(() => {\n\n      })\n  }\n\n  const updateCreateTaskApproval = (e) => {\n\n    axios.post('/organizations/updatecustomization', { createapprove: e.target.checked })\n      .then(async () => {\n        await dispatch(getactiveorg(actOrg.id))\n        toast.success('Approve done Successfully', {position:'bottom-right'})\n      })\n      .catch(() => {\n\n      })\n  }\n\n  useEffect(() => {\n    const temp = [...dataemp]\n    temp.map((obj) => {\n      if (actOrg?.taskapproval.includes(obj.id)) {\n        obj.default = true\n      } else {\n        obj.default = false\n      }\n      return obj\n    })\n    setData(temp)\n\n  }, [])\n\n  return (\n    <Fragment>\n      <Row>\n        <h5>Task Approval</h5>\n        {data.length > 0 &&\n          data.map((opt, i) => {\n            return (<Col className='d-flex mt-50' key={i}>\n              <Input disabled={opt.disable} type='checkbox' defaultChecked={opt.default} color='primary' value={opt.id} id={`opt_${i}`} onChange={(e) => { updateTaskApproval(opt.id, e) }} />\n              <Label className='ms-50' for={`opt_${i}`}>{opt.name}</Label>\n            </Col>\n            )\n          })\n        }\n      </Row>\n      <Col className='mt-1'>\n        <Input type='checkbox' defaultChecked={actOrg?.taskcreateapproval} color='primary' id={`option_1`} onChange={(e) => { updateCreateTaskApproval(e) }} />\n        <Label className='ms-50' for='option_1'>All tasks created must be approved by Admin.</Label>\n      </Col>\n    </Fragment>\n  )\n}\n\n\nconst RenderData = ({ refresh }) => {\n  const dispatch = useDispatch()\n  //const[referalFlag , setReferalFlag] = useState(false)\n  const [assignFlag, setAssignFlag] = useState(actOrg.assignuserflag ?? false)\n\n  const updateRefferal = (assignFlag) => {\n    axios.post('/organizations/updatecustomization', { assignUserFlag: assignFlag })\n      .then(async () => {\n        await dispatch(getactiveorg(actOrg.id))\n        toast.success('Status updated Successfully')\n      })\n      .catch(() => { })\n  }\n\n  useEffect(() => {\n    updateRefferal(assignFlag)\n  }, [assignFlag])\n\n  return (\n    <Fragment>\n      {/* <Col className='d-flex mt-50'>\n        {refresh ? <Input type='checkbox' id={`clientopt`} onChange={(e) => { setReferalFlag(),updateRefferal(e) }} defaultChecked={referalFlag} /> : <Input type='checkbox' id={`clientopt`} onChange={(e) => { updateRefferal(e) }} />}\n        <Label className='ms-50' for={`clientopt`}>Add Referred by field in client module</Label>\n      </Col> */}\n      <Col className='d-flex mt-50'>\n        {refresh ? <Input type='checkbox' id={`clientopt_1`} onChange={(e) => { setAssignFlag(e.target.checked) }} defaultChecked={assignFlag} /> : <Input type='checkbox' id={`clientopt_2`} onChange={(e) => { setAssignFlag(e.target.checked) }} />}\n        <Label className='ms-50' for={`clientopt`}>Add Assign User field in client module</Label>\n      </Col>\n    </Fragment>\n  )\n}\n\nconst ClientRefer = () => {\n\n  const [refresh, setRefresh] = useState(false)\n\n  useEffect(() => {\n    const actOrg = activeOrganization()\n    setRefresh(actOrg?.referredflag)\n  }, [])\n\n  return (\n    <Row>\n      <h5>Client Referral</h5>\n      <RenderData refresh={refresh} />\n    </Row>\n  )\n}\n\nconst Preference = () => {\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <TaskApproval />\n        </CardBody>\n      </Card>\n      <ServiceForms />\n      <TaskStatus />\n      <PasswordManager />     \n    </Fragment>\n  )\n}\nexport default Preference","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      page +\n      (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const { breakLabel, breakClassName, breakLinkClassName, breakHandler, getEventListener } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextRel: 'next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    eventListener: 'onClick',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = (evt) => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = (evt) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  }\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      pageCount,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n"],"sourceRoot":""}