{"version":3,"sources":["views/apps/task/view/Conversation.js","views/apps/task/view/UserInfoCard.js","views/apps/task/view/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrgId","activeOrganizationid","activeOrg","activeOrganization","userId","orguserid","MySwal","withReactContent","Swal","Templates","props","tabId","selectedTask","renderClient","row","initials","className","color","content","username","charAt","useState","block","setBlock","Loader","dispatch","useDispatch","id","useParams","filesArr","setFilesArr","data","setData","attachmentIds","setAttachmentsId","conversationId","setConversationId","comment","setComment","replycomment","setReplyComment","editcomment","setEditComment","fileUploadProgress","setProgress","store","useSelector","state","taskconversation","fileClassNames","image","pdf","xlsx","xls","docx","doc","deletefn","conid","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","value","deleteTaskConversation","taskId","editNote","step","temp","map","obj","loc","reply","oj","editFlag","dateformat","val","moment","format","configUpload","headers","onUploadProgress","Math","round","loaded","total","uploadFiles","files","formData","FormData","forEach","file","key","append","localStorage","getItem","servicename","uniqueno","folderPath","axios","post","res","attachment_ids","catch","toast","error","position","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","extension","name","split","pop","push","length","getRootProps","getInputProps","saveNote","updateTaskConversation","success","useEffect","getTaskConversation","postComment","organizationId","createdBy","updatedBy","addTaskConversation","fileList","index","md","substr","size","onClick","filtered","filter","i","splice","handleRemoveFile","blocking","loader","for","type","rows","placeholder","onInput","e","target","item","k","createdon","replyFlag","tag","end","href","preventDefault","replyNote","replace","driveid","originalfilename","outline","cancelReply","j","UserInfoCard","search","useLocation","searchParams","URLSearchParams","active","setActive","get","dateFormat","unix","responsive","bordered","colSpan","Link","to","clientid","clientname","serviceid","assigeduser","user","pill","JSON","parse","startdate","enddate","pills","tab","activeTab","Conversation","orgUserId","TaskView","task","getTask","undefined","xl","lg","UILoader","children","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/57.e727f7bd.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Card,\n  Input,\n  Button,\n  CardBody,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Col,\n  Row,\n  Progress,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { X, Paperclip, File, MoreVertical, Edit2, Trash, CornerUpRight } from 'react-feather'\nimport Avatar from '@src/@core/components/avatar'\nimport { getTaskConversation, addTaskConversation, deleteTaskConversation, updateTaskConversation } from '../store/taskconversation'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { activeOrganizationid, activeOrganization } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst activeOrg = activeOrganization()\nconst userId = activeOrg?.orguserid\nconst MySwal = withReactContent(Swal)\n// ** Images\nconst Templates = props => {\n  // ** Hook\n  const { tabId, selectedTask } = props\n\n  const renderClient = row => {\n\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={'light-primary'}\n        content={row?.username?.charAt(0) || 'T'}\n      />\n    )\n\n  }\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const dispatch = useDispatch()\n  //** State */\n  const { id } = useParams()\n  const [filesArr, setFilesArr] = useState([])\n  //const [files, setFiles] = useState([])\n  const [data, setData] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const [conversationId, setConversationId] = useState('')\n  const [comment, setComment] = useState('')\n  const [replycomment, setReplyComment] = useState('')\n  const [editcomment, setEditComment] = useState('')\n  const [fileUploadProgress, setProgress] = useState(0)\n\n  const store = useSelector(state => state.taskconversation)\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n  const deletefn = (conid) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteTaskConversation({ id: conid, taskId: id }))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Comments has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const editNote = (id, step = 1) => {\n    const temp = data.map((obj) => {\n      let loc = obj.reply\n      if (step === 2) {\n        loc = obj?.reply?.map((oj) => {\n          if (oj.id === id) {\n            setEditComment(oj.comment)\n            return { ...oj, editFlag: true }\n          } else {\n            return { ...oj, editFlag: false }\n          }\n        })\n      }\n\n      if (obj.id === id) {\n        setEditComment(obj.comment)\n        return { ...obj, editFlag: true, reply: loc }\n      } else {\n        return { ...obj, editFlag: false, reply: loc }\n      }\n\n    })\n\n    setData(temp)\n  }\n\n  const dateformat = (val) => {\n\n    return moment(val, 'x').format('YYYY, MMM-D h:m A')\n\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    setBlock(true)\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('id', id)\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', activeOrg.orguserid)\n    formData.append('clientId', id)\n\n\n\n    formData.append('folderPath[0]', localStorage.getItem('clientName'))\n    formData.append('folderPath[1]', 'Task')\n    formData.append('folderPath[2]', `${selectedTask.servicename}- ${selectedTask.uniqueno}`)\n    formData.append('folderPath', folderPath)\n\n    axios.post('/files/upload', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      setBlock(false)\n    }).catch(() => {\n      toast.error('Upload Failed', { position: 'bottom-right' })\n      setBlock(false)\n    })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        //setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    //setFiles(filtered)\n    setFilesArr(filtered)\n  }\n\n  const saveNote = async (obj) => {\n    obj.comment = editcomment\n    if (obj.comment !== '') {\n      obj['updatedBy'] = userId\n      await dispatch(updateTaskConversation(obj))\n      toast.success('Comment Updated Successfully', { position: 'bottom-right' })\n    }\n  }\n\n  useEffect(async () => {\n    if (tabId === 'tasknotes') {\n      await dispatch(getTaskConversation(id))\n    }\n  }, [tabId])\n\n  useEffect(() => {\n    setData(store?.data || [])\n  }, [store?.data])\n\n  const postComment = async () => {\n    if ((comment !== '' || replycomment !== '') || attachmentIds.length > 0) {\n      const data = {\n        organizationId: activeOrgId,\n        createdBy: userId,\n        updatedBy: userId,\n        comment: (conversationId === null || conversationId === '') ? comment : replycomment,\n        attachmentIds,\n        conversationId,\n        taskId: id\n      }\n      setBlock(true)\n      await dispatch(addTaskConversation(data))\n      toast.success('Comment Added Successfully', { position: 'bottom-right' })\n      setComment('')\n      //setFiles([])\n      setFilesArr([])\n      setProgress(0)\n      setAttachmentsId([])\n      setBlock(false)\n    }\n\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={2} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n\n      <X className='cursor-pointer' size={14} onClick={() => handleRemoveFile(file, index)} />\n\n    </Col>\n  ))\n\n  const replyNote = (k) => {\n    const temp = data.map((obj, i) => {\n      if (i === k) {\n        setConversationId(obj.id)\n        return { ...obj, replyFlag: true }\n      } else {\n        return { ...obj, replyFlag: false }\n      }\n    })\n    setData(temp)\n  }\n\n  const cancelReply = () => {\n    setConversationId(null)\n    setReplyComment('')\n    const temp = data.map((obj) => {\n      return { ...obj, replyFlag: false }\n    })\n    setData(temp)\n  }\n\n  return (\n    <Fragment>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody>\n\n            <fieldset className='form-label-group mb-50'>\n              <Label className='form-check-label' for={`add-comment-`}>\n                Add Comment\n              </Label>\n              <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' value={comment} onInput={(e) => setComment(e.target.value)} />\n            </fieldset>\n\n            <input {...getInputProps()} />\n\n            <Button type='button' color='primary' size='sm' {...getRootProps({})} >\n              <Paperclip size={14} className=''></Paperclip>\n            </Button>\n\n            <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n              Post Comment\n            </Button>\n\n            {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n            <Row className='d-flex p-1'>{fileList}</Row>\n\n            {data.map((item, k) => {\n              return (\n                <div className='d-flex align-items-start my-1' key={k}>\n                  {renderClient(item)}\n                  <div className='profile-user-info w-100'>\n                    <div className='d-flex align-items-center justify-content-between'>\n                      <h6 className='mb-0'>{item.username}</h6>\n                      <span className='d-flex text-body'>\n                        <span className='text-sm text-body font-small-3 mt-25'>{dateformat(item.createdon)}</span>\n                        {(!item.editFlag && !item.replyFlag) &&\n                          <UncontrolledDropdown>\n                            <DropdownToggle tag='span'>\n                              <MoreVertical size={16} />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); editNote(item.id, 1) }}>\n                                  <Edit2 size={13} /> Edit\n                                </Col>\n                              </DropdownItem>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); deletefn(item.id) }}>\n                                  <Trash size={13} /> Delete\n                                </Col>\n                              </DropdownItem>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); replyNote(k) }}>\n                                  <CornerUpRight size={13} /> Reply\n                                </Col>\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        }\n                      </span>\n                    </div>\n                    {(!item.editFlag) &&\n                      <Row className='mt-1'>\n\n                        <div className='white-space-wrap text-body '>\n                          {item.comment !== '' &&\n                            < span className='rounded-3 bg-light-primary chat-bubble'>\n                              {item.comment.replace(/(\\\\n)/g, \"\\n\")}\n                            </span>\n                          }\n                          <Row>\n                            {\n                              item?.files?.map((file, k) => {\n                                return (\n                                  <Col md={'2'} key={k} className='file-details d-flex align-items-center cursor-pointer'>\n                                    <ListGroupItem className={`col-12 d-flex mb-1 align-items-center ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n                                      <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}.${file.extension}` : file.originalfilename}</a>\n                                    </ListGroupItem>\n                                  </Col>\n                                )\n                              })\n                            }\n                          </Row>\n                        </div>\n                      </Row>\n                    }\n                    {item.editFlag &&\n                      <Col className='mt-2'>\n                        <Input type='textarea' rows='3' value={editcomment.replace(/(\\\\n)/g, \"\\n\")} onInput={(e) => { setEditComment(e.target.value) }} />\n\n                        <Col className='d-flex justify-content-end mt-1' >\n                          <Button size='sm' color='warning' outline onClick={() => editNote(-1, 1)}>Cancel</Button>\n                          <Button size='sm' color='primary' className='ms-1' onClick={() => saveNote(item)} >Save</Button>\n                        </Col>\n                      </Col>\n                    }\n                    {item.replyFlag &&\n                      <Col>\n                        <fieldset className='form-label-group mb-50'>\n                          <Label className='form-check-label' for={`add-comment-`}>\n                            Add Comment\n                          </Label>\n                          <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' value={replycomment} onInput={(e) => setReplyComment(e.target.value)} />\n                        </fieldset>\n                        <input {...getInputProps()} />\n\n                        <Button type='button' color='primary' size='sm' {...getRootProps({})} >\n                          <Paperclip size={14} className=''></Paperclip>\n                        </Button>\n\n                        <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n                          Send Reply\n                        </Button>\n                        <Button color='warning' className='ms-1' size='sm' onClick={() => cancelReply()}>\n                          Cancel\n                        </Button>\n\n                        {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n                        <Row className='d-flex p-1'>{fileList}</Row>\n                      </Col>\n                    }\n\n                    {\n                      item?.reply?.map((reply, j) => {\n                        return (\n                          reply !== null &&\n                          <div className='d-flex align-items-start my-1' key={j}>\n                            {renderClient(reply)}\n                            <div className='profile-user-info w-100'>\n                              <div className='d-flex align-items-center justify-content-between'>\n                                <h6 className='mb-0'>{reply.username}</h6>\n                                <span className='d-flex text-body'>\n                                  <span className='text-sm text-body font-small-3 mt-25'>{dateformat(reply.createdon)}</span>\n                                  {(!item.editFlag && !item.replyFlag) &&\n                                    <UncontrolledDropdown>\n                                      <DropdownToggle tag='span'>\n                                        <MoreVertical size={16} />\n                                      </DropdownToggle>\n                                      <DropdownMenu end>\n                                        <DropdownItem>\n                                          <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); editNote(reply.id, 2) }}>\n                                            <Edit2 size={13} /> Edit\n                                          </Col>\n                                        </DropdownItem>\n                                        <DropdownItem>\n                                          <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); deletefn(reply.id) }}>\n                                            <Trash size={13} /> Delete\n                                          </Col>\n                                        </DropdownItem>\n                                      </DropdownMenu>\n                                    </UncontrolledDropdown>\n                                  }\n                                </span>\n                              </div>\n                              <Row className='mt-1'>\n                                {!reply?.editFlag &&\n                                  <div className='white-space-wrap text-body '>\n                                    {reply.comment !== '' &&\n                                      < span className='rounded-3 bg-light-warning chat-bubble-reply'>\n                                        {reply.comment.replace(/(\\\\n)/g, \"\\n\")}\n                                      </span>\n                                    }\n                                    <Row>\n                                      {\n                                        reply?.files?.map((file, k) => {\n                                          return (\n                                            <Col md={'2'} key={k} className='file-details d-flex align-items-center cursor-pointer'>\n                                              <ListGroupItem className={`col-12 d-flex mb-1 align-items-center ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n                                                <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}.${file.extension}` : file.originalfilename}</a>\n                                              </ListGroupItem>\n                                            </Col>\n                                          )\n                                        })\n                                      }\n                                    </Row>\n                                  </div>\n                                }\n                                {reply?.editFlag &&\n                                  <Col className='mt-2'>\n                                    <Input type='textarea' rows='3' value={editcomment.replace(/(\\\\n)/g, \"\\n\")} onInput={(e) => { setEditComment(e.target.value) }} />\n\n                                    <Col className='d-flex justify-content-end mt-1' >\n                                      <Button size='sm' color='warning' outline onClick={() => editNote(-1, 2)}>Cancel</Button>\n                                      <Button size='sm' color='primary' className='ms-1' onClick={() => saveNote(reply)} >Save</Button>\n                                    </Col>\n                                  </Col>\n                                }\n                              </Row>\n                            </div>\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                </div>\n              )\n            })\n            }\n          </CardBody>\n        </Card>\n      </UILoader>\n    </Fragment >\n  )\n}\n\nexport default Templates\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, Badge, Table, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n// ** Third Party Components\nimport Conversation from './Conversation'\n\nimport { Calendar, MessageCircle, User, X } from 'react-feather'\n\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nimport moment from 'moment'\nconst UserInfoCard = ({ selectedTask }) => {\n\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n  const [active, setActive] = useState('tasknotes')\n  // ** State\n  \n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  useEffect(() => {\n    const tabId = searchParams.get('tabId')\n    if (tabId) {\n      setActive(tabId)\n    }\n  }, [searchParams])\n\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n  }\n\n  return (\n    <Fragment>\n\n      <Card>\n        <CardBody>\n          <Table responsive bordered>\n            <thead>\n              <tr >\n                <th colSpan='1'>\n                  <Col tag={Link} to={`/clients/view/${selectedTask.clientid}`}>{selectedTask.clientname} - </Col>\n                  <Col tag={Link} to={`/services/view/${selectedTask.serviceid}`}>{selectedTask.servicename}</Col></th>\n                <th>\n                  <Row className='justify-content-end'>\n                    <Col className='p-0' md={5}>\n                    </Col>\n                    <Col md={2} className='d-flex'>\n                      <Col tag={Link} to={`/task/list`} >\n                        <X size={16} className='ms-1 cursor-pointer' id='deletetooltip' />\n                      </Col>\n                    </Col>\n                  </Row>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td >\n                  Assigned To\n                </td>\n                <td>\n                  {selectedTask.assigeduser.map((user, key) => {\n\n                    return (<Badge color='light-primary' pill href='#' key={key}>\n                      <User size={14} />\n                      <span className='align-middle ms-50'>{JSON.parse(user)?.name}</span>\n                    </Badge>\n                    )\n                  })\n                  }\n                </td>\n              </tr>\n              <tr>\n                <td>Start Date</td>\n                <td >\n                  <div className='d-flex justify-content-between' >\n                    {dateFormat(selectedTask.startdate)}\n                    <Calendar size={16} />\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td >\n                  End Date\n                </td>\n                <td>\n                  <div className='d-flex justify-content-between' >\n                    {dateFormat(selectedTask.enddate)}\n                    <Calendar size={16} />\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n      <Nav pills className=\"flex-lg-row flex-column nav nav-left\">\n        <NavItem>\n          <NavLink active={active === 'tasknotes'} onClick={() => toggleTab('tasknotes')}>\n            <MessageCircle className='font-medium-3 me-50' />\n            <span className='fw-bold'>Comments</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <Card>\n        <CardBody className='px-0'>\n          <Row className=''>\n            <Fragment>\n              <TabContent activeTab={active}>\n                <TabPane tabId='tasknotes'>\n                  <Conversation tabId={active} selectedTask={selectedTask}/>\n                </TabPane>\n              </TabContent>\n            </Fragment>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment >\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getTask } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst TaskView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.task)\n  const dispatch = useDispatch()\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(async () => {\n    if (id !== null) {\n      setBlock(true)\n      await dispatch(getTask({id, userId}))\n    }\n    setBlock(false)\n\n  }, [dispatch, id])\n\n\n  return store.selectedTask !== null && store.selectedTask !== undefined ? (\n    <UILoader blocking={block} loader={<Loader />}>\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='12' lg='12' >\n            <UserInfoCard selectedTask={store.selectedTask} />\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <UILoader blocking={block} loader={<Loader />}>\n      {/* <Alert color='danger'>\n        <h4 className='alert-heading'>Task not found</h4>\n        <div className='alert-body'>\n          Task with id: {id} doesn't exist. Check list of all Tasks: <Link to='/task/list'>Tasks List</Link>\n        </div>\n      </Alert> */}\n    </UILoader>\n  )\n}\nexport default TaskView\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}