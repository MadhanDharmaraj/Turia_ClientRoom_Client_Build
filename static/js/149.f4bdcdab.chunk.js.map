{"version":3,"sources":["views/forms/form-elements/number-input/NumberInputSize.js","views/forms/form-elements/number-input/NumberInputBasic.js","views/forms/form-elements/number-input/NumberInputMinMax.js","views/forms/form-elements/number-input/NumberInputFormat.js","views/forms/form-elements/number-input/NumberInputColors.js","views/forms/form-elements/number-input/NumberInputDecimal.js","views/forms/form-elements/number-input/NumberInputControlled.js","views/forms/form-elements/number-input/index.js","@core/components/breadcrumbs/index.js"],"names":["NumberInputSize","tag","className","for","defaultValue","upHandler","id","downHandler","NumberInputBasic","disabled","readOnly","NumberInputMinMax","min","max","NumberInputFormat","parser","num","cells","toString","split","replace","formatter","colors","NumberInputColors","map","color","NumberInputDecimal","step","NumberInputControlled","useState","value","setValue","isDisabled","setIsDisabled","isReadOnly","setIsReadOnly","onChange","size","onClick","NumberInput","title","data","md","sm","xs","BreadCrumbs","props","to","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end"],"mappings":"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","file":"static/js/149.f4bdcdab.chunk.js","sourcesContent":["// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputSize = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Sizes</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='d-flex flex-wrap'>\n          <div className='me-2'>\n            <Label className='form-label' for='lg-number-input'>\n              Large Input\n            </Label>\n            <InputNumber\n              defaultValue={10}\n              className='input-lg'\n              upHandler={<Plus />}\n              id='lg-number-input'\n              downHandler={<Minus />}\n            />\n          </div>\n          <div>\n            <Label className='form-label' for='default-number-input'>\n              Default Input\n            </Label>\n            <InputNumber defaultValue={10} upHandler={<Plus />} id='default-number-input' downHandler={<Minus />} />\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputSize\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputBasic = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <div>\n            <Label className='form-label' for='basic-number-input'>\n              Basic Input\n            </Label>\n            <InputNumber id='basic-number-input' defaultValue={10} upHandler={<Plus />} downHandler={<Minus />} />\n          </div>\n          <div>\n            <Label className='form-label' for='disabled-number-input'>\n              Disabled Input\n            </Label>\n            <InputNumber\n              disabled\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='disabled-number-input'\n            />\n          </div>\n          <div>\n            <Label className='form-label' for='readOnly-number-input'>\n              ReadOnly Input\n            </Label>\n            <InputNumber\n              readOnly\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='readOnly-number-input'\n            />\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputBasic\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputMinMax = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Min Max</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='min-max-number-input'>\n            Min Max Input\n          </Label>\n          <InputNumber\n            min={0}\n            max={10}\n            defaultValue={5}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='min-max-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputMinMax\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputFormat = () => {\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n\n  const format = num => {\n    return `$ ${numberWithCommas(num)}`\n  }\n\n  const parser = num => {\n    const cells = num.toString().split(' ')\n    if (!cells[1]) {\n      return num\n    }\n\n    const parsed = cells[1].replace(/,*/g, '')\n\n    return parsed\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Formatting</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='formatting-number-input'>\n            Formatting Input\n          </Label>\n          <InputNumber\n            parser={parser}\n            defaultValue={5}\n            formatter={format}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='formatting-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputFormat\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info']\n\nconst NumberInputColors = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Colors</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          {colors.map(color => (\n            <div key={color}>\n              <Label className='form-label text-capitalize' for={`${color}-number-input`}>\n                {color} Input\n              </Label>\n              <InputNumber\n                defaultValue={10}\n                upHandler={<Plus />}\n                downHandler={<Minus />}\n                id={`${color}-number-input`}\n                className={`input-${color}`}\n              />\n            </div>\n          ))}\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputColors\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputDecimal = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Decimal</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='decimal-number-input'>\n            Decimal Input\n          </Label>\n          <InputNumber\n            step={0.1}\n            defaultValue={10}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='decimal-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputDecimal\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label, Button } from 'reactstrap'\n\nconst NumberInputControlled = () => {\n  const [value, setValue] = useState(1)\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(false)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='controlled-number-input'>\n            Controlled Input\n          </Label>\n          <InputNumber\n            value={value}\n            upHandler={<Plus />}\n            disabled={isDisabled}\n            readOnly={isReadOnly}\n            downHandler={<Minus />}\n            id='controlled-number-input'\n            onChange={value => setValue(value)}\n          />\n        </div>\n        <div className='demo-inline-spacing'>\n          <Button size='sm' color='primary' onClick={() => setIsDisabled(!isDisabled)}>\n            Toggle Disabled\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setIsReadOnly(!isReadOnly)}>\n            Toggle ReadOnly\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setValue(10)}>\n            Set Value to 10\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputControlled\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport NumberInputSize from './NumberInputSize'\nimport NumberInputBasic from './NumberInputBasic'\nimport NumberInputMinMax from './NumberInputMinMax'\nimport NumberInputFormat from './NumberInputFormat'\nimport NumberInputColors from './NumberInputColors'\nimport NumberInputDecimal from './NumberInputDecimal'\nimport NumberInputControlled from './NumberInputControlled'\n\n// ** Styles\nimport '@styles/react/libs/input-number/input-number.scss'\n\nconst NumberInput = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Number Input' data={[{ title: 'Form Elements' }, { title: 'Number Input' }]} />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <NumberInputBasic />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputControlled />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputDecimal />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputMinMax />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputSize />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputFormat />\n        </Col>\n        <Col xs='12'>\n          <NumberInputColors />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default NumberInput\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}