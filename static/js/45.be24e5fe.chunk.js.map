{"version":3,"sources":["views/apps/dsc-license/list/Table.js","views/apps/dsc-license/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","Licenses","MySwal","withReactContent","Swal","useState","data","setData","id","localStorage","getItem","statusArr","statusColArr","formModal","setFormModal","selected","setSelected","filesArr","setFilesArr","attachmentIds","setAttachmentsId","fileUploadProgress","setProgress","fileClassNames","image","pdf","xlsx","xls","docx","doc","schema","yup","shape","name","required","contactid","default","createdby","updatedby","organizationid","licenseno","issueddate","expirydate","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","setValue","resetForm","closeModal","getLicenses","axios","post","licenseType","then","res","digitalsignatures","catch","err","console","log","configUpload","headers","onUploadProgress","Math","round","loaded","total","block","setBlock","Loader","uploadFiles","files","formData","FormData","forEach","file","key","append","attachment_ids","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","obj","extension","split","pop","push","length","toast","error","getRootProps","getInputProps","fileList","map","index","md","className","substr","size","onClick","filtered","filter","i","splice","handleRemoveFile","onSubmit","moment","valueOf","today","startOf","status","success","position","dateFormat","value","undefined","format","unix","useEffect","getRow","fieldLabel","fieldName","reqflag","sm","classnames","for","render","field","invalid","message","tag","color","responsive","item","k","target","href","driveid","originalfilename","card","attachmentids","openEditModal","lg","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","updatedBy","dismiss","DismissReason","cancel","deletefn","isOpen","toggle","blocking","loader","Object","keys","Form","onChange","date","dateStr","options","altInput","altFormat","tempIds","indexOf","temp","ob","test","handleRemoveFileFromLicense","xs","type","ServiceList","Table","UILoader","props","children","overlayColor","Tag","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/45.be24e5fe.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport Flatpickr from 'react-flatpickr'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Label,\n  Input,\n  Button,\n  CardBody,\n  FormFeedback,\n  Table,\n  Modal,\n  CardTitle,\n  ModalHeader,\n  Badge,\n  ModalBody,\n  Progress\n} from 'reactstrap'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport axios from '@src/configs/axios/axiosConfig'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n// ** Third Party Components\nimport classnames from 'classnames'\nimport moment from 'moment'\nimport toast from 'react-hot-toast'\nimport { Edit, Trash2, Plus, X } from 'react-feather'\nimport { useDropzone } from 'react-dropzone'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n\nconst Licenses = ({ }) => {\n\n  const MySwal = withReactContent(Swal)\n  const [data, setData] = useState([])\n\n  const id = localStorage.getItem('clientId')\n  const statusArr = ['', 'Active', '', 'Expired']\n  const statusColArr = ['', 'light-primary', '', 'light-danger']\n  const [formModal, setFormModal] = useState(false)\n  const [selected, setSelected] = useState(null)\n  const [filesArr, setFilesArr] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const [fileUploadProgress, setProgress] = useState(0)\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Please Enter Name\"),\n    id: yup.string(),\n    contactid: yup.string().default(id),\n    createdby: yup.string().default(userId),\n    updatedby: yup.string().default(userId),\n    organizationid: yup.string().default(activeOrgId),\n    licenseno: yup.string().required('Please Enter License Number'),\n    issueddate: yup.string().default('').required(\"Please Enter Issued Date\"),\n    expirydate: yup.string().default('')\n  })\n\n  const { handleSubmit, formState: { errors }, control, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const resetForm = () => {\n    setValue('name', '')\n    setValue('issueddate', '')\n    setValue('expirydate', '')\n    setValue('licenseno', '')\n    setValue('contactid', id)\n    setValue('id', '')\n    setValue('attachmentIds', [])\n    setValue('organizationid', activeOrgId)\n    setValue('createdby', userId)\n    setValue('updatedby', userId)\n  }\n\n  const closeModal = () => {\n    setFormModal(false)\n    resetForm()\n  }\n\n  const openModal = () => {\n    setFormModal(true)\n    resetForm()\n  }\n\n  const openEditModal = card => {\n    setSelected(card)\n    setFormModal(true)\n    const issueddate = moment(card.issueddate, 'x').format('MMM DD, Y')\n    const expirydate = moment(card.expirydate, 'x').format('MMM DD, Y')\n    setValue('name', card.name)\n    setValue('issueddate', issueddate)\n    setValue('expirydate', expirydate)\n    setValue('licenseno', card.licenseno)\n    setValue('contactid', id)\n    setValue('id', card.id)\n    setValue('organizationid', activeOrgId)\n    setValue('createdby', userId)\n    setValue('updatedby', userId)\n    setValue('attachmentIds', card.attachmentids ?? [])\n    setAttachmentsId(card.attachmentids)\n\n  }\n\n  const getLicenses = () => {\n    axios.post('/digitalsignatures/listbyclient', { contactid: id, licenseType: false })\n      .then((res) => { setData(res.data.digitalsignatures) })\n      .catch((err) => { console.log(err) })\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const uploadFiles = (files) => {\n\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n\n    formData.append('organizationId', activeOrgId)\n    formData.append('clientId', id)\n\n    \n    formData.append('folderPath[0]', localStorage.getItem('clientName'))\n    formData.append('folderPath[1]', 'Licence')\n    \n    setBlock(true)\n\n    axios.post('/files/upload', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      setBlock(false)\n    }).catch((err) => { console.log(err); setBlock(false) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    setFilesArr(filtered)\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={6} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n      <X size={14} className='cursor-pointer' onClick={() => handleRemoveFile(file, index)} />\n    </Col>\n  ))\n\n  const deletefn = (id) => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await axios.post('/digitalsignatures/delete', { id, updatedBy: userId })\n        getLicenses()\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'License has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n        return true\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\n        return false\n      }\n    })\n  }\n\n  const onSubmit = async data => {\n    data.issueddate = moment(data.issueddate).valueOf()\n    data.expirydate = data.expirydate !== '' ? moment(data.expirydate).valueOf() : 0\n    data.attachmentIds = attachmentIds\n    const today = moment().startOf('d').valueOf()\n    data.status = today > data.expirydate ? 3 : 1\n    if (selected !== null) {\n      axios.post('/digitalsignatures/updatelicenses', data)\n        .then(() => {\n          getLicenses()\n          setFormModal(false)\n          toast.success('License Updated Successfully', { position: 'bottom-right' })\n          setFilesArr([])\n          setProgress(0)\n          setAttachmentsId([])\n        })\n        .catch((err) => { console.log(err) })\n      setSelected(null)\n    } else {\n\n      axios.post('/digitalsignatures/addlicenses', data)\n        .then(async () => {\n          getLicenses()\n          setFormModal(false)\n          setFilesArr([])\n          setAttachmentsId([])\n          toast.success('License Added Successfully', { position: 'bottom-right' })\n        })\n        .catch((err) => { console.log(err) })\n    }\n\n    resetForm()\n  }\n\n  const dateFormat = (value) => {\n    if (value === null || value === undefined) {\n      return ''\n    }\n    if (value.length === 13) {\n      return moment(value, 'x').format('MMM DD, YYYY')\n    } else {\n      return moment.unix(value).format('MMM DD, YYYY')\n    }\n  }\n\n  useEffect(() => {\n    getLicenses()\n  }, [])\n\n  const getRow = (fieldLabel, fieldName, reqflag = true) => {\n    return (\n      <Col md={12}>\n        <Label sm='12' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName}>\n          {fieldLabel}\n        </Label>\n        <Col>\n          <Controller\n            id={fieldName}\n            name={fieldName}\n            control={control}\n            render={({ field }) => <Input invalid={errors[fieldName] && true} {...field} />}\n          />\n          {errors[fieldName] && <FormFeedback>{errors[fieldName].message}</FormFeedback>}\n        </Col>\n      </Col>\n    )\n  }\n\n  const handleRemoveFileFromLicense = (id) => {\n\n    const tempIds = [...attachmentIds]\n    tempIds.splice(tempIds.indexOf(id), 1)\n    setAttachmentsId(tempIds)\n    const tempfile = [...selected.files]\n    const temp = tempfile.filter((ob) => { return ob.id !== id })\n\n    const test = { ...selected }\n    test.files = temp\n    setSelected(test)\n    setValue('attachmentIds', temp.map((obj) => obj.id) ?? [])\n\n  }\n\n  return (\n    <Card>\n      <CardBody >\n        <CardTitle className='align-items-end card-title d-flex justify-content-between mb-0' tag='h5'>\n          Licenses\n          <div className='d-flex'>\n            <Button size='sm' className='me-1' color='primary' onClick={() => { openModal() }}>\n              <Plus size={14} />\n              Add New\n            </Button>\n          </div>\n        </CardTitle>\n      </CardBody>\n      <Table className='text-nowrap text-center border-bottom' responsive>\n        <thead>\n          <tr>\n            <th className='text-start'>Name</th>\n            <th>Number</th>\n            <th>Start Date</th>\n            <th>Expiry Date</th>\n            <th>Files</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td className='text-start'>{item.name}</td>\n                <td>\n                  {item.licenseno}\n                </td>\n                <td>\n                  {item.issueddate !== undefined ? dateFormat(item.issueddate) : ''}\n                </td>\n                <td>\n                  {item.expirydate > 0 ? dateFormat(item.expirydate) : ''}\n                </td>\n                <td className='text-start'>\n                  {\n                    item.files?.map((file, k) => {\n                      return (\n                        <Badge key={k} className='ms-25' color='primary' >\n                          <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 1 ? `${file.originalfilename.split('.')[0].substr(0, 10)}.${file.extension}` : file.originalfilename}</a>\n                        </Badge>\n                      )\n                    })\n                  }\n                </td>\n                <td>\n                  <Badge color={statusColArr[item.status]}> {statusArr[item.status]}</Badge>\n                </td>\n                <td>\n                  <div className='column-action d-flex align-items-center'>\n                    <Col\n                      onClick={() => { openEditModal(item) }}>\n                      <Edit className='cursor-pointer mt-0' size={16} />\n                    </Col>\n                    <Col lg={4}\n                      onClick={() => { deletefn(item.id) }}>\n                      <Trash2\n                        className='cursor-pointer ms-1 mt-0' size={16} />\n                    </Col>\n                  </div>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => closeModal()}>Licenses</ModalHeader>\n        <ModalBody>\n          <UILoader blocking={block} loader={<Loader />}>\n            {\n              Object.keys(errors).map((key) => {\n\n                return <FormFeedback key={key}>${errors[key]?.message}</FormFeedback>\n\n              })\n            }\n            <Row tag={Form} className='gx-2 gy-1' onSubmit={handleSubmit(onSubmit)}>\n\n              {getRow('Name', 'name', true)}\n\n              {getRow('License No', 'licenseno', true)}\n\n              <Col md={12}>\n                <Label className='form-label required' for='comments'>\n                  Issued Date\n                </Label>\n                <Controller\n                  control={control}\n                  name={`issueddate`}\n                  id='issueddate'\n                  render={({ field }) => (\n                    <Flatpickr\n                      value={field.value}\n                      onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                      options={{ altInput: true, altFormat: \"M j, Y\", dateFormat: \"M j, Y\" }}\n                      className='form-control invoice-edit-input date-picker'\n                    />\n                  )}\n                />\n                {errors.issueddate && <p className='text-danger' >{errors.issueddate.message}</p>}\n\n              </Col>\n\n              <Col md={12}>\n                <Label className='form-label' for='comments'>\n                  Expiry Date\n                </Label>\n                <Controller\n                  control={control}\n                  name={`expirydate`}\n                  id='expirydate'\n                  render={({ field }) => (\n                    <Flatpickr\n                      value={field.value}\n                      onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                      options={{ altInput: true, altFormat: \"M j, Y\", dateFormat: \"M j, Y\" }}\n                      className='form-control invoice-edit-input date-picker'\n                    />\n                  )}\n                />\n                {errors.expirydate && <FormFeedback>{errors.expirydate.message}</FormFeedback>}\n\n              </Col>\n              <Col>\n                <input {...getInputProps()} />\n                <Button color='primary' {...getRootProps({})}>Add Attachments</Button>\n              </Col>\n              {fileUploadProgress > 0 && <Progress color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n              <Row className='d-flex p-1'>{fileList}</Row>\n\n              <Row className='d-flex col-12'>\n                {selected?.files?.map((file, k) => {\n                  return (<Badge key={k} color={'primary'} className='me-1 mt-1 col-4' onClick={() => handleRemoveFileFromLicense(file.id)}>\n                    {file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}` : file.originalfilename} X</Badge>)\n                })\n                }\n              </Row>\n\n              <Col className='mt-2 pt-1' xs={12}>\n                <Button type='submit' className='me-1' color='primary'>\n                  Submit\n                </Button>\n                <Button className='me-1' color='warning' onClick={() => closeModal()}>\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </UILoader>\n        </ModalBody>\n      </Modal>\n    </Card>\n  )\n}\n\nexport default Licenses\n","// ** User List Component\nimport Table from './Table'\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default ServiceList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}