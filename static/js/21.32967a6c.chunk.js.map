{"version":3,"sources":["views/apps/team/view/attendance_columns.js","views/apps/team/view/Attendance.js","views/apps/team/view/JobInfo.js","views/apps/team/view/task_columns.js","views/apps/team/view/Tasks.js","views/apps/team/view/clients_columns.js","views/apps/team/view/Clients.js","views/apps/team/view/Leave.js","views/apps/team/view/Tabs.js","views/apps/team/view/UserInfoCard.js","views/apps/team/view/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/webpack/bootstrap","../ReactPaginate/node_modules/prop-types/index.js","../webpack:/ReactPaginate/external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js"],"names":["msToTime","ms","seconds","hours","parseInt","minutes","statusArr","statusColorArr","timeFormat","value","moment","format","columns","name","sortable","sortField","maxWidth","cell","row","actualdate","punchin","punchout","totalhours","selector","locationname","className","href","target","punchoutlocation","color","status","Attendance","tabId","dispatch","useDispatch","store","useSelector","state","profile","id","useParams","useState","rowsPerPage","currentPage","setCurrentPage","statusValue","sort","sortColumn","startOf","valueOf","startDate","setStartDate","endOf","endDate","setEndDate","useEffect","attendaceList","q","page","perPage","userId","export","data","length","dateFormat","changeDate","val","start_date","end_date","add","subtract","exportData","params","axios","post","response","employeeattendances","toast","error","position","map","obj","result","XLSX","json_to_sheet","origin","skipHeader","ws","Heading","sheet_add_aoa","wb","Sheets","SheetNames","excelBuffer","bookType","type","Blob","month","FileSaver","selectedUser","outline","caret","end","onClick","noHeader","sortServer","pagination","responsive","paginationServer","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","employeeAttendances","slice","dataToRender","activeOrgId","activeOrganizationid","orgUserId","JobInfo","props","monthlyHours","setMonthlylyHours","schema","yup","shape","createdBy","default","organizationId","dateofhire","dateofbirth","hourlyrate","salary","updatedBy","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","reset","setValue","onSubmit","addEmployeeDetails","success","monthlyHoursfn","businessHours","forEach","JSON","parse","startTime","start","minDiff","diff","isNaN","floor","hours_temp","minutes_temp","hur","bal_minutes","parseFloat","then","res","organizationusers","officetime","catch","err","console","log","sm","rolename","render","field","onChange","date","dateStr","options","altInput","altFormat","e","toFixed","statusObj","statusOptions","minWidth","uniqueidentity","clientname","servicename","enddate","assignee","key","split","reviewer","taskstatus","TaskList","block","setBlock","Loader","task","searchTerm","setSearchTerm","selectedIds","setSelectedIds","userOptions","setuserOptions","getOrganizationUsers","arr","getData","recurringFlag","orguserid","BootstrapCheckbox","forwardRef","ref","handleFilter","popoverOpen","setPopoverOpen","selUserId","setSelUserId","blocking","loader","disabled","placeholder","placement","isOpen","toggle","classnames","classNamePrefix","find","c","getOptionLabel","option","getOptionValue","taskIds","existuserId","selectableRows","defaultSortField","selectableRowsComponent","onSelectedRowsChange","temp","selectedRows","push","renderClient","initials","content","charAt","toUpperCase","stringTrimfn","text","substr","to","contactpersonname","email","entityname","contactnumber","pill","ClientsList","client","assignflag","clientIds","allData","MySwal","withReactContent","Swal","Leave","leaveTypeOptions","setLeaveTypeOptions","teamview","leaveDuration","setLeaveDuration","leaveTypeId","required","fromDate","duration","toDate","when","is","reason","daysCount","errors","formState","formModal","setFormModal","closeModal","statuArr","unix","leave","String","undefined","UpdateLeave","applyLeave","leaveList","designationId","designationid","leavetypes","CustomPagination","size","employeeLeaves","leavetypename","fromdate","todate","dayscount","userid","leavetypeid","lid","fire","title","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteLeave","message","for","inputRef","defaultChecked","onInput","invalid","UserTabs","active","navigate","useNavigate","pills","activeTab","Tasks","Clients","statusColors","UserInfoCard","contentStyles","borderRadius","fontSize","width","height","style","role","contactno","departmentname","designationname","Can","I","a","tag","Link","usertype","TeamView","users","search","useLocation","searchParams","URLSearchParams","getUser","setActive","get","xl","lg","xs","order","md","toggleTab","tab","UILoader","children","overlayColor","Tag","backgroundColor","defaultProps","ComponentSpinner","__WEBPACK_EXTERNAL_MODULE__1__","module","exports","require","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","d","getter","o","defineProperty","enumerable","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","PageView","activeLinkClassName","getEventListener","pageSelectedHandler","extraAriaContext","ariaLabel","ariaCurrent","tabIndex","aria-label","aria-current","onKeyPress","propTypes","BreakView","breakLabel","breakClassName","breakLinkClassName","breakHandler","PaginationBoxView","initialSelected","evt","preventDefault","returnValue","handlePageSelected","setState","callCallback","handlerFunction","eventListener","index","getForwardJump","getBackwardJump","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","getPageElement","breakView","leftSide","rightSide","createPageView","handleBreakClick","initialPage","this","disableInitialCallback","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","disabledClassName","previousAriaLabel","prevRel","nextAriaLabel","nextRel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","aria-disabled","rel","handleNextPage","Component"],"mappings":"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","file":"static/js/21.32967a6c.chunk.js","sourcesContent":["// ** React Imports\nimport moment from 'moment'\nimport { Badge } from 'reactstrap'\n\nconst dateFormat = (value) => {\n\n  return moment(value, 'x').format(\"MMM DD, YYYY\")\n\n}\n\nconst msToTime = (ms) => {\n\n  let seconds = ms / 1000\n  const hours = parseInt(seconds / 3600)\n  seconds = seconds % 3600\n  const minutes = parseInt(seconds / 60)\n  seconds = seconds % 60\n  return `${hours} Hrs : ${minutes} Mins`\n}\nconst statusArr = ['', 'Early', 'Regular', 'Late']\nconst statusColorArr = ['', 'light-primary', 'light-success', 'light-warning']\n\nconst timeFormat = (value) => {\n  return moment(value, 'x').format(\"H:m A\")\n}\n// ** Table columns\nexport const columns = [\n  {\n    name: 'Date',\n    sortable: true,\n    sortField: 'id',\n    maxWidth: '147px',\n    cell: row => <span>{dateFormat(row.actualdate)}</span>\n  },\n  {\n    name: 'Punch In',\n    sortable: true,\n    sortField: 'id',\n    maxWidth: '147px',\n    cell: row => <span>{timeFormat(row.punchin)}</span>\n  },\n  {\n    name: 'Punch Out',\n    sortable: true,\n    sortField: 'id',\n    maxWidth: '167px',\n    cell: row => <span>{row.punchout ? timeFormat(row.punchout) : ''}</span>\n  },\n  {\n    name: 'Total Hours',\n    sortable: true,\n    sortField: 'id',\n    maxWidth: '167px',\n    cell: row => <span>{msToTime(row.totalhours)}</span>\n  },\n  {\n    name: 'Punch In Location',\n    maxWidth: '250px',\n    sortable: true,\n    sortField: 'location',\n    selector: row => row.locationname,\n    cell: row => (\n\n      <span className='text-capitalize text-truncate'>\n        <a href={`https://www.google.com/maps/search/${row?.locationname}`} target='_blank'>{row.locationname}</a>\n      </span>\n    )\n  },\n  {\n    name: 'Punch Out Location',\n    maxWidth: '250px',\n    sortable: true,\n    sortField: 'location',\n    selector: row => row.punchoutlocation,\n    cell: row => (\n\n      <span className='text-capitalize text-truncate'>\n        <a href={`https://www.google.com/maps/search/${row?.punchoutlocation}`} target='_blank'>{row.punchoutlocation}</a>\n      </span>\n    )\n  },\n  {\n    name: 'Status',\n    sortable: true,\n    sortField: 'id',\n    maxWidth: '147px',\n    cell: row => <Badge color={statusColorArr[row.status]}>{statusArr[row.status]}</Badge>\n  }\n]\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './attendance_columns'\nimport ReactPaginate from 'react-paginate'\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, MoreVertical, Download, ChevronLeft, ChevronRight } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { attendaceList } from './store/index'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as FileSaver from \"file-saver\"\nimport * as XLSX from \"xlsx\"\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useParams } from 'react-router-dom'\nimport moment from 'moment'\nimport toast from 'react-hot-toast'\n\nconst Attendance = ({ tabId }) => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.profile)\n  const { id } = useParams()\n  // ** States\n  const [value] = useState('')\n\n  const [rowsPerPage] = useState(6)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [statusValue] = useState('')\n  const [sort] = useState('desc')\n  const [sortColumn] = useState('punchin')\n  const [startDate, setStartDate] = useState(moment().startOf('month').startOf('day').valueOf())\n  const [endDate, setEndDate] = useState(moment().endOf('month').startOf('day').valueOf())\n\n  useEffect(() => {\n    if (tabId === 'teamattendance') {\n      dispatch(\n        attendaceList({\n          sort,\n          q: value,\n          sortColumn,\n          page: currentPage,\n          perPage: rowsPerPage,\n          status: statusValue,\n          userId: id,\n          startDate,\n          endDate,\n          export: false\n        })\n      )\n    }\n  }, [tabId, startDate, endDate])\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      userId: id,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.employeeAttendances.length > 0) {\n      return store.employeeAttendances.slice(0, rowsPerPage)\n    } else if (store.employeeAttendances.length === 0 && isFiltered) {\n      return []\n    }\n  }\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(\n      attendaceList({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        userId: id,\n        startDate,\n        endDate,\n        export: false\n      })\n    )\n  }, [dispatch, store.data.length, currentPage])\n\n  const handlePagination = page => {\n    dispatch(\n      attendaceList({\n        q: value,\n        page: currentPage,\n        status: statusValue,\n        userId: id,\n        perPage: rowsPerPage,\n        startDate,\n        endDate,\n        export: false\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const dateFormat = (value) => {\n\n    return moment(value, 'x').format(\"MMM DD, YYYY\")\n\n  }\n\n  const msToTime = (ms) => {\n\n    let seconds = ms / 1000\n    const hours = parseInt(seconds / 3600)\n    seconds = seconds % 3600\n    const minutes = parseInt(seconds / 60)\n    seconds = seconds % 60\n    return `${hours} Hrs : ${minutes} Mins`\n  }\n\n  const timeFormat = (value) => {\n    return moment(value, 'x').format(\"H:m A\")\n  }\n\n  const changeDate = (val) => {\n    let start_date, end_date\n    if (val === 1) {\n      start_date = moment(startDate, 'x').add(1, 'M').startOf('day').valueOf()\n      end_date = moment(endDate, 'x').add(1, 'M').endOf('day').valueOf()\n    } else {\n      start_date = moment(startDate, 'x').subtract(1, 'M').startOf('day').valueOf()\n      end_date = moment(endDate, 'x').subtract(1, 'M').endOf('day').valueOf()\n    }\n    setStartDate(start_date)\n    setEndDate(end_date)\n  }\n\n  const exportData = async () => {\n    const params = {\n      q: value,\n      page: currentPage,\n      status: statusValue,\n      userId: id,\n      perPage: rowsPerPage,\n      startDate,\n      endDate,\n      export: true\n    }\n    const response = await axios.post(`/employeeattendances/list`, params)\n    if (response.data.employeeattendances.employeeattendances.length === 0) {\n      toast.error('No Record to export Data', { position: 'bottom-right' })\n      return false\n    }\n    const result = await response.data.employeeattendances.employeeattendances.map((obj) => {\n\n      const data = {}\n      data['date'] = dateFormat(obj.actualdate)\n      data['punchin'] = timeFormat(obj.punchin)\n      data['punchout'] = timeFormat(obj.punchout)\n      data['totalhours'] = msToTime(obj.totalhours)\n\n      return data\n    })\n\n    const ws = await XLSX.utils.json_to_sheet(result, { origin: 'A2', skipHeader: true })\n    const Heading = [['Date', 'Punch In', 'Punch Out', 'Total Hours']]\n    XLSX.utils.sheet_add_aoa(ws, Heading)\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] }\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" })\n    const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n    const month = moment(startDate, 'x').format('MMM')\n    FileSaver.saveAs(data, `${selectedUser.name}-${month}-Attendance.xlsx`)\n\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <CardHeader className='py-1'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='secondary' outline caret>\n              <MoreVertical className='font-small-4 me-50' />\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem className='w-100' onClick={() => exportData()}>\n                <Download className='font-small-4 me-50' />\n                <span>Export</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n          <div className='border border-1 p-md-50'>\n            <ChevronLeft className='cursor-pointer' onClick={() => { changeDate(2) }} />\n            {moment(startDate, 'x').format('MMMM')}\n            <ChevronRight className='cursor-pointer' onClick={() => { changeDate(1) }} />\n          </div>\n        </CardHeader>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <DataTable\n            noHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={columns}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default Attendance\n","// ** Reactstrap Imports\nimport { Card, CardBody, Row, Col, Input, Form, Button } from 'reactstrap'\nimport Flatpickr from 'react-flatpickr'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { useForm, Controller } from \"react-hook-form\"\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { useParams } from 'react-router-dom'\nimport { addEmployeeDetails } from './store/index'\nimport { useDispatch } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport moment from 'moment'\nimport toast from 'react-hot-toast'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\nconst JobInfo = (props) => {\n\n  const { tabId, selectedUser } = props\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const [monthlyHours, setMonthlylyHours] = useState(0)\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    id: yup.string().default(id),\n    organizationId: yup.string().default(activeOrgId),\n    dateofhire: yup.string().default(''),\n    dateofbirth: yup.string().default(''),\n    hourlyrate: yup.string().default(''),\n    salary: yup.string().default(''),\n    updatedBy: yup.string().default(userId)\n  })\n\n  const { handleSubmit, control, reset, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const onSubmit = async (data) => {\n\n    data.dateofbirth = moment(data.dateofbirth).startOf('d').valueOf()\n    data.dateofhire = moment(data.dateofhire).startOf('d').valueOf()\n    await dispatch(addEmployeeDetails(data))\n\n    toast.success('Jobinfo UpdatedSuccessfully', { position: 'bottom-right' })\n  }\n\n  const monthlyHoursfn = async (businessHours) => {\n    let minutes = 0\n    await businessHours.forEach((val) => {\n      const obj = JSON.parse(val)\n      if (obj.status) {\n        const startTime = moment(`${obj.start} am`, 'HH:mm a')\n        const endTime = moment(`${obj.end} pm`, 'HH:mm a')\n\n        const minDiff = endTime.diff(startTime, 'minutes')\n        minutes = minutes + (isNaN(minDiff) ? 0 : minDiff)\n      }\n    })\n    const hours_temp = await Math.floor(minutes / 60)\n    const minutes_temp = minutes % 60\n\n    const hur = parseInt(minutes_temp * 4 / 60)\n    const bal_minutes = (minutes_temp % 60)\n    setMonthlylyHours(parseFloat(`${(4 * hours_temp) + hur} . ${bal_minutes}`))\n  }\n\n  const getEmployeeDet = () => {\n    axios.post('/organizationusers/getjobinfo', { id })\n      .then(async (res) => {\n        reset({\n          createdBy: userId,\n          updatedBy: userId,\n          id,\n          organizationId: activeOrgId,\n          dateofhire: res.data.organizationusers.dateofhire ? (moment(res.data.organizationusers.dateofhire, 'x').format(\"MMM DD, YYYY\")) : '',\n          dateofbirth: res.data.organizationusers.dateofbirth ? (moment(res.data.organizationusers.dateofbirth, 'x').format(\"MMM DD, YYYY\")) : '',\n          hourlyrate: res.data.organizationusers.hourlyrate || '',\n          salary: res.data.organizationusers.salary || ''\n        })\n\n\n        await monthlyHoursfn(res.data.organizationusers.officetime)\n      }).catch((err) => {\n        console.log(err)\n      })\n  }\n\n  useEffect(() => {\n    if (tabId === 'teamjobinfo') {\n      getEmployeeDet()\n    }\n  }, [tabId])\n\n  return (\n    <Card>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)} >\n          <dl>\n            <Row>\n              <Col sm='3'>\n                <dt>Job Title</dt>\n              </Col>\n              <Col sm='9'>\n                <dd> {selectedUser.rolename || ''}</dd>\n              </Col>\n            </Row>\n          </dl>\n          <dl>\n            <Row>\n              <Col sm='3'>\n                <dt>Date of Birth</dt>\n              </Col>\n              <Col sm='9'>\n                <Controller\n                  control={control}\n                  name={`dateofbirth`}\n                  id='dateofbirth'\n                  render={({ field }) => (\n                    <Flatpickr\n                      value={field.value}\n                      onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                      options={{ altInput: true, altFormat: \"M j, Y\", dateFormat: \"M j, Y\" }}\n                      className='form-control invoice-edit-input date-picker'\n                    />\n                  )}\n                />\n              </Col>\n            </Row>\n          </dl>\n          <dl>\n            <Row>\n              <Col sm='3'>\n                <dt>Date of Hire</dt>\n              </Col>\n              <Col sm='9'>\n                <Controller\n                  control={control}\n                  name={`dateofhire`}\n                  id='dateofhire'\n                  render={({ field }) => (\n                    <Flatpickr\n                      value={field.value}\n                      onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                      options={{ altInput: true, altFormat: \"M j, Y\", dateFormat: \"M j, Y\" }}\n                      className='form-control invoice-edit-input date-picker'\n                    />\n                  )}\n                />\n              </Col>\n            </Row>\n          </dl>\n          <dl>\n            <Row>\n              <Col sm='3'>\n                <dt>Salary</dt>\n              </Col>\n              <Col sm='9'>\n                <Controller\n                  control={control}\n                  name={`salary`}\n                  id='salary'\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className='form-control invoice-edit-input date-picker'\n                      onChange={(e) => {\n                        setValue('salary', e.target.value)\n                        setValue('hourlyrate', isNaN(parseFloat(e.target.value) / parseFloat(monthlyHours || 1)) ? 0 : (parseFloat(e.target.value) / parseFloat(monthlyHours || 1)).toFixed(2))\n                      }}\n                    />\n                  )}\n                />\n              </Col>\n            </Row>\n          </dl>\n          <dl>\n            <Row>\n              <Col sm='3'>\n                <dt>Hourly Rate</dt>\n              </Col>\n              <Col sm='9'>\n                <Controller\n                  control={control}\n                  name={`hourlyrate`}\n                  id='hourlyrate'\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className='form-control invoice-edit-input date-picker'\n                    />\n                  )}\n                />\n              </Col>\n            </Row>\n          </dl>\n          <dl>\n            <Col className='justify-content-end'>\n              <Button type='submit' color='primary'>Save</Button>\n            </Col>\n          </dl>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\nexport default JobInfo\n","// ** React Imports\nimport moment from 'moment'\nimport { Fragment } from 'react'\nimport { Badge } from 'reactstrap'\n\n// ** Table columns\nconst statusObj = [\n  '',\n  'light-primary',\n  'light-warning',\n  'light-success',\n  'light-secondary',\n  'light-secondary',\n  'light-ocean',\n  'light-info',\n  'light-danger'\n]\n\nconst statusOptions = ['', 'Pending', 'In progress', 'Completed', 'On Hold', 'Cancelled', 'Sent to Review', 'Request Changes']\n\nexport const columns = [\n  {\n    name: 'Task Id',\n    sortable: true,\n    sortField: 'id',\n    minWidth: '107px',\n    cell: row => <span>{row.uniqueidentity}</span>\n  },\n  {\n    name: 'Client',\n    sortable: true,\n    sortField: 'id',\n    minWidth: '107px',\n    cell: row => <span>{row.clientname}</span>\n  },\n  {\n    name: 'Service',\n    sortable: true,\n    sortField: 'id',\n    minWidth: '107px',\n    cell: row => <span>{row.servicename}</span>\n  },\n  {\n    name: 'End Date',\n    sortable: true,\n    sortField: 'id',\n    minWidth: '107px',\n    cell: row => <span>{moment(row.enddate, 'x').format('MMM DD, Y')}</span>\n  },\n  {\n    name: 'Assignee',\n    minWidth: '138px',\n    sortable: false,\n    cell: row => (\n      <Fragment>\n        {\n          row.assignee && (\n            row.assignee.map((obj, key) => { return (<Badge color='light-primary' key={key}>{obj?.name?.split(' ')[0]}</Badge>) })\n          )\n        }\n      </Fragment>\n    )\n\n  },\n  {\n    name: 'Reviewer',\n    minWidth: '138px',\n    sortable: false,\n    cell: row => (\n      <Fragment>\n        {row.reviewer && (\n          row.reviewer.map((obj, key) => { return (<Badge color='light-primary' key={key}>{obj?.name?.split(' ')[0]}</Badge>) })\n        )\n        }\n      </Fragment>\n    )\n  },\n  {\n    name: 'Status',\n    sortable: true,\n    sortField: 'id',\n    minWidth: '107px',\n    cell: row => <Badge color={statusObj[row.taskstatus]}>{statusOptions[row.taskstatus]}</Badge>\n  }\n]\n","// ** React Imports\nimport { useState, useEffect, forwardRef, Fragment } from 'react'\n// ** Table Columns\nimport { columns } from './task_columns'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, RefreshCw } from 'react-feather'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport Select from 'react-select'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport {\n  Button,\n  Card, CardBody, Col, Input, PopoverBody, PopoverHeader, Row, Popover, Label\n} from 'reactstrap'\nimport ReactPaginate from 'react-paginate'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Store & Actions\nimport { getData } from '@src/views/apps/task/store/index.js'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useParams } from 'react-router-dom'\nimport toast from 'react-hot-toast'\n\n\nconst TaskList = (props) => {\n  // ** Store Vars\n  const { tabId } = props\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.task)\n  const { id } = useParams()\n  // ** States\n  const [value] = useState('')\n  const [rowsPerPage] = useState(50)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [searchTerm, setSearchTerm] = useState('')\n  const sort = 'desc'\n  const sortColumn = 'createdon'\n  const [selectedIds, setSelectedIds] = useState([])\n  const [userOptions, setuserOptions] = useState([])\n  const handleChange = (state) => {\n    const temp = []\n    state.selectedRows.forEach((obj) => {\n      temp.push(obj.id)\n    })\n    setSelectedIds(temp)\n  }\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data.organizationusers\n      setuserOptions(arr)\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  useEffect(() => {\n    if (tabId === 'teamtasks') {\n      getOrganizationUsers()\n      dispatch(\n        getData({\n          sort,\n          q: value,\n          sortColumn,\n          page: currentPage,\n          perPage: rowsPerPage,\n          recurringFlag: false,\n          orguserid: id\n        })\n      )\n    }\n  }, [tabId])\n\n  const dataToRender = () => {\n    const filters = {\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data.slice(0, rowsPerPage)\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    }\n  }\n\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        q: value,\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        sortColumn,\n        recurringFlag: false,\n        orguserid: id\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const BootstrapCheckbox = forwardRef((props, ref) => (\n    <div className='form-check'>\n      <Input type='checkbox' ref={ref} {...props} />\n    </div>\n  ))\n\n  const handleFilter = async val => {\n    setSearchTerm(val)\n\n    await dispatch(\n      getData({\n        q: val,\n        page: currentPage,\n        perPage: rowsPerPage,\n        sortColumn,\n        recurringFlag: false,\n        orguserid: id\n      })\n    )\n\n  }\n  const [popoverOpen, setPopoverOpen] = useState(false)\n  const [selUserId, setSelUserId] = useState(null)\n\n  const reassignTask = () => {\n    setBlock(true)\n    axios.post('/tasks/reassign', { taskIds: selectedIds, existuserId: id, userId: selUserId })\n      .then(async () => {\n        toast.success('Tasks Reassigned successfully', { position: 'bottom-right' })\n        setPopoverOpen(false)\n        setSelUserId(null)\n        setSelectedIds([])\n        await dispatch(\n          getData({\n            q: value,\n            page: currentPage,\n            perPage: rowsPerPage,\n            sortColumn,\n            recurringFlag: false,\n            orguserid: id\n          })\n        )\n        setBlock(false)\n      })\n      .catch(() => { })\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody className='d-flex'>\n            <Col className='d-flex'>\n\n              <Button color='primary' disabled={selectedIds.length === 0} outline id='uncontrolledPopover' onClick={() => setPopoverOpen(true)}>Reassign</Button>\n              <Input\n                id='search-invoice'\n                className='ms-50 w-50'\n                placeholder='Search'\n                type='text'\n                value={searchTerm}\n                onChange={e => handleFilter(e.target.value)}\n              />\n              {popoverOpen &&\n                <Popover placement='right' target='uncontrolledPopover'\n                  isOpen={popoverOpen}\n                  toggle={() => setPopoverOpen(!popoverOpen)}\n                >\n                  <PopoverHeader>Task Reassign</PopoverHeader>\n                  <PopoverBody className='p-2'>\n\n                    <Row className='mb-2'>\n                      <Label className='form-label required'>User</Label>\n                      <Select\n                        className={classnames('react-select w-100')}\n                        classNamePrefix='select'\n                        options={userOptions}\n                        value={userOptions.find(c => c.id === selUserId)}\n                        onChange={val => { setSelUserId(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    </Row>\n                    <Col className='d-flex'>\n                      <Button color='warning' onClick={() => setPopoverOpen(false)}>Cancel</Button>\n                      <Button color='primary' className='ms-1' onClick={() => { reassignTask() }}>Submit</Button>\n                    </Col>\n                  </PopoverBody>\n                </Popover>\n              }\n            </Col>\n            <Col className='ms-50'>\n            </Col>\n          </CardBody>\n        </Card>\n\n        <Card>\n          <div className='height-400 invoice-list-dataTable overflow-y-scroll react-dataTable'>\n\n            <DataTable\n              noHeader\n              sortServer\n              columns={columns}\n              responsive={true}\n              data={dataToRender()}\n              sortIcon={<ChevronDown />}\n              pagination\n              selectableRows\n              className='react-dataTable'\n              defaultSortField='invoiceId'\n              paginationServer\n              paginationComponent={CustomPagination}\n              selectableRowsComponent={BootstrapCheckbox}\n              onSelectedRowsChange={handleChange}\n            />\n          </div>\n        </Card>\n      </UILoader>\n    </div>\n  )\n}\n\nexport default TaskList\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n// ** Custom Components\nimport Avatar from '@components/avatar'\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = name => {\n  return (\n    <Avatar\n      initials\n      className='me-1'\n      color={'light-primary'}\n      content={name ? name?.charAt(0).toUpperCase() : ''}\n    />\n  )\n}\n\nconst statusObj = [\n  '',\n  'light-primary',\n  'light-warning'\n]\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"Inactive\"\n\n]\n\nconst stringTrimfn = (text) => {\n  return text.length >= 20 ? `${text.substr(0, 20)}...` : text\n}\n\nexport const columns = [\n  {\n    name: 'Business Name',\n    minWidth: '240px',\n    sortable: true,\n    sortField: 'name',\n    selector: row => row.name,\n    cell: row => (row.name !== '' ? <div className='d-flex justify-content-left align-items-center'>\n      {renderClient(row.name)}\n      <div className='d-flex flex-column'>\n        <Link\n          to={`/clients/view/${row.id}`}\n          className='user_name text-truncate text-body'          \n        >\n          <span className='fw-bolder'>{row.name === '' ? stringTrimfn(row.contactpersonname || '') : stringTrimfn(row.name || '')}</span>\n        </Link>\n      </div>\n    </div> : <span>-</span>\n    )\n  },\n  {\n    name: 'Contact Person',\n    sortable: true,\n    minWidth: '240px',\n    sortField: 'email',\n    selector: row => row.contactpersonname,\n    cell: row => (<Link to={`/clients/view/${row.id}`}>\n      <div className='d-flex justify-content-left align-items-center text-body'>\n        {renderClient(row.contactpersonname)}\n        <div className='d-flex flex-column'>\n          <span className='fw-bolder'>{stringTrimfn(row.contactpersonname || '')}</span>\n          <small className='text-truncate text-muted mb-0'>{stringTrimfn(row.email || '')}</small>\n        </div>\n      </div>\n    </Link>\n    )\n  },\n  {\n    name: 'Business Entity',\n    minWidth: '158px',\n    maxWidth: '248px',\n    sortable: true,\n    sortField: 'entityname',\n    selector: row => row.entityname,\n    cell: row => <Link to={`/clients/view/${row.id}`}> <span className='text-capitalize text-body'>{stringTrimfn(row.entityname || '')}</span></Link>\n  },\n  {\n    name: 'Contact',\n    minWidth: '138px',\n    maxWidth: '150px',\n    sortable: true,\n    sortField: 'contactnumber',\n    selector: row => row.contactnumber,\n    cell: row => <Link to={`/clients/view/${row.id}`}> <span className='text-capitalize text-body'>{row.contactnumber}</span></Link>\n  },\n  {\n    name: 'Status',\n    minWidth: '138px',\n    maxWidth: '150px',\n    sortable: true,\n    sortField: 'status',\n    selector: row => statusArr[row.status],\n    cell: row => (\n      <Link to={`/clients/view/${row.id}`}>\n        <Badge className='text-capitalize' color={statusObj[row.status]} pill>\n          {statusArr[row.status]}\n        </Badge>\n      </Link>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect, forwardRef, Fragment } from 'react'\n\n// ** Table Columns\nimport { columns } from './clients_columns'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport axios from '@src/configs/axios/axiosConfig'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Reactstrap Imports\nimport {\n  Button,\n  Card, CardBody, Col, Input, Label, Popover, PopoverBody, PopoverHeader, Row\n} from 'reactstrap'\nimport ReactPaginate from 'react-paginate'\n\n// ** Store & Actions\nimport { getData } from '@src/views/apps/client/store/index.js'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport Select from 'react-select'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useParams } from 'react-router-dom'\nimport toast from 'react-hot-toast'\n\nconst ClientsList = (props) => {\n  // ** Store Vars\n  const { tabId } = props\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.client)\n  const { id } = useParams()\n  // ** States\n  const [value] = useState('')\n  const [rowsPerPage] = useState(50)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [searchTerm, setSearchTerm] = useState('')\n  const sort = 'desc'\n  const sortColumn = 'createdon'\n  const [selectedIds, setSelectedIds] = useState([])\n  const [userOptions, setuserOptions] = useState([])\n\n  const BootstrapCheckbox = forwardRef((props, ref) => (\n    <div className='form-check'>\n      <Input type='checkbox' ref={ref} {...props} />\n    </div>\n  ))\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data.organizationusers\n      setuserOptions(arr)\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data.slice(0, rowsPerPage)\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleFilter = async val => {\n    setSearchTerm(val)\n\n    await dispatch(\n      getData({\n        q: val,\n        page: currentPage,\n        perPage: rowsPerPage,\n        sortColumn,\n        userId: id,\n        assignflag: true\n      })\n    )\n\n  }\n  const [popoverOpen, setPopoverOpen] = useState(false)\n  const [selUserId, setSelUserId] = useState(null)\n\n  const reassignTask = () => {\n    setBlock(true)\n    axios.post('/clients/reassign', { clientIds: selectedIds, existuserId: id, userId: selUserId })\n      .then(async () => {\n        toast.success('Clients Reassigned successfully', { position: 'bottom-right' })\n        setPopoverOpen(false)\n        setSelUserId(null)\n        setSelectedIds([])\n        await dispatch(\n          getData({\n            q: value,\n            page: currentPage,\n            perPage: rowsPerPage,\n            sortColumn,\n            userId: id,\n            assignflag: true\n          })\n        )\n        setBlock(false)\n      })\n      .catch(() => { })\n  }\n\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        q: value,\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        sortColumn,\n        userId: id,\n        assignflag: true\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handleChange = (state) => {\n    const temp = []\n    state.selectedRows.forEach((obj) => {\n      temp.push(obj.id)\n    })\n    setSelectedIds(temp)\n  }\n  useEffect(() => {\n    if (tabId === 'teamclients') {\n      getOrganizationUsers()\n      dispatch(\n        getData({\n          sort,\n          q: value,\n          sortColumn,\n          page: currentPage,\n          perPage: rowsPerPage,\n          userId: id,\n          assignflag: true\n        })\n      )\n    }\n  }, [tabId])\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody className='d-flex'>\n            <Col className='d-flex'>\n              <Button color='primary' disabled={selectedIds.length === 0} outline id='uncontrolledPopover' onClick={() => setPopoverOpen(true)}>Reassign</Button>\n              <Input\n                id='search-invoice'\n                className='ms-50 w-50'\n                placeholder='Search'\n                type='text'\n                value={searchTerm}\n                onChange={e => handleFilter(e.target.value)}\n              />\n              {popoverOpen &&\n                <Popover placement='right' target='uncontrolledPopover'\n                  isOpen={popoverOpen}\n                  toggle={() => setPopoverOpen(!popoverOpen)}\n                >\n                  <PopoverHeader>Task Reassign</PopoverHeader>\n                  <PopoverBody className='p-2'>\n\n                    <Row className='mb-2'>\n                      <Label className='form-label required'>User</Label>\n                      <Select\n                        className={classnames('react-select w-100')}\n                        classNamePrefix='select'\n                        options={userOptions}\n                        value={userOptions.find(c => c.id === selUserId)}\n                        onChange={val => { setSelUserId(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    </Row>\n                    <Col className='d-flex'>\n                      <Button color='warning' onClick={() => setPopoverOpen(false)}>Cancel</Button>\n                      <Button color='primary' className='ms-1' onClick={() => { reassignTask() }}>Submit</Button>\n                    </Col>\n                  </PopoverBody>\n                </Popover>\n              }\n            </Col>\n            <Col className='ms-50'>\n            </Col>\n          </CardBody>\n        </Card>\n\n        <Card>\n          <div className='invoice-list-dataTable react-dataTable'>\n            <DataTable\n              noHeader\n              sortServer\n              columns={columns}\n              responsive={true}\n              data={dataToRender()}\n              selectableRows\n              sortIcon={<ChevronDown />}\n              pagination\n              className='react-dataTable'\n              defaultSortField='invoiceId'\n              paginationServer\n              paginationComponent={CustomPagination}\n              selectableRowsComponent={BootstrapCheckbox}\n              onSelectedRowsChange={handleChange}\n            />\n          </div>\n        </Card>\n      </UILoader>\n    </div>\n  )\n}\n\nexport default ClientsList\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Controller, useForm } from \"react-hook-form\"\n// ** Table Columns\nimport ReactPaginate from 'react-paginate'\nimport classnames from 'classnames'\nimport Select from 'react-select'\nimport Flatpickr from 'react-flatpickr'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Third Party Componentss\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\n\nimport { Card, Label, Button, Input, FormFeedback, Modal, ModalHeader, ModalBody, ModalFooter, Form, Row, Col, Table } from 'reactstrap'\n\n// ** Store & Actions\nimport { leaveList, applyLeave, UpdateLeave, deleteLeave } from './store/index'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\nimport { Edit, Trash2 } from 'react-feather'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\n\nconst Leave = (props) => {\n  // ** Store Vars\n  const [leaveTypeOptions, setLeaveTypeOptions] = useState([])\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.teamview)\n  // ** States\n  const [leaveDuration, setLeaveDuration] = useState(1)\n  const [value] = useState('')\n  const { id } = useParams()\n  const { tabId, selectedUser } = props\n  const [rowsPerPage] = useState(6)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const schema = yup.object().shape({\n    organizationId: yup.string().default(activeOrgId),\n    createdBy: yup.string().default(userId),\n    updatedBy: yup.string().default(userId),\n    leaveTypeId: yup.string().required(\"Please Select LeaveType\"),\n    fromDate: yup.string().required('Please Enter From Date'),\n    duration: yup.string().default(1),\n    toDate: yup.string().when(\"duration\", { is: (duration) => duration === '2', then: yup.string().required(\"Please Enter To Date.\") }),\n    userId: yup.string().default(userId),\n    reason: yup.string().default(''),\n    daysCount: yup.string().default(1),\n    status: yup.string().default(2)\n  })\n\n\n  const deletefn = (lid) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteLeave({ id:lid, userId: id ?? userId }))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Leave Application has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const getLeaveType = () => {\n\n    axios.post('/leavetypes/list', { designationId: selectedUser.designationid }).then(response => {\n      const arr = response.data\n      setLeaveTypeOptions(arr.leavetypes)\n    })\n  }\n\n  const { handleSubmit, control, reset, setValue, formState: { errors } } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n  const [formModal, setFormModal] = useState(false)\n  const closeModal = () => {\n    setFormModal(false)\n  }\n\n  const statuArr = [\"\", \"Applied\", \"Pending\", \"Approved\"]\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n  }\n\n  const onSubmit = async (leave) => {\n\n    if (parseInt(leave.duration) === 2) {\n      const start = moment.unix(leave.fromDate).valueOf()\n      const end = moment.unix(leave.toDate).valueOf()\n      const duration = moment(end, 'x').diff(moment(start, 'x'), 'days')\n      leave.daysCount = String(duration)\n    }\n\n    if (leave.id !== undefined && leave.id !== '') {\n      await dispatch(UpdateLeave(leave))\n    } else {\n      await dispatch(applyLeave(leave))\n    }\n    setFormModal(false)\n    reset({ name: '', id: '', organizationId: activeOrgId, fromDate: '', toDate: \"\", userId, reason: '', status: 1, leaveTypeId: '', daysCount: '1' })\n  }\n\n  const editLeave = (val) => {\n    reset({ name: val.name, id: val.id, updatedBy: userId, organizationId: activeOrgId, fromDate: String(val.fromdate / 1000), toDate: String(val.todate / 1000), userId: val.userid, reason: val.reason, status: 1, leaveTypeId: (val.leavetypeid), duration: val.duration, daysCount: val.dayscount })\n    setFormModal(true)\n    setLeaveDuration(parseInt(val.duration))\n  }\n\n  const handlePagination = async (page) => {\n\n    setCurrentPage(page.selected + 1)\n\n    await dispatch(\n      leaveList({\n        q: value,\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        userId: id,\n        status: 'All'\n      })\n    )\n  }\n\n  useEffect(async () => {\n\n    if (tabId === 'teamleave') {\n      await dispatch(\n        leaveList({\n          q: value,\n          page: currentPage,\n          perPage: rowsPerPage,\n          userId: id,\n          status: 'All'\n        })\n      )\n      getLeaveType()\n    }\n  }, [dispatch, tabId])\n\n  const dataToRender = () => {\n    const filters = {\n      userId: id,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.employeeLeaves.length > 0) {\n      return store.employeeLeaves\n    } else if (store.employeeLeaves.length === 0 && isFiltered) {\n      return []\n    }\n  }\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <Button color='primary' size='sm' className='m-1' outline onClick={() => setFormModal(true)}>Assign Leave</Button>\n          <Table>\n            <thead>\n              <tr>\n                <th>Applicant</th>\n                <th>Leave Type</th>\n                <th>Date</th>\n                <th>No of Days</th>\n                <th>Status</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataToRender().map((leave, k) => {\n                return (<tr key={k}>\n                  <td>{leave.name}</td>\n                  <td>{leave.leavetypename}</td>\n                  <td>{dateFormat(leave.fromdate)} {leave.duration === '2' ? ` - ${dateFormat(leave.todate)}` : ''} </td>\n                  <td>{leave.dayscount}</td>\n                  <td>{statuArr[leave.status]}</td>\n                  <td>\n                    <div className='column-action d-flex align-items-center'>\n                      <Edit className='text-body cursor-pointer' size={17} id={`send-tooltip-${leave.id}`} onClick={() => { editLeave(leave) }} />\n                      <Trash2 className='text-body cursor-pointer ms-1' size={17} id={`send-tooltip-${leave.id}`} onClick={() => { deletefn(leave.id) }} />\n                    </div>\n                  </td>\n                </tr>)\n              })\n              }\n            </tbody>\n          </Table>\n          <CustomPagination />\n        </div>\n\n        <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n          <ModalHeader toggle={() => closeModal()}>Assign Leave</ModalHeader>\n          {\n\n            Object.keys(errors).map((key) => {\n\n              return (<FormFeedback key={key}>${errors[key]?.message}</FormFeedback>)\n\n            })\n\n          }\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <ModalBody>\n              <div className='mb-0'>\n                <Label sm='3' size='lg' className='form-label required' for='leaveTypeId'>\n                  Leave Type\n                </Label>\n                <Controller\n                  control={control}\n                  name=\"leaveTypeId\"\n                  id=\"leaveTypeId\"\n                  render={({ field, ref }) => (\n                    <Select\n                      {...field}\n                      inputRef={ref}\n                      className={classnames('react-select', { 'is-invalid': errors.leaveTypeId })}\n                      {...field}\n                      classNamePrefix='select'\n                      options={leaveTypeOptions}\n                      value={leaveTypeOptions.find(c => { return c.id === field.value })}\n                      onChange={val => { field.onChange(val.id) }}\n                      getOptionLabel={(option) => option.name}\n                      getOptionValue={(option) => option.id}\n                    />\n                  )}\n\n                />\n                {errors.leaveTypeId && <FormFeedback className='text-danger'>{errors.leaveTypeId?.message}</FormFeedback>}\n              </div>\n              <div className='mb-0'>\n                <Label sm='3' size='lg' className='form-label required' for='name'>\n                  Duration\n                </Label>\n                <Row>\n                  <Controller\n                    name='duration'\n                    id='duration_1'\n                    control={control}\n                    render={({ field }) => (<Col><Input name='duration' id='duration_1' type='radio' defaultChecked={leaveDuration === 1}\n                      {...field} onInput={val => { setLeaveDuration(val.target.value); setValue('duration', val.target.value); return val.target.value }} onChange={val => { field.onChange(val) }} value={1} />\n                      <Label for=\"duration_1\" className='ms-1'>Single</Label></Col>)}\n                  />\n\n                  <Controller\n                    name='duration'\n                    id='duration_2'\n                    control={control}\n                    render={({ field }) => (<Col><Input name='duration' id='duration_2' type='radio' defaultChecked={leaveDuration === 2}\n                      {...field} onInput={val => { setLeaveDuration(val.target.value); setValue('duration', val.target.value); return val.target.value }} onChange={val => { field.onChange(val) }} value={2} />\n                      <Label for=\"duration_2\" className='ms-1'>Multiple</Label></Col>)}\n                  />\n\n                  <Controller\n                    name='duration'\n                    id='duration_3'\n                    control={control}\n                    render={({ field }) => (<Col><Input name='duration' id='duration_3' type='radio' defaultChecked={leaveDuration === 3}\n                      {...field} onInput={val => { setLeaveDuration(val.target.value); setValue('duration', val.target.value); return val.target.value }} value={3} />\n                      <Label for=\"duration_3\" className='ms-1'>Half Day</Label></Col>)}\n                  />\n                </Row>\n              </div>\n              <div className='mb-0'>\n                <Label sm='3' size='lg' className='form-label required' for='fromDate'>\n                  From\n                </Label>\n\n                <Controller\n                  control={control}\n                  id='fromDate'\n                  name={`fromDate`}\n                  render={({ field }) => (\n                    <Flatpickr\n                      value={field.value}\n                      onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                      options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                      className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.fromDate })}\n                    />\n                  )}\n                />\n                {errors.fromDate && <FormFeedback>{errors.fromDate.message}</FormFeedback>}\n              </div>\n\n              {parseInt(leaveDuration) === 2 &&\n                <div className='mb-0'>\n                  <Label sm='3' size='lg' className='form-label required' for='toDate'>\n                    To\n                  </Label>\n                  <Controller\n                    control={control}\n                    id='toDate'\n                    name={`toDate`}\n                    render={({ field }) => (\n                      <Flatpickr\n                        value={field.value}\n                        onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                        options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                        className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.toDate })}\n                      />\n                    )}\n                  />\n                  {errors.toDate && <FormFeedback>{errors.toDate.message}</FormFeedback>}\n                </div>\n              }\n              <div className='mb-0'>\n                <Label sm='3' size='lg' className='form-label' for='reason'>\n                  Reason\n                </Label>\n\n                <Controller\n                  id='reason'\n                  name='reason'\n                  control={control}\n                  render={({ field }) => <Input type=\"textarea\" invalid={errors.reason && true} {...field} />}\n                />\n                {errors.reason && <FormFeedback>{errors.reason.message}</FormFeedback>}\n              </div>\n\n\n            </ModalBody>\n            <ModalFooter>\n              <Button type=\"submit\" color='warning' onClick={() => closeModal()}>\n                Cancel\n              </Button>\n              <Button color='primary' type='submit' >\n                Save\n              </Button>\n            </ModalFooter>\n          </Form>\n        </Modal >\n\n      </Card>\n    </div>\n  )\n}\n\nexport default Leave\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { User, Lock, Bookmark, Bell, Link, CheckSquare, Edit2, CheckCircle, UserCheck } from 'react-feather'\n\n// ** User Components\nimport Attendance from './Attendance'\nimport JobInfo from './JobInfo'\nimport Tasks from './Tasks'\nimport Clients from './Clients'\nimport Leave from './Leave'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nconst UserTabs = ({ active, selectedUser }) => {\n\n  const { id } = useParams()\n  const navigate = useNavigate()\n\n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n\n        <NavItem>\n          <NavLink active={active === 'teamjobinfo'} onClick={() => navigate(`/team/view/${id}?tab=teamjobinfo`)}>\n            <CheckSquare className='font-medium-3 me-50' />\n            <span className='fw-bold'>Job Info</span>\n          </NavLink>\n        </NavItem>\n\n        <NavItem>\n          <NavLink active={active === 'teamattendance'} onClick={() => navigate(`/team/view/${id}?tab=teamattendance`)}>\n            <Bookmark className='font-medium-3 me-50' />\n            <span className='fw-bold'>Attendance</span>\n          </NavLink>\n        </NavItem>\n\n        <NavItem>\n          <NavLink active={active === 'teamleave'} onClick={() => navigate(`/team/view/${id}?tab=teamleave`)}>\n            <Bell className='font-medium-3 me-50' />\n            <span className='fw-bold'>Leave</span>\n          </NavLink>\n        </NavItem>\n\n        <NavItem>\n          <NavLink active={active === 'teamtasks'} onClick={() => navigate(`/team/view/${id}?tab=teamtasks`)}>\n            <CheckCircle className='font-medium-3 me-50' />\n            <span className='fw-bold'>Tasks</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === 'teamclients'} onClick={() => navigate(`/team/view/${id}?tab=teamclients`)}>\n            <UserCheck className='font-medium-3 me-50' />\n            <span className='fw-bold'>Clients</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='teamjobinfo'>\n          <JobInfo selectedUser={selectedUser} tabId={active} />\n        </TabPane>       \n        <TabPane tabId='teamattendance'>\n          <Attendance tabId={active} selectedUser={selectedUser} />\n        </TabPane>\n        <TabPane tabId='teamleave'>\n          <Leave tabId={active} selectedUser={selectedUser} />\n        </TabPane>\n        <TabPane tabId='teamtasks'>\n          <Tasks tabId={active} selectedUser={selectedUser} />\n        </TabPane>\n        <TabPane tabId='teamclients'>\n          <Clients tabId={active} selectedUser={selectedUser} />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Badge } from 'reactstrap'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst statusArr = [\n  '',\n  'Active',\n  'InActive'\n]\n\nconst statusColors = [\n  '',\n  'light-success',\n  'light-warning'\n]\n\nconst MySwal = withReactContent(Swal)\n\nconst UserInfoCard = ({ selectedUser }) => {\n\n  const { id } = useParams()\n  // ** render user img\n  const renderUserImg = () => {\n\n    return (\n      <Avatar\n        initials\n        color={'light-primary'}\n        className='rounded mt-3 mb-2'\n        content={selectedUser.name}\n        contentStyles={{\n          borderRadius: 0,\n          fontSize: 'calc(48px)',\n          width: '100%',\n          height: '100%'\n        }}\n        style={{\n          height: '110px',\n          width: '110px'\n        }}\n      />\n    )\n\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <div className='user-avatar-section'>\n            <div className='d-flex align-items-center flex-column'>\n              {renderUserImg()}\n              <div className='d-flex flex-column align-items-center text-center'>\n                <div className='user-info'>\n                  <h4>{selectedUser !== null ? selectedUser.name : 'Eleanor Aguilar'}</h4>\n                  {selectedUser !== null ? (\n                    <Badge color={statusColors[selectedUser.role]} className='text-capitalize'>\n                      {selectedUser.role}\n                    </Badge>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </div>\n          <h4 className='fw-bolder border-bottom pb-50 mb-1'>Details</h4>\n          <div className='info-container'>\n            {selectedUser !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Email:</span>\n                  <span>{selectedUser.email}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Contact:</span>\n                  <span>{selectedUser.contactno || ''}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Status:</span>\n                  <Badge className='text-capitalize' color={statusColors[selectedUser.status]}>\n                    {statusArr[selectedUser.status]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Role:</span>\n                  <span className='text-capitalize'>{selectedUser.rolename}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Department:</span>\n                  <span>{selectedUser.departmentname}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Designation:</span>\n                  <span>{selectedUser.designationname}</span>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n          <div className='d-flex justify-content-center pt-2'>\n            <Can I={'write'} a={'team'}>\n              <Button color='primary' tag={Link} to={selectedUser.usertype === '1' ? `/team/edit/${id}` : `/team/edit-invitation/${id}`} >\n                Edit\n              </Button>\n            </Can>\n            <Button className='ms-1' color='danger' outline tag={Link} to={`/team/list`}>\n              Cancel\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useParams, Link, useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getUser } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst TeamView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.users)\n  const dispatch = useDispatch()\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  // ** Hooks\n  const { id } = useParams()\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n\n\n  // ** Get suer on mount\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(getUser(id))\n    setBlock(false)\n  }, [dispatch])\n\n  const [active, setActive] = useState('teamjobinfo')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  useEffect(() => {\n    if (searchParams.get('tab')) {\n      setActive(searchParams.get('tab'))\n    }\n  }, [searchParams])\n\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\n    <UILoader blocking={block} loader={<Loader />}>\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='3' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n            <UserInfoCard selectedUser={store.selectedUser} />\n          </Col>\n          <Col xl='9' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n            <UserTabs active={active} toggleTab={toggleTab} selectedUser={store.selectedUser} />\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <UILoader blocking={block} loader={<Loader />}>\n      <Alert color='danger'>\n        <h4 className='alert-heading'>User not found</h4>\n        <div className='alert-body'>\n          User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\n        </div>\n      </Alert>\n    </UILoader>\n  )\n}\nexport default TeamView\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      page +\n      (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const { breakLabel, breakClassName, breakLinkClassName, breakHandler, getEventListener } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextRel: 'next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    eventListener: 'onClick',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = (evt) => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = (evt) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  }\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      pageCount,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n"],"sourceRoot":""}