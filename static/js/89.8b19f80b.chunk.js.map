{"version":3,"sources":["views/ui-elements/cards/analytics/Sales.js","views/ui-elements/cards/analytics/AvgSessions.js","views/ui-elements/cards/analytics/SupportTracker.js","views/ui-elements/cards/analytics/Sales2.js","views/ui-elements/cards/analytics/Revenue.js","views/ui-elements/cards/analytics/Earnings.js","views/ui-elements/cards/analytics/Customers.js","views/ui-elements/cards/analytics/GoalOverview.js","views/ui-elements/cards/analytics/ProductOrders.js","views/ui-elements/cards/analytics/SessionByDevice.js","views/ui-elements/cards/analytics/index.js","@core/components/breadcrumbs/index.js","views/ui-elements/cards/analytics/RevenueReport.js"],"names":["Sales","props","options","chart","height","type","dropShadow","enabled","blur","left","top","opacity","toolbar","show","offsetY","stroke","width","dataLabels","background","foreColor","legend","colors","primary","info","plotOptions","radar","polygons","strokeColors","connectorColors","fill","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","labels","markers","size","yaxis","grid","padding","bottom","className","tag","color","end","series","name","data","AvgSessions","useState","setData","useEffect","axios","get","then","res","sparkline","right","states","hover","filter","bar","columnWidth","distributed","borderRadius","tooltip","x","xaxis","sm","order","xs","kFormatter","sessions","growth","last_days","map","item","md","goal","value","users","retention","duration","SupportTracker","radialBar","startAngle","endAngle","hollow","track","strokeWidth","fontFamily","fontSize","danger","inverseColors","dashArray","title","totalTicket","id","newTicket","openTicket","responseTime","Sales2","zoom","offsetX","curve","borderColor","style","axisTicks","categories","axisBorder","tickPlacement","tickAmount","formatter","val","toFixed","Revenue","Earnings","comparedResult","success","pie","donut","parseInt","total","label","responsive","breakpoint","Customers","warning","listData","index","IconTag","Icon","icon","classnames","length","iconColor","text","result","GoalOverview","fontWeight","lineCap","completed","inProgress","ProductOrders","margin","chart_info","finished","pending","rejected","SessionByDevice","usage","upDown","AnalyticsCards","context","useContext","ThemeColors","lg","main","RevenueReport","BreadCrumbs","to","Wrapper","link","Link","Fragment","isLastItem","active","currentMonth","moment","format","monthlist","chartData","setChartData","add","currentYear","setCurrentYear","setFilter","indianFormattedPrice","String","removedValue","finalVal","includes","slice","indexOf","replace","toString","lastThree","substring","otherNumbers","getData","params","startdate","set","subtract","startOf","valueOf","enddate","endOf","post","dataSamp","datasets","backgroundColor","forEach","i","total_data","find","obj","date","received_data","received","amount","scales","display","y","ticks","autoSkip","maxTicksLimit","plugins","datalabels","outline","caret","k","onClick","year","applyFilter","total_invoice","total_received"],"mappings":"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","file":"static/js/89.8b19f80b.chunk.js","sourcesContent":["// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport { MoreVertical, Circle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Sales = props => {\n  const options = {\n      chart: {\n        height: 300,\n        type: 'radar',\n        dropShadow: {\n          enabled: true,\n          blur: 8,\n          left: 1,\n          top: 1,\n          opacity: 0.2\n        },\n        toolbar: {\n          show: false\n        },\n        offsetY: 5\n      },\n      stroke: {\n        width: 0\n      },\n      dataLabels: {\n        background: {\n          foreColor: ['#ebe9f1']\n        }\n      },\n      legend: { show: false },\n      colors: [props.primary, props.info],\n      plotOptions: {\n        radar: {\n          polygons: {\n            strokeColors: ['#ebe9f1', 'transparent', 'transparent', 'transparent', 'transparent', 'transparent'],\n            connectorColors: 'transparent'\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          gradientToColors: [props.primary, props.info],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        show: false\n      },\n      grid: {\n        show: false,\n        padding: {\n          bottom: -27\n        }\n      }\n    },\n    series = [\n      {\n        name: 'Sales',\n        data: [90, 50, 86, 40, 100, 20]\n      },\n      {\n        name: 'Visit',\n        data: [70, 75, 70, 76, 20, 85]\n      }\n    ]\n  return (\n    <Card>\n      <CardHeader className='d-flex justify-content-between align-items-start pb-1'>\n        <div>\n          <CardTitle className='mb-25' tag='h4'>\n            Sales\n          </CardTitle>\n          <CardText>Last 6 months</CardText>\n        </div>\n\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            <MoreVertical size={18} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu end>\n            <DropdownItem className='w-100'>Last 28 Days</DropdownItem>\n            <DropdownItem className='w-100'>Last Month</DropdownItem>\n            <DropdownItem className='w-100'>Last Year</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n\n      <CardBody>\n        <div className='d-inline-block me-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={13} className='text-primary me-50' />\n            <h6 className='mb-0'>Sales</h6>\n          </div>\n        </div>\n        <div className='d-inline-block'>\n          <div className='d-flex align-items-center'>\n            <Circle size={13} className='text-info me-50' />\n            <h6 className='mb-0'>Visits</h6>\n          </div>\n        </div>\n        <Chart options={options} series={series} type='radar' height={300} />\n      </CardBody>\n    </Card>\n  )\n}\nexport default Sales\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  CardBody,\n  CardText,\n  Progress,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst AvgSessions = props => {\n  // ** States\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/avg-sessions').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      chart: {\n        sparkline: { enabled: true },\n        toolbar: { show: false }\n      },\n      grid: {\n        show: false,\n        padding: {\n          left: 0,\n          right: 0\n        }\n      },\n      states: {\n        hover: {\n          filter: 'none'\n        }\n      },\n      colors: ['#ebf0f7', '#ebf0f7', props.primary, '#ebf0f7', '#ebf0f7', '#ebf0f7'],\n      plotOptions: {\n        bar: {\n          columnWidth: '45%',\n          distributed: true,\n          borderRadius: [10]\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      },\n      xaxis: {\n        type: 'numeric'\n      }\n    },\n    series = [\n      {\n        name: 'Sessions',\n        data: [75, 125, 225, 175, 125, 75, 25]\n      }\n    ]\n\n  return data !== null ? (\n    <Card>\n      <CardBody>\n        <Row className='pb-50'>\n          <Col\n            sm={{ size: 6, order: 1 }}\n            xs={{ order: 2 }}\n            className='d-flex justify-content-between flex-column mt-lg-0 mt-2'\n          >\n            <div className='session-info mb-1 mb-lg-0'>\n              <h2 className='fw-bold mb-25'>{kFormatter(data.sessions)}</h2>\n              <CardText className='fw-bold mb-2'>Avg Sessions</CardText>\n              <h5 className='font-medium-2'>\n                <span className='text-success me-50'>{data.growth}</span>\n                <span className='fw-normal'>vs last 7 days</span>\n              </h5>\n            </div>\n            <Button color='primary'>View Details</Button>\n          </Col>\n          <Col\n            sm={{ size: 6, order: 2 }}\n            xs={{ order: 1 }}\n            className='d-flex justify-content-between flex-column text-end'\n          >\n            <UncontrolledDropdown className='chart-dropdown'>\n              <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n                Last 7 days\n              </DropdownToggle>\n              <DropdownMenu end>\n                {data.last_days.map(item => (\n                  <DropdownItem className='w-100' key={item}>\n                    {item}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <Chart options={options} series={series} type='bar' height={200} />\n          </Col>\n        </Row>\n        <hr />\n        <Row className='pt-50'>\n          <Col className='mb-2' md='6' sm='12'>\n            <p className='mb-50'>Goal: ${data.goal}</p>\n            <Progress className='avg-session-progress mt-25' value='50' />\n          </Col>\n          <Col className='mb-2' md='6' sm='12'>\n            <p className='mb-50'>Users: {kFormatter(data.users)}</p>\n            <Progress className='avg-session-progress progress-bar-warning mt-25' value='60' />\n          </Col>\n          <Col md='6' sm='12'>\n            <p className='mb-50'>Retention: {data.retention}%</p>\n            <Progress className='avg-session-progress progress-bar-danger mt-25' value='70' />\n          </Col>\n          <Col md='6' sm='12'>\n            <p className='mb-50'>Duration: {data.duration}yr</p>\n            <Progress className='avg-session-progress progress-bar-success mt-25' value='80' />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default AvgSessions\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SupportTracker = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/support-tracker').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 20,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '65%'\n          },\n          track: {\n            background: '#fff',\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: -5,\n              fontFamily: 'Montserrat',\n              fontSize: '1rem'\n            },\n            value: {\n              offsetY: 15,\n              fontFamily: 'Montserrat',\n              fontSize: '1.714rem'\n            }\n          }\n        }\n      },\n      colors: [props.danger],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: [props.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        dashArray: 8\n      },\n      labels: ['Completed Tickets']\n    },\n    series = [83]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='pb-0'>\n        <CardTitle tag='h4'>{data.title}</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col sm='2' className='d-flex flex-column flex-wrap text-center'>\n            <h1 className='font-large-2 fw-bolder mt-2 mb-0'>{data.totalTicket}</h1>\n            <CardText>Tickets</CardText>\n          </Col>\n          <Col sm='10' className='d-flex justify-content-center'>\n            <Chart options={options} series={series} type='radialBar' height={270} id='support-tracker-card' />\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-1'>\n          <div className='text-center'>\n            <CardText className='mb-50'>New Tickets</CardText>\n            <span className='font-large-1 fw-bold'>{data.newTicket}</span>\n          </div>\n          <div className='text-center'>\n            <CardText className='mb-50'>Open Tickets</CardText>\n            <span className='font-large-1 fw-bold'>{data.openTicket}</span>\n          </div>\n          <div className='text-center'>\n            <CardText className='mb-50'>Response Time</CardText>\n            <span className='font-large-1 fw-bold'>{data.responseTime}d</span>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SupportTracker\n","// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport { Settings } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst Sales2 = props => {\n  const options = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          top: 18,\n          left: 2,\n          blur: 5,\n          opacity: 0.2\n        },\n        offsetX: -10\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 4\n      },\n      grid: {\n        borderColor: '#ebe9f1',\n        padding: {\n          top: -20,\n          bottom: 5,\n          left: 20\n        }\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#df87f2'],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          inverseColors: false,\n          gradientToColors: [props.primary],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          offsetY: 5,\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.857rem',\n            fontFamily: 'Montserrat'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: 'on'\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.857rem',\n            fontFamily: 'Montserrat'\n          },\n          formatter(val) {\n            return val > 999 ? `${(val / 1000).toFixed(1)}k` : val\n          }\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series = [\n      {\n        name: 'Sales',\n        data: [140, 180, 150, 205, 160, 295, 125, 255, 205, 305, 240, 295]\n      }\n    ]\n  return (\n    <Card>\n      <CardHeader className='align-items-start'>\n        <div>\n          <CardTitle className='mb-25' tag='h4'>\n            Sales\n          </CardTitle>\n          <CardText className='mb-0'>2020 Total Sales: 12.84k</CardText>\n        </div>\n        <Settings size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody className='pb-0'>\n        <Chart options={options} series={series} type='line' height={240} />\n      </CardBody>\n    </Card>\n  )\n}\nexport default Sales2\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { Settings } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst Revenue = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/revenue').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        offsetX: -10\n      },\n      stroke: {\n        curve: 'smooth',\n        dashArray: [0, 12],\n        width: [4, 3]\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#d0ccff', '#ebe9f1'],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          inverseColors: false,\n          gradientToColors: [props.primary, '#ebe9f1'],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '1rem'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['01', '05', '09', '13', '17', '21', '26', '31'],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: 'on'\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '1rem'\n          },\n          formatter(val) {\n            return val > 999 ? `${(val / 1000).toFixed(0)}k` : val\n          }\n        }\n      },\n      grid: {\n        borderColor: '#e7eef7',\n        padding: {\n          top: -20,\n          bottom: -10,\n          left: 20\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series = [\n      {\n        name: 'This Month',\n        data: [45000, 47000, 44800, 47500, 45500, 48000, 46500, 48600]\n      },\n      {\n        name: 'Last Month',\n        data: [46000, 48000, 45500, 46600, 44500, 46500, 45000, 47000]\n      }\n    ]\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Revenue</CardTitle>\n        <Settings size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody>\n        <div className='d-flex justify-content-start mb-3'>\n          <div className='me-2'>\n            <CardText className='mb-50'>This Month</CardText>\n            <h3 className='fw-bolder'>\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\n              <span className='text-primary'>86,589</span>\n            </h3>\n          </div>\n          <div>\n            <CardText className='mb-50'>Last Month</CardText>\n            <h3 className='fw-bolder'>\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\n              <span>73,683</span>\n            </h3>\n          </div>\n        </div>\n        <Chart options={options} series={series} type='line' height={240} />\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default Revenue\n","// ** Third Party Components\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardText, CardBody, Row, Col } from 'reactstrap'\n\nconst Earnings = ({ success }) => {\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: { show: false },\n    comparedResult: [2, -3, 8],\n    labels: ['App', 'Service', 'Product'],\n    stroke: { width: 0 },\n    colors: ['#28c76f66', '#28c76f33', success],\n    grid: {\n      padding: {\n        right: -20,\n        bottom: -8,\n        left: -20\n      }\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -10,\n        donut: {\n          labels: {\n            show: true,\n            name: {\n              offsetY: 15\n            },\n            value: {\n              offsetY: -15,\n              formatter(val) {\n                return `${parseInt(val)} %`\n              }\n            },\n            total: {\n              show: true,\n              offsetY: 15,\n              label: 'App',\n              formatter() {\n                return '53%'\n              }\n            }\n          }\n        }\n      }\n    },\n    responsive: [\n      {\n        breakpoint: 1325,\n        options: {\n          chart: {\n            height: 100\n          }\n        }\n      },\n      {\n        breakpoint: 1200,\n        options: {\n          chart: {\n            height: 120\n          }\n        }\n      },\n      {\n        breakpoint: 1065,\n        options: {\n          chart: {\n            height: 100\n          }\n        }\n      },\n      {\n        breakpoint: 992,\n        options: {\n          chart: {\n            height: 120\n          }\n        }\n      }\n    ]\n  }\n\n  return (\n    <Card className='earnings-card'>\n      <CardBody>\n        <Row>\n          <Col xs='6'>\n            <CardTitle className='mb-1'>Pending</CardTitle>\n            <div className='font-small-2'>This Month</div>\n            <h5 className='mb-1'>$4055.56</h5>\n            <CardText className='text-muted font-small-2'>\n              <span className='fw-bolder'>68.2%</span>\n              <span> more earnings than last month.</span>\n            </CardText>\n          </Col>\n          <Col xs='6'>\n            <Chart options={options} series={[53, 16, 31]} type='donut' height={120} />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Earnings\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport * as Icon from 'react-feather'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Customers = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/customers').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: ['New', 'Returning', 'Referrals'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: { show: false },\n      stroke: {\n        width: 4\n      },\n      colors: [props.primary, props.warning, props.danger]\n    },\n    series = [690, 258, 149]\n\n  const renderChartInfo = () => {\n    return data.listData.map((item, index) => {\n      const IconTag = Icon[item.icon]\n\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.listData.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={15}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75'>{item.text}</span>\n          </div>\n          <span>{item.result}</span>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Customers</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart options={options} series={series} type='pie' height={325} />\n        <div className='pt-25'>{renderChartInfo()}</div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default Customers\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { HelpCircle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst GoalOverview = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/goal-overview').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: ['#51e5a8'],\n      plotOptions: {\n        radialBar: {\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '77%'\n          },\n          track: {\n            background: '#ebe9f1',\n            strokeWidth: '50%'\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              color: '#5e5873',\n              fontFamily: 'Montserrat',\n              fontSize: '2.86rem',\n              fontWeight: '600'\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: [props.success],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      grid: {\n        padding: {\n          bottom: 30\n        }\n      }\n    },\n    series = [83]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Goal Overview</CardTitle>\n        <HelpCircle size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody className='p-0'>\n        <Chart options={options} series={series} type='radialBar' height={245} />\n      </CardBody>\n      <Row className='border-top text-center mx-0'>\n        <Col xs='6' className='border-end py-1'>\n          <CardText className='text-muted mb-0'>Completed</CardText>\n          <h3 className='fw-bolder mb-0'>{data.completed}</h3>\n        </Col>\n        <Col xs='6' className='py-1'>\n          <CardText className='text-muted mb-0'>In Progress</CardText>\n          <h3 className='fw-bolder mb-0'>{data.inProgress}</h3>\n        </Col>\n      </Row>\n    </Card>\n  ) : null\n}\nexport default GoalOverview\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { Circle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst ProductOrders = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/product-orders').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      labels: ['Finished', 'Pending', 'Rejected'],\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          hollow: {\n            size: '20%'\n          },\n          track: {\n            strokeWidth: '100%',\n            margin: 15\n          },\n          dataLabels: {\n            value: {\n              fontSize: '1rem',\n              colors: '#5e5873',\n              fontWeight: '500',\n              offsetY: 5\n            },\n            total: {\n              show: true,\n              label: 'Total',\n              fontSize: '1.286rem',\n              colors: '#5e5873',\n              fontWeight: '500',\n\n              formatter() {\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                return 42459\n              }\n            }\n          }\n        }\n      },\n      colors: [props.primary, props.warning, props.danger],\n      stroke: {\n        lineCap: 'round'\n      },\n      chart: {\n        height: 355,\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      }\n    },\n    series = [70, 52, 26]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Product Orders</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart options={options} series={series} type='radialBar' height={325} />\n        <div className='d-flex justify-content-between mb-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-primary' />\n            <span className='fw-bold ms-75'>Finished</span>\n          </div>\n          <span>{data.chart_info.finished}</span>\n        </div>\n        <div className='d-flex justify-content-between mb-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-warning' />\n            <span className='fw-bold ms-75'>Pending</span>\n          </div>\n          <span>{data.chart_info.pending}</span>\n        </div>\n        <div className='d-flex justify-content-between'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-danger' />\n            <span className='fw-bold ms-75'>Rejected</span>\n          </div>\n          <span>{data.chart_info.rejected}</span>\n        </div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default ProductOrders\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport * as Icon from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SessionByDevice = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: ['Desktop', 'Mobile', 'Tablet'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: { show: false },\n      comparedResult: [2, -3, 8],\n      stroke: { width: 0 },\n      colors: [props.primary, props.warning, props.danger]\n    },\n    series = [58.6, 34.9, 6.5]\n\n  const renderChartInfo = () => {\n    return data.chart_info.map((item, index) => {\n      const IconTag = Icon[item.icon]\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.chart_info.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={17}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75 me-25'>{item.name}</span>\n            <span>- {item.usage}%</span>\n          </div>\n          <div>\n            <span>{item.upDown}%</span>\n            {item.upDown > 0 ? (\n              <Icon.ArrowUp size={14} className='ms-25 text-success' />\n            ) : (\n              <Icon.ArrowDown size={14} className='ms-25 text-danger' />\n            )}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Session By Device</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart className='my-1' options={options} series={series} type='donut' height={300} />\n        {renderChartInfo()}\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SessionByDevice\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport Sales from './Sales'\nimport Sales2 from './Sales2'\nimport Revenue from './Revenue'\nimport Earnings from './Earnings'\nimport Customers from './Customers'\nimport AvgSession from './AvgSessions'\nimport GoalOverview from './GoalOverview'\nimport ProductOrders from './ProductOrders'\nimport RevenueReport from './RevenueReport'\nimport SupportTracker from './SupportTracker'\nimport SessionByDevice from './SessionByDevice'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Styles\nimport '@styles/react/libs/charts/apex-charts.scss'\n\nconst AnalyticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n  return (\n    <Fragment>\n      <Breadcrumbs title='Analytics Cards' data={[{ title: 'Cards' }, { title: 'Analytics Actions' }]} />\n      <Row className='match-height'>\n        <Col lg='6' sm='12'>\n          <SupportTracker primary={context.colors.primary.main} danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='6' sm='12'>\n          <AvgSession primary={context.colors.primary.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <RevenueReport primary={context.colors.primary.main} warning={context.colors.warning.main} />\n        </Col>\n        <Col lg='4' sm='12'>\n          <GoalOverview success={context.colors.success.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <Revenue primary={context.colors.primary.main} />\n        </Col>\n        <Col lg='4' sm='12'>\n          <Sales primary={context.colors.primary.main} info={context.colors.info.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <Row className='match-height'>\n            <Col sm='12'>\n              <Sales2 primary={context.colors.primary.main} />\n            </Col>\n            <Col md='6' sm='12'>\n              <SessionByDevice\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n            <Col md='6' sm='12'>\n              <Customers\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col lg='4' sm='12'>\n          <Row className='match-height'>\n            <Col sm='12'>\n              <ProductOrders\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n            <Col sm='12'>\n              <Earnings success={context.colors.success.main} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default AnalyticsCards\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from '@src/configs/axios/axiosConfig'\nimport { Bar } from \"react-chartjs-2\"\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  CardTitle,\n  DropdownToggle,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\nimport moment from 'moment'\n\nconst RevenueReport = () => {\n  // ** State\n  const currentMonth = moment().format('M')\n  const monthlist = ['Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar']\n  const [data, setData] = useState(null)\n  const [chartData, setChartData] = useState(null)\n  const [currentYear, setCurrentYear] = useState(parseInt(currentMonth) > 3 ? moment().add(1, 'y').format('YYYY') : moment().format('YYYY'))\n  const [filter, setFilter] = useState({ id: 2, name: 'This Year' })\n  const dateList = [{ id: 1, name: 'Last year' }, { id: 2, name: 'This Year' }]\n\n  const indianFormattedPrice = (val) => {\n\n    const value = String(val)\n\n    let removedValue = ''\n    let finalVal = ''\n    if (value.includes('.')) {\n      removedValue = value.slice(value.indexOf('.'))\n      finalVal = value.replace(removedValue, '')\n      finalVal = finalVal.toString()\n    } else {\n      finalVal = value.toString()\n    }\n    let lastThree = finalVal.substring(finalVal.length - 3)\n    const otherNumbers = finalVal.substring(0, finalVal.length - 3)\n    if (otherNumbers !== '') lastThree = `,${lastThree}`\n    const res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree\n    return res + (removedValue === '' ? '.00' : removedValue)\n  }\n\n  const options = {\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 8\n        },\n        grid: {\n          display: false\n        }\n      }\n    },\n    plugins: {\n      datalabels: {\n        display: true\n      },\n      legend: {\n        display: false\n      },\n      title: {\n        display: false\n      }\n    }\n  }\n\n  const getData = (currentYear) => {\n\n    const params = {\n      startdate: moment().set('year', currentYear).subtract(1, 'y').set('month', 3).startOf('month').startOf('d').valueOf(),\n      enddate: moment().set('year', (parseInt(currentYear) + 1)).set('month', 2).endOf('month').endOf('d').valueOf()\n    }\n\n    axios.post('/taskinvoices/revenuereport', params)\n      .then(res => {\n        const dataSamp = {\n          labels: monthlist,\n          datasets: [\n            {\n              label: \"Total\",\n              backgroundColor: \"#7367f0\",\n              borderColor: \"#7367f0\",\n              data: []\n            },\n            {\n              label: \"Received\",\n              backgroundColor: \"#28c76f\",\n              borderColor: \"#28c76f\",\n              data: []\n            }\n          ]\n        }\n\n        monthlist.forEach((name, i) => {\n          const total_data = res.data.result.total.find((obj) => {\n            const mname = moment(obj.date).format('MMM')\n            return (mname === name)\n          })\n          const received_data = res.data.result.received.find((obj) => {\n            const mname = moment(obj.date).format('MMM')\n            return (mname === name)\n          })\n\n          dataSamp.datasets[0]['data'][i] = total_data?.amount || 0\n          dataSamp.datasets[1]['data'][i] = received_data?.amount || 0\n        })\n\n        setChartData(dataSamp)\n        setData(res.data.result)\n      })\n    return () => setData(null)\n  }\n\n  useEffect(() => {\n\n    getData(currentYear)\n\n  }, [])\n\n  const applyFilter = (item) => {\n    setFilter(item)\n    let year\n    if (item.id === 2) {\n      year = moment().add(1, 'y').format('YYYY')\n    } else {\n      year = moment().format('YYYY')\n    }\n    setCurrentYear(year)\n    getData(year)\n  }\n\n\n  return data !== null ? (\n    <Card className='card-revenue-budget'>\n      <Row className='mx-0'>\n        <Col className='revenue-report-wrapper p-50 p-lg-2' md='9' xs='12'>\n          <div className='d-sm-flex justify-content-between align-items-center mb-1'>\n            <CardTitle className='mb-50 mb-sm-0'>Revenue Report</CardTitle>\n          </div>\n          {chartData &&\n            <Bar data={chartData} options={options} width={600} height={235} />\n          }\n        </Col>\n        <Col className='budget-wrapper' md='3' xs='12'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle className='budget-dropdown' outline color='primary' size='sm' caret>\n              {filter?.name}\n            </DropdownToggle>\n            <DropdownMenu>\n              {dateList.map((item, k) => (\n                <DropdownItem className='w-100' key={k} onClick={() => applyFilter(item)}>\n                  {item.name}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n          <Row>\n            <span className='text-primary'>Total sale</span>\n            <h6 className='mb-25'>{indianFormattedPrice(data.total_invoice)}</h6>\n          </Row>\n          <Row>\n            <span className='text-success'>Total Receipts</span>\n            <h6 className='mb-25'>{indianFormattedPrice(data.total_received)}</h6>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  ) : null\n}\n\nexport default RevenueReport\n"],"sourceRoot":""}