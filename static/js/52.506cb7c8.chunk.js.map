{"version":3,"sources":["views/ui-elements/cards/statistics/StatsCard.js","@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/QuaterlySales.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js","views/ui-elements/cards/statistics/RevenueGenerated.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/OrdersReceived.js","views/ui-elements/cards/statistics/SubscribersGained.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["userId","orgUserId","activeOrg","activeOrganization","data","status","title","subtitle","color","icon","size","StatsCard","cols","dispatch","useDispatch","navigate","useNavigate","useState","dataArr","setData","updateParam","sts","obj","updateStatusParams","useEffect","date","moment","startOf","utc","format","userType","organizationusersusertypeid","axios","post","then","res","forEach","key","ind","tasks","findIndex","o","parseInt","taskstatus","count","catch","err","console","log","getStats","className","tag","map","item","index","classnames","length","onClick","StatsWithLineChart","stats","statTitle","series","options","type","height","rest","defaultProps","lineChartOptions","Newsletter","warning","get","chart","id","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","SiteTraffic","ActiveUsers","success","QuarterlySales","danger","StatsWithAreaChart","analyticsData","sales","TinyChartStats","props","OrdersBarChart","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","ProfitLineChart","info","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize","RevenueGenerated","kFormatter","revenue","StatsVertical","StatisticsCards","context","useContext","ThemeColors","lg","xs","main","sm","md","xl","StatsHorizontal","SubscribersGained","QuaterlySales","OrdersReceived","BreadCrumbs","to","Wrapper","link","Link","Fragment","isLastItem","active","end","areaChartOptions","orders","subscribers","renderStats","statsMargin"],"mappings":"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","file":"static/js/52.506cb7c8.chunk.js","sourcesContent":["// ** Third Party Components\nimport classnames from 'classnames'\nimport { AlertOctagon, AlertTriangle, CheckCircle, CheckSquare, Circle, RefreshCcw, RefreshCw } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { updateStatusParams } from '@src/views/apps/task/store/index.js'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\nconst data = [\n  {\n    status: 1,\n    title: '0',\n    subtitle: 'Pending',\n    color: 'light-primary',\n    icon: <Circle size={20} />\n  },\n  {\n    status: 2,\n    title: '0',\n    subtitle: 'In Progress',\n    color: 'light-warning',\n    icon: <CheckSquare size={20} />\n  },\n  {\n    status: 3,\n    title: '0',\n    subtitle: 'Completed',\n    color: 'light-success',\n    icon: <CheckCircle size={20} />\n  },\n  {\n    status: 6,\n    title: '0',\n    subtitle: 'Pending Review',\n    color: 'light-ocean',\n    icon: <AlertOctagon size={20} />\n  },\n  {\n    status: 7,\n    title: '0',\n    subtitle: 'Request Changes',\n    color: 'light-info',\n    icon: <RefreshCcw size={20} />\n  },\n  {\n    status: 9,\n    title: '0',\n    subtitle: 'Overdue',\n    color: 'light-danger',\n    icon: <AlertTriangle size={20} />\n  }\n]\n\nconst StatsCard = ({ cols }) => {\n\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [dataArr, setData] = useState([])\n\n  const getStats = () => {\n\n    const obj = { date: moment().startOf('day').utc().format('x'), userId, userType: activeOrg.organizationusersusertypeid }\n    axios.post('tasks/taskcountbystatus', obj)\n      .then((res) => {\n        data.forEach((obj, key) => {\n          const ind = res.data.tasks.findIndex((o) => parseInt(o.taskstatus) === obj.status)\n          if (ind > -1) {\n            data[key].title = res.data.tasks[ind].count\n          }\n        })\n        setData(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const updateParam = async (sts) => {\n    const obj = {\n      status: sts\n    }\n    await dispatch(updateStatusParams(obj))\n    navigate('/task/list')\n  }\n\n\n  useEffect(() => {\n    if (activeOrg !== null) {\n      getStats()\n    }\n  }, [])\n\n  const renderData = () => {\n    return dataArr.map((item, index) => {\n\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2`]: index !== data.length - 1\n          }, [`col flex-50`])}\n        >\n          <div className='d-flex align-items-center cursor-pointer' onClick={() => { updateParam([item.status]) }}>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h6 className='fw-bolder mb-0'>{item.title}</h6>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Task Stats</CardTitle>\n        {/* <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText> */}\n      </CardHeader>\n      <CardBody className='py-0'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='fw-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Custom Components\nimport StatsCard from './StatsCard'\nimport Newsletter from './Newsletter'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport RevenueGenerated from './RevenueGenerated'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SubscribersGained from './SubscribersGained'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport {\n  Eye,\n  Cpu,\n  Heart,\n  Award,\n  Truck,\n  Server,\n  Activity,\n  ShoppingBag,\n  AlertOctagon,\n  MessageSquare\n} from 'react-feather'\n\nconst StatisticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Statistics Cards' data={[{ title: 'Cards' }, { title: 'Statistics Cards' }]} />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  color: 'primary',\n  options: areaChartOptions\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Package } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Users } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n"],"sourceRoot":""}