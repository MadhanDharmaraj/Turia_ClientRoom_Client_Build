{"version":3,"sources":["views/apps/task/store/taskconversation.js","views/apps/task/view/Conversation.js","views/apps/task/view/UserInfoCard.js","views/apps/task/view/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["userId","orgUserId","getTaskConversation","createAsyncThunk","id","axios","post","taskId","response","data","taskconversations","addTaskConversation","dispatch","updateTaskConversation","taskid","deleteTaskConversation","updatedBy","createSlice","name","initialState","total","params","allData","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","activeOrgId","activeOrganizationid","MySwal","withReactContent","Swal","Templates","props","tabId","renderClient","row","initials","className","color","content","username","charAt","useState","block","setBlock","Loader","useDispatch","useParams","filesArr","setFilesArr","setData","attachmentIds","setAttachmentsId","conversationId","setConversationId","comment","setComment","replycomment","setReplyComment","editcomment","setEditComment","fileUploadProgress","setProgress","store","useSelector","taskconversation","fileClassNames","image","pdf","xlsx","xls","docx","doc","deletefn","conid","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","value","editNote","step","temp","map","obj","loc","reply","oj","editFlag","console","log","dateformat","val","moment","format","configUpload","headers","onUploadProgress","Math","round","loaded","uploadFiles","files","formData","FormData","forEach","file","key","append","res","attachment_ids","catch","toast","error","position","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","extension","split","pop","push","length","getRootProps","getInputProps","saveNote","success","useEffect","postComment","organizationId","createdBy","fileList","index","md","substr","size","onClick","filtered","filter","i","splice","handleRemoveFile","blocking","loader","for","type","rows","placeholder","onInput","e","target","item","k","createdon","replyFlag","tag","end","href","preventDefault","replyNote","replace","driveid","originalfilename","outline","cancelReply","j","UserInfoCard","selectedTask","search","useLocation","searchParams","URLSearchParams","active","setActive","get","dateFormat","unix","responsive","bordered","colSpan","Link","to","clientid","clientname","serviceid","servicename","assigeduser","user","pill","JSON","parse","startdate","enddate","pills","tab","activeTab","Conversation","TaskView","task","getTask","undefined","xl","lg","UILoader","children","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/56.240d3de1.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\n\n\nexport const getTaskConversation = createAsyncThunk('appTasks/getTaskConversation', async (id, { }) => {\n  const response = await axios.post('/taskconversations/list', { taskId: id })\n  return {\n    data: response.data.taskconversations\n  }\n})\n\nexport const addTaskConversation = createAsyncThunk('appTasks/addTaskConversation', async (data, { dispatch }) => {\n  await axios.post('/taskconversations/create', data)\n  await dispatch(getTaskConversation(data.taskId))\n  return ''\n})\n\nexport const updateTaskConversation = createAsyncThunk('appTasks/updateTaskConversation', async (data, { dispatch }) => {\n  await axios.post('/taskconversations/update', data)\n  await dispatch(getTaskConversation(data.taskid))\n  return ''\n})\n\nexport const deleteTaskConversation = createAsyncThunk('appTasks/deleteTaskConversation', async (data, { dispatch }) => {\n  await axios.post('/taskconversations/delete', { id: data.id, taskId: data.taskId, updatedBy: userId })\n  await dispatch(getTaskConversation(data.taskId))\n  return ''\n})\n\nexport const appTasksSlice = createSlice({\n  name: 'appTasks',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getTaskConversation.fulfilled, (state, action) => {\n        state.data = action.payload.data\n      })\n  }\n})\n\nexport default appTasksSlice.reducer\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Card,\n  Input,\n  Button,\n  CardBody,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Col,\n  Row,\n  Progress,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { X, Paperclip, File, MoreVertical, Edit2, Trash, CornerUpRight } from 'react-feather'\nimport Avatar from '@src/@core/components/avatar'\nimport { getTaskConversation, addTaskConversation, deleteTaskConversation, updateTaskConversation } from '../store/taskconversation'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst MySwal = withReactContent(Swal)\n// ** Images\nconst Templates = props => {\n  // ** Hook\n  const { tabId } = props\n\n  const renderClient = row => {\n\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={'light-primary'}\n        content={row?.username?.charAt(0) || 'T'}\n      />\n    )\n\n  }\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const dispatch = useDispatch()\n  //** State */\n  const { id } = useParams()\n  const [filesArr, setFilesArr] = useState([])\n  //const [files, setFiles] = useState([])\n  const [data, setData] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const [conversationId, setConversationId] = useState('')\n  const [comment, setComment] = useState('')\n  const [replycomment, setReplyComment] = useState('')\n  const [editcomment, setEditComment] = useState('')\n  const [fileUploadProgress, setProgress] = useState(0)\n\n  const store = useSelector(state => state.taskconversation)\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n  const deletefn = (conid) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteTaskConversation({ id: conid, taskId: id }))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Comments has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const editNote = (id, step = 1) => {\n    const temp = data.map((obj) => {\n      let loc = obj.reply\n      if (step === 2) {\n        loc = obj?.reply?.map((oj) => {\n          if (oj.id === id) {\n            setEditComment(oj.comment)\n            return { ...oj, editFlag: true }\n          } else {\n            return { ...oj, editFlag: false }\n          }\n        })\n      }\n\n      if (obj.id === id) {\n        setEditComment(obj.comment)\n        return { ...obj, editFlag: true, reply: loc }\n      } else {\n        return { ...obj, editFlag: false, reply: loc }\n      }\n\n    })\n    console.log(temp)\n    setData(temp)\n  }\n\n  const dateformat = (val) => {\n\n    return moment(val, 'x').format('YYYY, MMM-D h:m A')\n\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    setBlock(true)\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('id', id)\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n\n    axios.post('/google/taskfolders', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      //setFiles([])\n      setBlock(false)\n    }).catch(() => {\n      toast.error('Upload Failed', { position: 'bottom-right' })\n      setBlock(false)\n    })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        //setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    //setFiles(filtered)\n    setFilesArr(filtered)\n  }\n\n  const saveNote = async (obj) => {\n    obj.comment = editcomment\n    if (obj.comment !== '') {\n      obj['updatedBy'] = userId\n      await dispatch(updateTaskConversation(obj))\n      toast.success('Comment Updated Successfully', { position: 'bottom-right' })\n    }\n  }\n\n  useEffect(async () => {\n    if (tabId === 'tasknotes') {\n      await dispatch(getTaskConversation(id))\n    }\n  }, [tabId])\n\n  useEffect(() => {\n    setData(store?.data || [])\n  }, [store?.data])\n\n  const postComment = async () => {\n    if ((comment !== '' || replycomment !== '') || attachmentIds.length > 0) {\n      const data = {\n        organizationId: activeOrgId,\n        createdBy: userId,\n        updatedBy: userId,\n        comment: (conversationId === null || conversationId === '') ? comment : replycomment,\n        attachmentIds,\n        conversationId,\n        taskId: id\n      }\n      setBlock(true)\n      await dispatch(addTaskConversation(data))\n      toast.success('Comment Added Successfully', { position: 'bottom-right' })\n      setComment('')\n      //setFiles([])\n      setFilesArr([])\n      setProgress(0)\n      setAttachmentsId([])\n      setBlock(false)\n    }\n\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={2} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n\n      <X className='cursor-pointer' size={14} onClick={() => handleRemoveFile(file, index)} />\n\n    </Col>\n  ))\n\n  const replyNote = (k) => {\n    const temp = data.map((obj, i) => {\n      if (i === k) {\n        setConversationId(obj.id)\n        return { ...obj, replyFlag: true }\n      } else {\n        return { ...obj, replyFlag: false }\n      }\n    })\n    setData(temp)\n  }\n\n  const cancelReply = () => {\n    setConversationId(null)\n    setReplyComment('')\n    const temp = data.map((obj) => {\n      return { ...obj, replyFlag: false }\n    })\n    setData(temp)\n  }\n\n  return (\n    <Fragment>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody>\n\n            <fieldset className='form-label-group mb-50'>\n              <Label className='form-check-label' for={`add-comment-`}>\n                Add Comment\n              </Label>\n              <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' value={comment} onInput={(e) => setComment(e.target.value)} />\n            </fieldset>\n\n            <input {...getInputProps()} />\n\n            <Button type='button' color='primary' size='sm' {...getRootProps({ })} >\n              <Paperclip size={14} className=''></Paperclip>\n            </Button>\n\n            <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n              Post Comment\n            </Button>\n\n            {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n            <Row className='d-flex p-1'>{fileList}</Row>\n\n            {data.map((item, k) => {\n              return (\n                <div className='d-flex align-items-start my-1' key={k}>\n                  {renderClient(item)}\n                  <div className='profile-user-info w-100'>\n                    <div className='d-flex align-items-center justify-content-between'>\n                      <h6 className='mb-0'>{item.username}</h6>\n                      <span className='d-flex text-body'>\n                        <span className='text-sm text-body font-small-3 mt-25'>{dateformat(item.createdon)}</span>\n                        {(!item.editFlag && !item.replyFlag) &&\n                          <UncontrolledDropdown>\n                            <DropdownToggle tag='span'>\n                              <MoreVertical size={16} />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); editNote(item.id, 1) }}>\n                                  <Edit2 size={13} /> Edit\n                                </Col>\n                              </DropdownItem>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); deletefn(item.id) }}>\n                                  <Trash size={13} /> Delete\n                                </Col>\n                              </DropdownItem>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); replyNote(k) }}>\n                                  <CornerUpRight size={13} /> Reply\n                                </Col>\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        }\n                      </span>\n                    </div>\n                    {(!item.editFlag) &&\n                      <Row className='mt-1'>\n\n                        <div className='white-space-wrap text-body '>\n                          {item.comment !== '' &&\n                            < span className='rounded-3 bg-light-primary chat-bubble'>\n                              {item.comment.replace(/(\\\\n)/g, \"\\n\")}\n                            </span>\n                          }\n                          <Row>\n                            {\n                              item?.files?.map((file, k) => {\n                                return (\n                                  <Col md={'2'} key={k} className='file-details d-flex align-items-center cursor-pointer'>\n                                    <ListGroupItem className={`col-12 d-flex mb-1 align-items-center ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n                                      <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}.${file.extension}` : file.originalfilename}</a>\n                                    </ListGroupItem>\n                                  </Col>\n                                )\n                              })\n                            }\n                          </Row>\n                        </div>\n                      </Row>\n                    }\n                    {item.editFlag &&\n                      <Col className='mt-2'>\n                        <Input type='textarea' rows='3' value={editcomment.replace(/(\\\\n)/g, \"\\n\")} onInput={(e) => { setEditComment(e.target.value) }} />\n\n                        <Col className='d-flex justify-content-end mt-1' >\n                          <Button size='sm' color='warning' outline onClick={() => editNote(-1, 1)}>Cancel</Button>\n                          <Button size='sm' color='primary' className='ms-1' onClick={() => saveNote(item)} >Save</Button>\n                        </Col>\n                      </Col>\n                    }\n                    {item.replyFlag &&\n                      <Col>\n                        <fieldset className='form-label-group mb-50'>\n                          <Label className='form-check-label' for={`add-comment-`}>\n                            Add Comment\n                          </Label>\n                          <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' value={replycomment} onInput={(e) => setReplyComment(e.target.value)} />\n                        </fieldset>\n                        <input {...getInputProps()} />\n\n                        <Button type='button' color='primary' size='sm' {...getRootProps({  })} >\n                          <Paperclip size={14} className=''></Paperclip>\n                        </Button>\n\n                        <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n                          Send Reply\n                        </Button>\n                        <Button color='warning' className='ms-1' size='sm' onClick={() => cancelReply()}>\n                          Cancel\n                        </Button>\n\n                        {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n                        <Row className='d-flex p-1'>{fileList}</Row>\n                      </Col>\n                    }\n\n                    {\n                      item?.reply?.map((reply, j) => {\n                        return (\n                          reply !== null &&\n                          <div className='d-flex align-items-start my-1' key={j}>\n                            {renderClient(reply)}\n                            <div className='profile-user-info w-100'>\n                              <div className='d-flex align-items-center justify-content-between'>\n                                <h6 className='mb-0'>{reply.username}</h6>\n                                <span className='d-flex text-body'>\n                                  <span className='text-sm text-body font-small-3 mt-25'>{dateformat(reply.createdon)}</span>\n                                  {(!item.editFlag && !item.replyFlag) &&\n                                    <UncontrolledDropdown>\n                                      <DropdownToggle tag='span'>\n                                        <MoreVertical size={16} />\n                                      </DropdownToggle>\n                                      <DropdownMenu end>\n                                        <DropdownItem>\n                                          <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); editNote(reply.id, 2) }}>\n                                            <Edit2 size={13} /> Edit\n                                          </Col>\n                                        </DropdownItem>\n                                        <DropdownItem>\n                                          <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); deletefn(reply.id) }}>\n                                            <Trash size={13} /> Delete\n                                          </Col>\n                                        </DropdownItem>\n                                      </DropdownMenu>\n                                    </UncontrolledDropdown>\n                                  }\n                                </span>\n                              </div>\n                              <Row className='mt-1'>\n                                {!reply?.editFlag &&\n                                  <div className='white-space-wrap text-body '>\n                                    {reply.comment !== '' &&\n                                      < span className='rounded-3 bg-light-warning chat-bubble-reply'>\n                                        {reply.comment.replace(/(\\\\n)/g, \"\\n\")}\n                                      </span>\n                                    }\n                                    <Row>\n                                      {\n                                        reply?.files?.map((file, k) => {\n                                          return (\n                                            <Col md={'2'} key={k} className='file-details d-flex align-items-center cursor-pointer'>\n                                              <ListGroupItem className={`col-12 d-flex mb-1 align-items-center ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n                                                <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}.${file.extension}` : file.originalfilename}</a>\n                                              </ListGroupItem>\n                                            </Col>\n                                          )\n                                        })\n                                      }\n                                    </Row>\n                                  </div>\n                                }\n                                {reply?.editFlag &&\n                                  <Col className='mt-2'>\n                                    <Input type='textarea' rows='3' value={editcomment.replace(/(\\\\n)/g, \"\\n\")} onInput={(e) => { setEditComment(e.target.value) }} />\n\n                                    <Col className='d-flex justify-content-end mt-1' >\n                                      <Button size='sm' color='warning' outline onClick={() => editNote(-1, 2)}>Cancel</Button>\n                                      <Button size='sm' color='primary' className='ms-1' onClick={() => saveNote(reply)} >Save</Button>\n                                    </Col>\n                                  </Col>\n                                }\n                              </Row>\n                            </div>\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                </div>\n              )\n            })\n            }\n          </CardBody>\n        </Card>\n      </UILoader>\n    </Fragment >\n  )\n}\n\nexport default Templates\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, Badge, Table, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n// ** Third Party Components\nimport Conversation from './Conversation'\n\nimport { Calendar, MessageCircle, User, X } from 'react-feather'\n\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nimport moment from 'moment'\nconst UserInfoCard = ({ selectedTask }) => {\n\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n  const [active, setActive] = useState('tasknotes')\n  // ** State\n  \n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  useEffect(() => {\n    const tabId = searchParams.get('tabId')\n    if (tabId) {\n      setActive(tabId)\n    }\n  }, [searchParams])\n\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n  }\n\n  return (\n    <Fragment>\n\n      <Card>\n        <CardBody>\n          <Table responsive bordered>\n            <thead>\n              <tr >\n                <th colSpan='1'>\n                  <Col tag={Link} to={`/clients/view/${selectedTask.clientid}`}>{selectedTask.clientname} - </Col>\n                  <Col tag={Link} to={`/services/view/${selectedTask.serviceid}`}>{selectedTask.servicename}</Col></th>\n                <th>\n                  <Row className='justify-content-end'>\n                    <Col className='p-0' md={5}>\n                    </Col>\n                    <Col md={2} className='d-flex'>\n                      <Col tag={Link} to={`/task/list`} >\n                        <X size={16} className='ms-1 cursor-pointer' id='deletetooltip' />\n                      </Col>\n                    </Col>\n                  </Row>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td >\n                  Assigned To\n                </td>\n                <td>\n                  {selectedTask.assigeduser.map((user, key) => {\n\n                    return (<Badge color='light-primary' pill href='#' key={key}>\n                      <User size={14} />\n                      <span className='align-middle ms-50'>{JSON.parse(user)?.name}</span>\n                    </Badge>\n                    )\n                  })\n                  }\n                </td>\n              </tr>\n              <tr>\n                <td>Start Date</td>\n                <td >\n                  <div className='d-flex justify-content-between' >\n                    {dateFormat(selectedTask.startdate)}\n                    <Calendar size={16} />\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td >\n                  End Date\n                </td>\n                <td>\n                  <div className='d-flex justify-content-between' >\n                    {dateFormat(selectedTask.enddate)}\n                    <Calendar size={16} />\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n      <Nav pills className=\"flex-lg-row flex-column nav nav-left\">\n        <NavItem>\n          <NavLink active={active === 'tasknotes'} onClick={() => toggleTab('tasknotes')}>\n            <MessageCircle className='font-medium-3 me-50' />\n            <span className='fw-bold'>Comments</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <Card>\n        <CardBody className='px-0'>\n          <Row className=''>\n            <Fragment>\n              <TabContent activeTab={active}>\n                <TabPane tabId='tasknotes'>\n                  <Conversation tabId={active} />\n                </TabPane>\n              </TabContent>\n            </Fragment>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment >\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getTask } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst TaskView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.task)\n  const dispatch = useDispatch()\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(async () => {\n    if (id !== null) {\n      setBlock(true)\n      await dispatch(getTask({id, userId}))\n    }\n    setBlock(false)\n\n  }, [dispatch, id])\n\n\n  return store.selectedTask !== null && store.selectedTask !== undefined ? (\n    <UILoader blocking={block} loader={<Loader />}>\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='12' lg='12' >\n            <UserInfoCard selectedTask={store.selectedTask} />\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <UILoader blocking={block} loader={<Loader />}>\n      {/* <Alert color='danger'>\n        <h4 className='alert-heading'>Task not found</h4>\n        <div className='alert-body'>\n          Task with id: {id} doesn't exist. Check list of all Tasks: <Link to='/task/list'>Tasks List</Link>\n        </div>\n      </Alert> */}\n    </UILoader>\n  )\n}\nexport default TaskView\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}