{"version":3,"sources":["views/apps/recurring-task/list/Table.js","views/apps/recurring-task/list/index.js","../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/webpack/bootstrap","../ReactPaginate/node_modules/prop-types/index.js","../webpack:/ReactPaginate/external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js","@core/components/widgets/stats/StatsHorizontal.js","views/apps/recurring-task/edit/EditCard.js"],"names":["MySwal","withReactContent","Swal","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedService","refreshTaskList","useState","addTaskFlag","setAddTaskFlag","id","useParams","className","refreshList","val","xl","md","sm","htmlFor","type","value","onChange","style","width","e","target","Can","I","a","color","onClick","caret","outline","tag","Link","to","TaskList","tabId","dispatch","useDispatch","store","useSelector","state","recurring_task","block","setBlock","Loader","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","setRowsPerPage","name","currentClient","setCurrentClient","currentService","currentUser","setCurrentUser","editTaskFlag","setEditTaskFlag","priorityOptions","frequencyOptions","selTask","setSelTask","statusObj","useEffect","getData","q","user","client","perPage","page","recurringFlag","service","clientOptions","setClientOptions","userOptions","setuserOptions","getOrganizationUsers","axios","post","then","response","arr","data","organizationusers","unshift","catch","err","console","log","status","clients","handlePagination","selected","parseInt","currentTarget","CustomPagination","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","dataToRender","filters","isFiltered","Object","keys","some","k","length","handleSort","column","sortDirection","sortField","for","label","isClearable","options","classNamePrefix","theme","selectThemeColors","getOptionLabel","option","getOptionValue","blocking","loader","setEditClose","map","row","clientname","priority","recurringid","moment","nextrecurringstartdate","format","assignee","obj","key","reviewer","lg","size","href","preventDefault","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","deleteTask","deletefn","Table","__WEBPACK_EXTERNAL_MODULE__1__","module","exports","require","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","PageView","activeLinkClassName","getEventListener","pageSelectedHandler","extraAriaContext","ariaLabel","ariaCurrent","role","tabIndex","aria-label","aria-current","onKeyPress","propTypes","BreakView","breakLabel","breakClassName","breakLinkClassName","breakHandler","PaginationBoxView","initialSelected","evt","returnValue","handlePageSelected","setState","callCallback","handlerFunction","eventListener","index","getForwardJump","getBackwardJump","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","push","getPageElement","breakView","leftSide","rightSide","createPageView","handleBreakClick","initialPage","this","disableInitialCallback","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","disabledClassName","previousAriaLabel","prevRel","nextAriaLabel","nextRel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","aria-disabled","rel","pagination","handleNextPage","Component","StatsHorizontal","stats","renderStats","statTitle","statsMargin","classnames","activeOrgId","activeOrganizationid","userId","orgUserId","durationOptions","colourStyles","multiValue","styles","backgroundColor","RecurringTasks","formModal","setFormModal","schema","yup","clientId","required","updatedBy","default","organizationId","serviceId","invoiceFlag","recurringId","startDate","when","is","endDate","assigneeId","min","reviewerId","invoiceAmount","nullable","quarterlyDates","of","duration","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","setValue","setUserOptions","dateList","setDateList","dayList","Array","fill","num","assigneeUserOptions","setAssigneeUserOptions","setDuration","reviewerUserOptions","setReviewerUserOptions","assigneeDefaultValue","setAssigneeDefaultValue","reviewerDefaultValue","setReviewerDefaultValue","handleQuarDateChange","fieldName","res","startOf","valueOf","handleDateChange","flg","today","today_day","set","add","handleAssigneeChange","flag","reviewerOptions","tempArr","isArray","x","userid","filter","id1","id2","handleReviwerChange","assigneeOptions","stdate","enddate","clientid","invoiceflag","taskprice","nextrecurringenddate","String","temp","quarterlydates","oj","JSON","parse","onSubmit","deletedids","forEach","includes","updateTask","customStyles","base","minHeight","height","scrollable","isOpen","toggle","render","field","ref","inputRef","placeholder","find","message","isMulti","defaultChecked","handleDuration","rules","dateFormat","date","dateStr","altInput","altFormat","setDate","item"],"mappings":"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","file":"static/js/95.b144e808.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, forwardRef } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n// ** Invoice List Sidebar\nimport { Can } from '@src/utility/context/Can.js'\n// ** Store & Actions\nimport { getData, deleteTask } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, Edit, MoreVertical, Trash2, Upload } from 'react-feather'\n\n// ** Utils\nimport AddTask from '@src/views/apps/recurring-task/add/AddCard.js'\nimport EditTask from '@src/views/apps/recurring-task/edit/EditCard.js'\n\nimport { selectThemeColors } from '@utils'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Table,\n  Badge\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport moment from 'moment'\n\nconst MySwal = withReactContent(Swal)\n// ** Table Header\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm, selectedService, refreshTaskList }) => {\n  // ** Converts table to CSV\n  const [addTaskFlag, setAddTaskFlag] = useState(false)\n  const { id } = useParams()\n\n  const refreshList = (val) => {\n    if (val) {\n      refreshTaskList(true)\n    }\n    setAddTaskFlag(false)\n  }\n  return (\n    <div className='invoice-list-table-header ps-1 mt-2 mb-75'>\n      <Row>\n\n        {\n          addTaskFlag &&\n          <AddTask id={id} addTaskFlag={addTaskFlag} selectedService={selectedService} refreshList={refreshList} />\n        }\n        <Col xl='6' md='6' sm='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col md='6' sm='6'\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className='d-flex align-items-center table-header-actions'>\n            <Can I={'write'} a={'recurring-task'}>\n              <Button className='add-new-user' color='primary' onClick={() => { setAddTaskFlag(true) }}>\n                Add\n              </Button>\n            </Can>\n            <UncontrolledDropdown className='ms-1'>\n              <DropdownToggle color='secondary' caret outline>\n                <MoreVertical className='font-small-4 me-50' />\n              </DropdownToggle>\n              <DropdownMenu>\n                <Can I={'import'} a={'task'}>\n                  <DropdownItem tag={Link} to={`/import/recurring-task`} className='w-100'>\n                    <Upload className='font-small-4 me-50' />\n                    <span className='align-middle'>Import</span>\n                  </DropdownItem>\n                </Can>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst TaskList = ({ selectedService, tabId }) => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.recurring_task)\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const { id } = useParams()\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('createdon')\n  const [rowsPerPage, setRowsPerPage] = useState(50)\n  const [currentClient, setCurrentClient] = useState({ id: '', name: 'Select Client' })\n  const currentService = id\n  const [currentUser, setCurrentUser] = useState({ id: '', name: 'Select Employee' })\n  const [editTaskFlag, setEditTaskFlag] = useState(false)\n  // ** Bootstrap Checkbox Component\n  const BootstrapCheckbox = forwardRef((props, ref) => (\n    <div className='form-check'>\n      <Input type='checkbox' ref={ref} {...props} />\n    </div>\n  ))\n  const priorityOptions = ['', 'Low', 'Medium', 'High']\n  const frequencyOptions = ['', 'Monthly', 'Yearly', 'Quarterly', 'Daily', 'Weekly']\n  const [selTask, setSelTask] = useState(null)\n  const statusObj = [\n    '',\n    'light-primary',\n    'light-success',\n    'light-warning'\n  ]\n  // ** Get data on mount\n  useEffect(async () => {\n    if (tabId === 'recurring_tasks') {\n      setBlock(true)\n      await dispatch(\n        getData({\n          sort,\n          sortColumn,\n          q: searchTerm,\n          user: currentUser.id,\n          client: currentClient.id,\n          perPage: rowsPerPage,\n          page: currentPage,\n          recurringFlag: true,\n          service: currentService || ''\n        })\n\n      )\n      setBlock(false)\n    }\n  }, [tabId])\n\n  const refreshTaskList = async (val) => {\n    if (!val) return\n\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        user: currentUser.id,\n        client: currentClient.id,\n        perPage: rowsPerPage,\n        page: currentPage,\n        recurringFlag: true,\n        service: currentService || ''\n      })\n\n    )\n    setBlock(false)\n  }\n\n  const [clientOptions, setClientOptions] = useState([])\n  const [userOptions, setuserOptions] = useState([])\n\n  const getClients = () => {\n    axios.post('/clients/dropdown', { status: 1 }).then(response => {\n      const arr = response.data.clients\n      arr.unshift({ id: '', name: 'Select All' })\n      setClientOptions(arr)\n    })\n  }\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data.organizationusers\n      arr.unshift({ id: '', name: 'Select All' })\n      setuserOptions(arr)\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  useEffect(() => {\n    if (tabId === 'recurring_tasks') {\n      getOrganizationUsers()\n      getClients()\n      setEditTaskFlag(false)\n    }\n  }, [tabId])\n\n\n  // ** Function in get data on page change\n  const handlePagination = async page => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        client: currentClient.id,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        service: currentService || '',\n        recurringFlag: true\n      })\n    )\n    setCurrentPage(page.selected + 1)\n    setBlock(false)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = async e => {\n    const value = parseInt(e.currentTarget.value)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        client: currentClient.id,\n        service: currentService || '',\n        perPage: rowsPerPage,\n        page: currentPage,\n        user: currentUser.id,\n        recurringFlag: true\n      })\n    )\n    setRowsPerPage(value)\n    setBlock(false)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = async val => {\n    setSearchTerm(val)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        perPage: rowsPerPage,\n        page: currentPage,\n        client: currentClient.id,\n        service: currentService || '',\n        recurringFlag: true\n      })\n    )\n    setBlock(false)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      client: currentClient.id,\n      service: currentService || '',\n      user: currentUser.id,\n      recurringFlag: true,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data || []\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    }\n  }\n\n  const handleSort = async (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        client: currentClient.id,\n        user: currentUser.id,\n        recurringFlag: true,\n        service: currentService || ''\n      })\n    )\n    setBlock(false)\n  }\n\n  const openEditModal = (val) => {\n    setSelTask(val)\n    setEditTaskFlag(true)\n  }\n\n  const setEditClose = () => {\n    setSelTask(null)\n    setEditTaskFlag(false)\n  }\n\n  const deletefn = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteTask(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Task has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n\n  return (\n    <Fragment>\n      <Card className='my-0 pb-0'>\n        <CardBody className='my-0 p-0'>\n          <Row>\n            <Col md='3'>\n              <Label for='role-select'>Client</Label>\n              <Select\n                label={'name'}\n                isClearable={false}\n                value={currentClient}\n                options={clientOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n                onChange={async data => {\n                  setCurrentClient(data)\n                  setBlock(true)\n                  await dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      client: data.id,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      user: currentUser.id,\n                      recurringFlag: true,\n                      service: currentService || ''\n                    })\n                  )\n                  setBlock(false)\n                }}\n              />\n            </Col>\n            <Col md='3'>\n              <Label for='role-select'>User</Label>\n              <Select\n                isClearable={false}\n                value={currentUser}\n                options={userOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n                onChange={async data => {\n                  setCurrentUser(data)\n                  setBlock(true)\n                  await dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      client: currentClient.id,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      user: data.id,\n                      recurringFlag: true,\n                      service: currentService || ''\n                    })\n                  )\n                  setBlock(false)\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card className='overflow-hidden'>\n          <CustomHeader\n            store={store}\n            searchTerm={searchTerm}\n            rowsPerPage={rowsPerPage}\n            handleFilter={handleFilter}\n            handlePerPage={handlePerPage}\n            selectedService={selectedService}\n            refreshTaskList={refreshTaskList}\n          />\n          {\n            editTaskFlag && <EditTask id={id} editTaskFlag={editTaskFlag} selTask={selTask} selectedService={selectedService} setEditClose={setEditClose} refreshTaskList={refreshTaskList} />\n          }\n          <div className='react-dataTable'>\n            <Table>\n              <thead>\n                <tr>\n                  <th onClick={() => handleSort()}>Client</th>\n                  <th>Priority</th>\n                  <th>Frequency</th>\n                  <th>Date</th>\n                  <th>Assignee</th>\n                  <th>Reviewer</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dataToRender().length > 0 && dataToRender().map((row, k) => {\n                  return (<tr key={k}>\n                    <td>{row.clientname}</td>\n                    <td>\n                      <Badge color={statusObj[row.priority]}>{priorityOptions[row.priority]}</Badge>\n                    </td>\n                    <td>{\n                      frequencyOptions[row.recurringid]\n                    }</td>\n                    <td>{\n                      moment(row.nextrecurringstartdate, 'x').format('MMM DD, Y')\n                    }</td>\n                    <td>{\n                      row.assignee &&\n                      row.assignee.map((obj, key) => { return (<Badge color='light-primary' key={key}>{obj.name}</Badge>) })\n                    }</td>\n                    <td>\n                      {\n                        row.reviewer &&\n                        row.reviewer.map((obj, key) => { return (<Badge color='light-primary' key={key}>{obj.name}</Badge>) })\n                      }\n                    </td>\n                    <td>\n                      <div className='column-action d-flex align-items-center'>\n                        <Can I={'write'} a={'recurring-task'}>\n                          <Col lg={4}\n                            onClick={() => openEditModal(row)} >\n                            <Edit\n                              className='cursor-pointer ms-1 mt-0' size={16} />\n                          </Col>\n                        </Can>\n                        <UncontrolledDropdown>\n                          <DropdownToggle tag='div' className='btn btn-sm'>\n                            <MoreVertical size={14} className='cursor-pointer' />\n                          </DropdownToggle>\n                          <DropdownMenu>\n                            <Can I={'delete'} a={'recurring-task'}>\n                              <DropdownItem\n                                tag='a'\n                                href='/'\n                                className='w-100'\n                                onClick={e => {\n                                  e.preventDefault()\n                                  deletefn(row.id)\n                                }}\n                              >\n                                <Trash2 size={14} className='me-50' />\n                                <span className='align-middle'>Delete</span>\n                              </DropdownItem>\n                            </Can>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                    </td>\n                  </tr>)\n                })\n                }\n              </tbody>\n            </Table>\n\n            <CustomPagination />\n\n          </div>\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default TaskList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst TaskList = ({selectedService, tabId}) => {\n  return (\n    <div className='app-user-list'>\n      <Table selectedService={selectedService} tabId={tabId}/>\n    </div>\n  )\n}\n\nexport default TaskList\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      page +\n      (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const { breakLabel, breakClassName, breakLinkClassName, breakHandler, getEventListener } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextRel: 'next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    eventListener: 'onClick',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = (evt) => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = (evt) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  }\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      pageCount,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nconst MySwal = withReactContent(Swal)\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n// ** Reactstrap Imports\nimport { Card, CardBody, Row, Col, Label, FormFeedback, Modal, ModalBody, Button, ModalHeader, Input, CardText, ModalFooter } from 'reactstrap'\nimport { useDispatch } from 'react-redux'\nimport Select from 'react-select'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { updateTask } from '../store/index'\n//import toast from 'react-hot-toast'\nimport classnames from 'classnames'\n\nimport Flatpickr from 'react-flatpickr'\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { Plus, Trash2 } from 'react-feather'\nimport moment from 'moment'\n\nconst priorityOptions = [\n  { id: 1, name: \"Low\" },\n  { id: 2, name: \"Medium\" },\n  { id: 3, name: \"High\" }\n]\n\nconst durationOptions = [\n  { id: 1, name: \"Monthly\" },\n  { id: 2, name: \"Yearly\" },\n  { id: 3, name: \"Quarterly\" },\n  { id: 4, name: \"Daily\" },\n  { id: 5, name: \"Weekly\" }\n]\n\nconst colourStyles = {\n  multiValue: (styles, { }) => {\n\n    return {\n      ...styles,\n      backgroundColor: '#7367f0'\n    }\n  }\n}\nconst RecurringTasks = (props) => {\n  const [block, setBlock] = useState(false)\n  const [formModal, setFormModal] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const dispatch = useDispatch()\n  const { id, editTaskFlag, selTask, selectedService, setEditClose, refreshTaskList } = props\n\n  // ** States\n  const schema = yup.object().shape({\n\n    clientId: yup.string().required(\"Please Select Client\"),\n    updatedBy: yup.string().default(userId),\n    id: yup.string().default(selTask?.id),\n    organizationId: yup.string().default(activeOrgId),\n    serviceId: yup.string().default(id),\n    invoiceFlag: yup.boolean().default(false),\n    recurringId: yup.number().default(1).required(\"Please Select Frequency\"),\n    priority: yup.number().default(1).required(\"Please Select Priority\"),\n    startDate: yup.string().when(\"recurringId\", { is: (recurringId) => (recurringId === 1 || recurringId === 2 || recurringId === 5), then: yup.string().required(\"Please Enter Start Date\") }),\n    endDate: yup.string().when(\"recurringId\", { is: (recurringId) => (recurringId === 1 || recurringId === 2 || recurringId === 5), then: yup.string().required(\"Please Enter End Date\") }),\n    assigneeId: yup.array().min(1, 'Atleast require ine Selection'),\n    reviewerId: yup.array(),\n    invoiceAmount: yup.string().default('0.00').nullable(),\n    quarterlyDates: yup.array().of(\n      yup.object().shape({\n        startDate: yup.string().when(\"duration\", { is: (duration) => parseInt(duration) === 3, then: yup.string().required(\"Please Enter Start Date\") }),\n        endDate: yup.string().when(\"duration\", { is: (duration) => parseInt(duration) === 3, then: yup.string().required(\"Please Enter End Date\") })\n      })\n    )\n\n  })\n\n  const { handleSubmit, formState: { errors }, control, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n  const [userOptions, setUserOptions] = useState([])\n  const [clientOptions, setClientOptions] = useState([])\n\n  const [dateList, setDateList] = useState([])\n  const dayList = [{ id: 0, name: 'Sunday' }, { id: 1, name: 'Monday' }, { id: 2, name: 'Tuesday' }, { id: 3, name: 'Wednesday  ' }, { id: 4, name: 'Thursday' }, { id: 5, name: 'Friday' }, { id: 6, name: 'Saturday' }]\n  useEffect(() => {\n    setDateList(Array(30).fill().map((num, i) => { return { id: i + 1, name: i + 1 } }))\n  }, [])\n\n  const [assigneeUserOptions, setAssigneeUserOptions] = useState([])\n  const [duration, setDuration] = useState(1)\n  const [reviewerUserOptions, setReviewerUserOptions] = useState([])\n  const [assigneeDefaultValue, setAssigneeDefaultValue] = useState()\n  const [reviewerDefaultValue, setReviewerDefaultValue] = useState()\n  const quarterlyDatesList = [\n    {\n      label: \"Quarter (Apr - Jun)\",\n      startDate: null,\n      endDate: null\n    }, {\n      label: \"Quarter (Jul - Sep)\",\n      startDate: null,\n      endDate: null\n    }, {\n      label: \"Quarter (Oct - Dec)\",\n      startDate: null,\n      endDate: null\n    }, {\n      label: \"Quarter (Jan - Mar)\",\n      startDate: null,\n      endDate: null\n    }\n  ]\n  useEffect(() => {\n    setAssigneeUserOptions(userOptions)\n    setReviewerUserOptions(userOptions)\n  }, [userOptions])\n\n  const handleQuarDateChange = (val, fieldName, k) => {\n\n    const res = moment(val[0]).startOf('d').valueOf()\n    setValue(`quarterlyDates[${k}].${fieldName}`, res)\n  }\n\n  const handleDateChange = (val, fieldName, flg) => {\n\n    let res = ''\n    const today = moment().format('D')\n    if (duration === 2) {\n      res = moment(val[0]).startOf('d').valueOf()\n    } else if (duration === 5) {\n      const today_day = moment().format('d')\n      if (parseInt(today_day) >= val) {\n        res = moment().set(val, 'd').add(1, 'w').startOf('d').valueOf()\n      } else {\n        res = moment().set(val, 'd').startOf('d').valueOf()\n      }\n    } else if (duration === 1) {\n      if (parseInt(today) <= val) {\n        res = moment().set('D', val).startOf('d').valueOf()\n      } else {\n        res = moment().set('D', val).add(1, 'M').startOf('d').valueOf()\n      }\n    }\n\n    setValue(`${fieldName}`, res)\n    if (flg) return res\n  }\n\n  const handleAssigneeChange = (e, flag = false) => {\n    setAssigneeDefaultValue(e)\n    let tempArr = []\n    if (!flag) {\n      tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    } else {\n      tempArr = Array.isArray(e) ? e.map(x => x.userid) : []\n    }\n    let reviewerOptions\n    if (tempArr.length > 0) {\n      reviewerOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { reviewerOptions = userOptions }\n\n    setReviewerUserOptions(reviewerOptions)\n    setValue(\"assigneeId\", tempArr)\n  }\n\n  const handleReviwerChange = (e, flag = false) => {\n    setReviewerDefaultValue(e)\n    let tempArr = []\n    if (!flag) {\n      tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    } else {\n      tempArr = Array.isArray(e) ? e.map(x => x.userid) : []\n    }\n    let assigneeOptions\n    if (tempArr.length > 0) {\n      assigneeOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { assigneeOptions = userOptions }\n\n    setAssigneeUserOptions(assigneeOptions)\n    setValue(\"reviewerId\", tempArr)\n  }\n\n\n  const handleDuration = (id) => {\n    setDuration(id)\n    setValue(`startDate`, null)\n    setValue(`endDate`, null)\n  }\n\n  const getClients = () => {\n    setBlock(true)\n    axios.post('/clients/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setBlock(false)\n      setClientOptions(arr.clients)\n    })\n  }\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data\n      setUserOptions(arr.organizationusers)\n      setReviewerUserOptions(arr.organizationusers)\n      setAssigneeUserOptions(arr.organizationusers)\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  useEffect(() => {\n    if (selTask) {\n      setValue('clientId', selTask?.clientid)\n      setValue('id', selTask?.id)\n      setValue('invoiceFlag', selTask?.invoiceflag)\n      setValue('recurringId', parseInt(selTask?.recurringid))\n      setValue('priority', parseInt(selTask?.priority))\n      setValue('invoiceAmount', selTask?.taskprice)\n      setDuration(parseInt(selTask?.recurringid))\n      let stdate, enddate\n      if (parseInt(selTask?.recurringid) === 1) {\n        stdate = moment(selTask?.nextrecurringstartdate, 'x').format('D')\n        enddate = moment(selTask?.nextrecurringenddate, 'x').format('D')\n        setValue('startDate', parseInt(stdate))\n        setValue('endDate', parseInt(enddate))\n      } else if (parseInt(selTask?.recurringid) === 5) {\n        stdate = moment(selTask?.nextrecurringstartdate, 'x').format('d')\n        enddate = moment(selTask?.nextrecurringenddate, 'x').format('d')\n        setValue('startDate', parseInt(stdate))\n        setValue('endDate', parseInt(enddate))\n      } else {\n        stdate = String(selTask?.nextrecurringstartdate / 1000)\n        enddate = String(selTask?.nextrecurringenddate / 1000)\n        setValue('startDate', stdate)\n        setValue('endDate', enddate)\n        let temp = []\n        if (selTask?.quarterlydates?.length > 0) {\n          temp = selTask?.quarterlydates.map((oj) => {\n            const t = JSON.parse(oj)\n            t['startDate'] = String(t?.startDate / 1000)\n            t['endDate'] = String(t?.endDate / 1000)\n            return t\n          }\n          )\n        }\n        setValue('quarterlyDates', temp)\n      }\n\n      handleAssigneeChange(selTask?.assignee, true)\n      handleReviwerChange(selTask?.reviewer, true)\n    }\n  }, [selTask])\n\n  useEffect(async () => {\n    await getOrganizationUsers()\n    await getClients()\n  }, [])\n\n  useEffect(() => {\n    setFormModal(editTaskFlag)\n  }, [editTaskFlag])\n\n  const onSubmit = async data => {\n\n    const deletedids = []\n    selTask?.assignee.forEach((obj) => {\n      if (!data.assigneeId.includes(obj.id)) {\n        deletedids.push(obj.id)\n      }\n    })\n\n    selTask?.reviewer.forEach((obj) => {\n      if (!data.reviewerId.includes(obj.id)) {\n        deletedids.push(obj.id)\n      }\n    })\n    data['deletedIds'] = deletedids\n    setBlock(true)\n    if (duration === 3) {\n      data['quarterlyDates'] = data?.quarterlyDates.map((oj) => {\n        const t = oj\n        t['startDate'] = String(t?.startDate).length === 10 ? (t?.startDate * 1000) : t?.startDate\n        t['endDate'] = String(t?.endDate).length === 10 ? (t?.endDate * 1000) : t?.endDate\n        return t\n      })\n\n    } else {\n      if (data.startDate.length !== 13 && data.startDate.length !== 10) {\n        data.startDate = handleDateChange(parseInt(data.startDate), 'startDate', true)\n        data.endDate = handleDateChange(parseInt(data.endDate), 'endDate', true)\n      }\n    }\n\n    await dispatch(updateTask(data))\n    setFormModal(false)\n    setEditClose(false)\n    refreshTaskList(true)\n    setBlock(false)\n  }\n  const customStyles = {\n    control: base => ({\n      ...base,\n      minHeight: '30px',\n      height: '30px'\n    })\n  }\n  return (\n\n    <Fragment>\n      <Modal scrollable className='modal-dialog-centered modal-xl' isOpen={formModal} toggle={() => setFormModal(!formModal)}>\n        <ModalBody>\n          <Col className='d-flex justify-content-between'>\n            <Col><h5>Add Recurring Task - <span className='text-primary'>{selectedService?.name}</span></h5></Col>\n          </Col>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            {Object.keys(errors).map((obj, k) => {\n              return <FormFeedback key={k}> {obj}</FormFeedback>\n            })}\n            <div className='invoice-add'>\n              <div className='invoice-preview-card'>\n                <UILoader blocking={block} loader={<Loader />}>\n                  <CardBody className='invoice-padding invoice-product-details'>\n\n                    <div className='repeater-wrapper'>\n                      <Row>\n                        <Col className='d-lg-flex border p-2 position-relative rounded flex-wrap' sm='12'>\n                          <Fragment>\n\n                            <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                              <CardText className='col-title mb-md-50 mb-0'>Client</CardText>\n                              <Controller\n                                control={control}\n                                name={`clientId`}\n                                id={`clientId`}\n                                render={({ field, ref }) => (\n                                  <Select\n                                    {...field}\n                                    inputRef={ref}\n                                    className={classnames('react-select', { 'is-invalid': errors?.clientId })}\n                                    classNamePrefix='select'\n                                    options={clientOptions}\n                                    placeholder='Select Client'\n                                    value={clientOptions.find(c => { return c.id === field.value })}\n                                    onChange={val => { field.onChange(val.id) }}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                    styles={colourStyles}\n                                  />\n                                )}\n\n                              />\n                              {errors?.clientId && <FormFeedback className='text-danger'>{errors?.clientId?.message}</FormFeedback>}\n                            </Col>\n\n                            <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-1 col-sm-3'>\n                              <CardText className='col-title mb-md-50 mb-0'>Priority</CardText>\n                              <Controller\n                                control={control}\n                                name={`priority`}\n                                id={`priority`}\n                                render={({ field, ref }) => (\n                                  <Select\n                                    {...field}\n                                    inputRef={ref}\n                                    className={classnames('react-select', { 'is-invalid': errors?.priority })}\n                                    classNamePrefix='select'\n                                    placeholder='Priority'\n                                    options={priorityOptions}\n                                    value={priorityOptions.find(c => { return c.id === field.value })}\n                                    onChange={val => field.onChange(val.id)}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                  />\n                                )}\n\n                              />\n                              {errors?.priority && <FormFeedback className='text-danger'>{errors?.priority?.message}</FormFeedback>}\n                            </Col>\n                            <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-3 col-sm-4'>\n                              <CardText className='col-title mb-md-50 mb-0'>Assignee</CardText>\n                              <Controller\n                                control={control}\n                                name=\"assignee\"\n                                id=\"assignee\"\n                                render={({ field, ref }) => (\n                                  <Select\n                                    inputRef={ref}\n                                    className={classnames('react-select', { 'is-invalid': errors?.assignee })}\n                                    {...field}\n                                    classNamePrefix='select'\n                                    options={assigneeUserOptions}\n                                    isMulti={true}\n                                    value={assigneeDefaultValue} // set selected values\n                                    placeholder='Select Assignee'\n                                    onChange={(e) => { handleAssigneeChange(e) }}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                    styles={colourStyles}\n                                  />\n                                )}\n\n                              />\n                              {errors?.assignee && <FormFeedback className='text-danger'>{errors?.assignee?.message}</FormFeedback>}\n                            </Col>\n                            <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-3 col-sm-4'>\n                              <CardText className='col-title mb-md-50 mb-0'>Reviewer</CardText>\n                              <Controller\n                                control={control}\n                                name=\"reviewer\"\n                                id=\"reviewer\"\n                                render={({ field, ref }) => (\n                                  <Select\n                                    inputRef={ref}\n                                    className={classnames('react-select', { 'is-invalid': errors?.reviewer })}\n                                    {...field}\n                                    classNamePrefix='select'\n                                    options={reviewerUserOptions}\n                                    isMulti={true}\n                                    value={reviewerDefaultValue} // set selected values\n                                    placeholder='Select Reviewer'\n                                    onChange={(e) => { handleReviwerChange(e) }}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                    styles={colourStyles}\n                                  />\n                                )}\n                              />\n                              {errors?.reviewer && <FormFeedback className='text-danger'>{errors?.reviewer?.message}</FormFeedback>}\n                            </Col>\n                            <Col>\n                              <CardText className='col-title mb-md-50 mb-0'>Recurring Invoice</CardText>\n                              <div className='form-switch form-check-primary'>\n                                <Controller\n                                  control={control}\n                                  name={`invoiceFlag`}\n                                  id={`invoiceFlag`}\n                                  render={({ field }) => (\n                                    <Input\n                                      defaultChecked={selTask?.invoiceflag}\n                                      type='switch'\n                                      {...field}\n                                      name={`invoiceFlag`} />\n                                  )}\n                                />\n                              </div>\n                            </Col>\n                            <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-1 col-sm-2'>\n                              <CardText className='col-title mb-md-50 mb-0'>Amount</CardText>\n                              <Controller\n                                control={control}\n                                name={`invoiceAmount`}\n                                id={`invoiceAmount`}\n                                render={({ field, value }) => (\n                                  <Input\n                                    placeholder='Amount'\n                                    value={value}\n                                    type='text'\n                                    {...field}\n                                  />\n                                )}\n                              />\n                              {errors?.invoiceAmount && <p className='text-danger'>{errors?.invoiceAmount?.message}</p>}\n                            </Col>\n                            <Col className='mt-1 d-flex' md={12}>\n                              <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                <Controller\n                                  control={control}\n                                  name={`recurringId`}\n                                  id={`recurringId`}\n                                  render={({ field, ref }) => (\n                                    <Select\n                                      {...field}\n                                      inputRef={ref}\n                                      className={classnames('react-select', { 'is-invalid': errors?.recurringId })}\n                                      classNamePrefix='select'\n                                      options={durationOptions}\n                                      placeholder='Select Frequency'\n                                      value={durationOptions.find(c => { return c.id === field.value })}\n                                      onChange={val => { field.onChange(val.id); handleDuration(val.id) }}\n                                      getOptionLabel={(option) => option.name}\n                                      getOptionValue={(option) => option.id}\n                                      styles={customStyles}\n                                    />\n                                  )}\n\n                                />\n                                {errors?.recurringId && <FormFeedback className='text-danger'>{errors?.recurringId?.message}</FormFeedback>}\n                              </Col>\n\n                              {\n                                duration === 1 &&\n                                <Fragment>\n                                  <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                    <Controller\n                                      control={control}\n                                      name={`startDate`}\n                                      id={`startDate`}\n                                      render={({ field, ref }) => (\n                                        <Select\n                                          {...field}\n                                          inputRef={ref}\n                                          className={classnames('react-select', { 'is-invalid': errors?.startDate })}\n                                          classNamePrefix='select'\n                                          options={dateList}\n                                          placeholder='Select Date'\n                                          value={dateList.find(c => { return c.id === field.value })}\n                                          onChange={val => { field.onChange(val.id); handleDateChange(val.id, 'startDate') }}\n                                          getOptionLabel={(option) => option.name}\n                                          getOptionValue={(option) => option.id}\n                                          styles={customStyles}\n                                        />\n                                      )}\n\n                                    />\n                                    {errors?.startDate && <FormFeedback className='text-danger'>{errors?.startDate?.message}</FormFeedback>}\n                                  </Col>\n\n                                  <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                    <Controller\n                                      control={control}\n                                      name={`endDate`}\n                                      id={`endDate`}\n                                      render={({ field, ref }) => (\n                                        <Select\n                                          inputRef={ref}\n                                          className={classnames('react-select', { 'is-invalid': errors?.endDate })}\n                                          {...field}\n                                          classNamePrefix='select'\n                                          placeholder='Select Date'\n                                          options={dateList}\n                                          value={dateList.find(c => { return c.id === field.value })}\n                                          onChange={val => { field.onChange(val.id); handleDateChange(val.id, 'endDate') }}\n                                          getOptionLabel={(option) => option.name}\n                                          getOptionValue={(option) => option.id}\n                                        />\n                                      )}\n\n                                    />\n                                    {errors?.endDate && <FormFeedback className='text-danger'>{errors?.endDate?.message}</FormFeedback>}\n                                  </Col>\n                                </Fragment>\n                              }\n                              {\n                                duration === 5 &&\n                                <Fragment>\n                                  <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                    <Controller\n                                      control={control}\n                                      name={`startDate`}\n                                      id={`startDate`}\n                                      render={({ field, ref }) => (\n                                        <Select\n                                          {...field}\n                                          inputRef={ref}\n                                          className={classnames('react-select', { 'is-invalid': errors?.startDate })}\n                                          classNamePrefix='select'\n                                          options={dayList}\n                                          placeholder='Select Date'\n                                          value={dayList.find(c => { return c.id === field.value })}\n                                          onChange={val => { field.onChange(val.id); handleDateChange(val.id, 'startDate') }}\n                                          getOptionLabel={(option) => option.name}\n                                          getOptionValue={(option) => option.id}\n                                        />\n                                      )}\n\n                                    />\n                                    {errors?.startDate && <FormFeedback className='text-danger'>{errors?.startDate?.message}</FormFeedback>}\n                                  </Col>\n                                  <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                    <Controller\n                                      control={control}\n                                      name={`endDate`}\n                                      id={`endDate`}\n                                      render={({ field, ref }) => (\n                                        <Select\n                                          {...field}\n                                          inputRef={ref}\n                                          className={classnames('react-select', { 'is-invalid': errors?.endDate })}\n                                          classNamePrefix='select'\n                                          placeholder='Select Date'\n                                          options={dayList}\n                                          value={dayList.find(c => { return c.id === field.value })}\n                                          onChange={val => { field.onChange(val.id); handleDateChange(val.id, 'endDate') }}\n                                          getOptionLabel={(option) => option.name}\n                                          getOptionValue={(option) => option.id}\n                                        />\n                                      )}\n\n                                    />\n                                    {errors?.endDate && <FormFeedback className='text-danger'>{errors?.endDate?.message}</FormFeedback>}\n                                  </Col>\n                                </Fragment>\n                              }\n                              {\n                                duration === 2 &&\n                                <Fragment>\n                                  <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                    <Controller\n                                      name={`startDate`}\n                                      id={`startDate`}\n                                      control={control}\n                                      rules={{ required: true }}\n                                      options={{ dateFormat: \"d-m-Y\" }}\n                                      render={({ field }) => (\n                                        <Flatpickr\n                                          min={moment().add(1, 'D').format('Y-m-d')}\n                                          value={field.value}\n                                          placeholder='Select Date'\n                                          onChange={(date, dateStr) => { field.onChange(dateStr); handleDateChange(date, 'startDate') }}\n                                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.startDate })} />\n                                      )}\n                                    />\n                                    {errors?.startDate && <FormFeedback className='text-danger'>{errors?.startDate?.message}</FormFeedback>}\n                                  </Col>\n\n                                  <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-3'>\n                                    <Controller\n                                      onChange={date => setDate(date)}\n                                      name={`endDate`}\n                                      id={`endDate`}\n                                      control={control}\n                                      rules={{ required: true }}\n                                      options={{ dateFormat: \"d-m-Y\" }}\n                                      render={({ field }) => (\n                                        <Flatpickr\n                                          min={moment().add(1, 'D').format('Y-m-d')}\n                                          value={field.value}\n                                          placeholder='Select Date'\n                                          onChange={(date, dateStr) => { field.onChange(dateStr); handleDateChange(date, 'endDate') }}\n                                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.endDate })} />\n                                      )}\n                                    />\n\n                                    {errors?.endDate && <FormFeedback className='text-danger'>{errors?.endDate?.message}</FormFeedback>}\n                                  </Col>\n\n                                </Fragment>\n                              }{\n                                duration === 3 &&\n                                <Col md={6} >\n                                  {\n                                    quarterlyDatesList.map((item, k) => {\n                                      return (\n                                        <Col className='d-flex mb-1' key={k}>\n                                          <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-4 col-sm-3'>\n                                            <Controller\n                                              name={`quarterlyDates[${k}].startDate`}\n                                              id={`quarterlyDates[${k}].startDate`}\n                                              control={control}\n                                              rules={{ required: true }}\n                                              options={{ dateFormat: \"d-m-Y\" }}\n                                              render={({ field }) => (\n                                                <Flatpickr\n                                                  value={field.value}\n                                                  placeholder='Select Date'\n                                                  onChange={(date, dateStr) => { field.onChange(dateStr); handleQuarDateChange(date, 'startDate', k) }}\n                                                  options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                                                  className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.startDate })} />\n                                              )}\n                                            />\n                                            {errors?.startDate && <FormFeedback className='text-danger'>{errors?.startDate?.message}</FormFeedback>}\n                                          </Col>\n\n                                          <Col className='me-50 mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-4 col-sm-3'>\n                                            <Controller\n                                              onChange={date => setDate(date)}\n                                              name={`quarterlyDates[${k}].endDate`}\n                                              id={`quarterlyDates[${k}].endDate`}\n                                              control={control}\n                                              rules={{ required: true }}\n                                              options={{ dateFormat: \"d-m-Y\" }}\n                                              render={({ field }) => (\n                                                <Flatpickr\n                                                  value={field.value}\n                                                  placeholder='Select Date'\n                                                  onChange={(date, dateStr) => { field.onChange(dateStr); handleQuarDateChange(date, 'endDate', k) }}\n                                                  options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                                                  className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.endDate })} />\n                                              )}\n                                            />\n\n                                            {errors?.endDate && <FormFeedback className='text-danger'>{errors?.endDate?.message}</FormFeedback>}\n                                          </Col>\n                                          <Col>{item.label}</Col>\n                                        </Col>\n                                      )\n                                    })\n                                  }\n                                </Col>\n                              }\n\n                            </Col>\n                          </Fragment>\n                        </Col>\n                      </Row>\n                    </div>\n                  </CardBody>\n                </UILoader>\n              </div>\n            </div>\n            <ModalFooter>\n              <Col className='d-flex justify-content-between'>\n                <Col></Col>\n                <Col className='d-flex justify-content-between'>\n                  <Col>\n                  </Col>\n                  <Col>\n                    <Button color='warning' onClick={() => { setFormModal(false); setEditClose(false); refreshTaskList(false) }}>Cancel</Button>\n                    <Button color='primary' className='ms-50' type='submit'>Submit</Button>\n                  </Col>\n                </Col>\n              </Col>\n            </ModalFooter>\n          </form >\n        </ModalBody>\n      </Modal>\n    </Fragment>\n\n  )\n}\n\nexport default RecurringTasks\n"],"sourceRoot":""}