{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBase.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBase","useState","data","setData","searchTerm","setSearchTerm","useEffect","axios","get","then","res","Content","item","className","md","sm","to","category","src","img","alt","top","title","desc","id","map","titleCondition","toLowerCase","includes","descCondition","length","BreadCrumbs","props","tag","index","Wrapper","link","Link","Fragment","isLastItem","active","classnames","color","size","end","FaqFilter","handleFilter","style","backgroundImage","require","default","onSubmit","e","preventDefault","value","onChange","target","placeholder"],"mappings":"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","file":"static/js/61.a57f2c24.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardImg } from 'reactstrap'\n\n// ** Styles\nimport '@styles/base/pages/page-knowledge-base.scss'\n\nconst KnowledgeBase = () => {\n  // ** States\n  const [data, setData] = useState(null),\n    [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    axios.get('/faq/data/knowledge_base').then(res => setData(res.data))\n  }, [])\n\n  const Content = ({ item }) => (\n    <Col className='kb-search-content' key={item.id} md='4' sm='6'>\n      <Card>\n        <Link to={`/pages/knowledge-base/${item.category}`}>\n          <CardImg src={item.img} alt='knowledge-base-image' top />\n          <CardBody className='text-center'>\n            <h4>{item.title}</h4>\n            <p className='text-body mt-1 mb-0'>{item.desc}</p>\n          </CardBody>\n        </Link>\n      </Card>\n    </Col>\n  )\n\n  const renderContent = () => {\n    return data.map(item => {\n      const titleCondition = item.title.toLowerCase().includes(searchTerm.toLowerCase()),\n        descCondition = item.desc.toLowerCase().includes(searchTerm.toLowerCase())\n\n      if (searchTerm.length < 1) {\n        return <Content key={item.id} item={item} />\n      } else if (titleCondition || descCondition) {\n        return <Content key={item.id} item={item} />\n      } else {\n        return null\n      }\n    })\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Knowledge Base' data={[{ title: 'Pages' }, { title: 'Knowledge Base' }]} />\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      {data !== null ? (\n        <div id='knowledge-base-content'>\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBase\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\nimport { Search } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\n\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\n  const onChange = e => {\n    if (handleFilter) {\n      handleFilter(e)\n    } else {\n      setSearchTerm(e.target.value)\n    }\n  }\n\n  return (\n    <div id='knowledge-base-search'>\n      <Card\n        className='knowledge-base-bg'\n        style={{\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\n        }}\n      >\n        <CardBody className='text-center'>\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\n          <CardText className='mb-2'>\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\n          </CardText>\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\n            <InputGroup className='input-group-merge'>\n              <InputGroupText>\n                <Search size={14} />\n              </InputGroupText>\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\n            </InputGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default FaqFilter\n"],"sourceRoot":""}