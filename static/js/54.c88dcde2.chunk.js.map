{"version":3,"sources":["views/apps/profile/Tabs.js","views/apps/profile/UserInfoCard.js","views/apps/profile/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["UserTabs","search","useLocation","searchParams","URLSearchParams","useEffect","activeOrgId","activeOrganizationid","userId","orgUserId","UserInfoCard","selectedUser","useState","avatar","defaultAvatar","setAvatar","block","setBlock","Loader","blocking","loader","className","name","fileid","src","referrerPolicy","alt","height","width","tag","Label","size","color","type","onChange","e","reader","FileReader","files","target","onload","result","readAsDataURL","file","formData","FormData","append","axios","post","then","toast","success","position","catch","err","console","log","uploadFiles","hidden","accept","email","rolename","departmentname","designationname","outline","Link","to","TeamView","store","useSelector","state","profile","dispatch","useDispatch","uploadCallBack","setUploadCallBack","id","useParams","getUser","active","setActive","tabId","get","undefined","xl","lg","xs","order","md","toggleTab","tab","UILoader","props","children","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/54.c88dcde2.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** User Components\nimport { useLocation } from 'react-router-dom'\nconst UserTabs = ({ }) => {\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n\n  useEffect(() => {\n\n\n  }, [searchParams])\n\n  return (\n    <Fragment>\n\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { Fragment, useState } from 'react'\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Label, Input } from 'reactstrap'\n// ** Custom Components\nimport axios from '@src/configs/axios/axiosConfig'\nimport defaultAvatar from '@src/assets/images/avatars/avatar-blank.png'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport toast from 'react-hot-toast'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\nconst UserInfoCard = ({ selectedUser }) => {\n\n  // ** States\n  const [avatar, setAvatar] = useState(selectedUser.avatar ? selectedUser.avatar : defaultAvatar)\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const uploadFiles = (file) => {\n\n    const formData = new FormData()\n    formData.append(`files[0]`, file)\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n    setBlock(true)\n    axios.post('/google/profileUploads', formData).then(() => {\n      toast.success('User Profile Picture Uploaded Successfully', { position: \"bottom-right\" })\n      setBlock(false)\n    }).catch((err) => { console.log(err) })\n  }\n\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setAvatar(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n\n    uploadFiles(e.target.files[0])\n\n  }\n\n  return (\n    <Fragment>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody>\n            <div className='user-avatar-section'>\n              <div className='d-flex align-items-center flex-column'>\n                <div className='d-flex flex-column align-items-center text-center'>\n                  <div className='user-info'>\n                    <h4>{selectedUser !== null ? selectedUser.name : 'Eleanor Aguilar'}</h4>\n                  </div>\n                  <div className='me-25 mb-1'>\n                    {(selectedUser.fileid !== null) ? <img className='rounded me-50' src={`https://drive.google.com/thumbnail?id=${selectedUser.fileid}&authuser=0`} referrerPolicy=\"no-referrer\" alt='Organization image' height='100' width='100' /> : <img className='rounded me-50' src={avatar} alt='Generic placeholder image' height='100' width='100' />\n                    }\n                  </div>\n                  <Button tag={Label} className='mb-75 me-75' size='sm' color='primary'>\n                    Upload\n                    <Input type='file' onChange={onChange} hidden accept='image/*' />\n                  </Button>\n                </div>\n              </div>\n            </div>\n            <h4 className='fw-bolder border-bottom pb-50 mb-1'>Details</h4>\n            <div className='info-container'>\n              {selectedUser !== null ? (\n                <ul className='list-unstyled'>\n                  <li className='mb-75'>\n                    <span className='fw-bolder me-25'>Email:</span>\n                    <span>{selectedUser.email}</span>\n                  </li>\n                  <li className='mb-75'>\n                    <span className='fw-bolder me-25'>Role:</span>\n                    <span className='text-capitalize'>{selectedUser.rolename}</span>\n                  </li>\n                  <li className='mb-75'>\n                    <span className='fw-bolder me-25'>Department:</span>\n                    <span>{selectedUser.departmentname}</span>\n                  </li>\n                  <li className='mb-75'>\n                    <span className='fw-bolder me-25'>Designation:</span>\n                    <span>{selectedUser.designationname}</span>\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n            <div className='d-flex justify-content-center pt-2'>\n              <Button className='ms-1' color='danger' outline tag={Link} to={`/team/list`}>\n                Cancel\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useParams, Link, useLocation } from 'react-router-dom'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Store & Actions\nimport { getUser } from './store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst TeamView = () => {\n  // ** Store Vars\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n  const store = useSelector(state => state.profile)\n  const dispatch = useDispatch()\n  const [uploadCallBack, setUploadCallBack] = useState(false)\n  const { id } = useParams()\n  useEffect(async () => {\n    setBlock(true)\n    await setUploadCallBack(uploadCallBack)\n    await dispatch(getUser(id))\n    setBlock(false)\n  }, [dispatch, uploadCallBack])\n\n  const [active, setActive] = useState('jobinfo')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  useEffect(() => {\n    const tabId = searchParams.get('tabId')\n    if (tabId) {\n      setActive(tabId)\n    }\n  }, [searchParams])\n\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\n    <UILoader blocking={block} loader={<Loader />}>\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='3' lg='3' xs={{ order: 1 }} md={{ order: 0, size: 3 }}>\n            <UserInfoCard selectedUser={store.selectedUser} />\n          </Col>\n          <Col xl='9' lg='9' xs={{ order: 0 }} md={{ order: 1, size: 9 }}>\n            <UserTabs active={active} toggleTab={toggleTab} selectedUser={store.selectedUser} uploadCallBack={uploadCallBack} />\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <UILoader blocking={block} loader={<Loader />}>\n      <Alert color='danger'>\n        <h4 className='alert-heading'>User not found</h4>\n        <div className='alert-body'>\n          User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\n        </div>\n      </Alert>\n    </UILoader>\n  )\n}\nexport default TeamView\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}