{"version":3,"sources":["views/pages/account-settings/RolesAndDesignation/Permissions.js","views/pages/account-settings/RolesAndDesignation/Roles.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["Permissions","roleId","useState","modules","setModules","permissions","setPermissions","useEffect","axios","post","then","res","data","rolepermission","split","catch","xs","className","responsive","length","map","module","index","name","type","id","slug","value","defaultChecked","indexOf","disabled","for","activeOrgId","activeOrganizationid","userId","orgUserId","Roles","MySwal","withReactContent","Swal","show","setShow","setData","modalType","setModalType","store","useSelector","state","role","dispatch","useDispatch","permissionArr","setPermissionArr","formModal","setFormModal","selectedRoleId","setselectedRoleId","block","setBlock","Loader","getRolePermissions","schema","yup","shape","organizationId","default","required","description","nullable","panel","isDefault","isAdminRole","updatedBy","createdBy","permissionsArr","min","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","reset","setValue","onReset","getData","onSubmit","updateRole","obj","toString","updateRolePermissions","eventname","addRole","payload","addRolePermissions","toast","success","position","handleCheckbox","e","mod","trans","permissions_array","target","checked","splice","renderPermissions","transactions","onChange","editRole","Can","I","a","color","size","onClick","item","status","noofusers","isdefault","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","deleteRole","dismiss","DismissReason","cancel","isOpen","toggle","onClosed","blocking","loader","tag","render","field","placeholder","invalid","UILoader","props","children","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/84.32269701.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\nconst Permissions = ({ roleId }) => {\n\n  const [modules, setModules] = useState([])\n  const [permissions, setPermissions] = useState([])\n\n  const getModules = () => {\n    axios.post('/modules/list').\n      then((res) => {\n        setModules(res.data.modules)\n      }).catch(() => { })\n  }\n\n  const getRolePermissions = () => {\n\n    if (roleId !== null) {\n      axios.post('/rolepermissions/list', { roleId }).\n        then((res) => {\n          setPermissions(res.data.rolepermission.permissions.split(','))\n        }).catch(() => { })\n    }\n  }\n\n  useEffect(() => {\n    if (roleId !== null) {\n      setModules([])\n      getRolePermissions()\n      getModules()\n    }\n  }, [roleId])\n\n  return (\n    <Fragment>\n\n      <Row >\n        <Col xs={12}>\n          <Table className='table-flush-spacing' responsive>\n            <tbody>{\n              permissions.length > 0 &&\n              modules.map((module, index) => {\n                return (\n                  <tr key={index}>\n                    <td className='text-nowrap fw-bolder'>{module.name}</td>\n                    <td>\n                      <div className='d-flex'>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`read-${module.slug}`} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled />\n                          <Label className='form-check-label' for={`read-${module.slug}`}>\n                            Read\n                          </Label>\n                        </div>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`write-${module.slug}`} value={`${module.slug}-write`} defaultChecked={permissions.indexOf(`${module.slug}-write`) > -1} disabled />\n                          <Label className='form-check-label' for={`write-${module.slug}`}>\n                            Write\n                          </Label>\n                        </div>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`delete-${module.slug}`} value={`${module.slug}-delete`} defaultChecked={permissions.indexOf(`${module.slug}-delete`) > -1} disabled />\n                          <Label className='form-check-label' for={`delete-${module.slug}`}>\n                            Delete\n                          </Label>\n                        </div>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`import-${module.slug}`} value={`${module.slug}-import`} defaultChecked={permissions.indexOf(`${module.slug}-import`) > -1} disabled />\n                          <Label className='form-check-label' for={`import-${module.slug}`}>\n                            import\n                          </Label>\n                        </div>\n                        <div className='form-check'>\n                          <Input type='checkbox' id={`export-${module.slug}`} value={`${module.slug}-export`} defaultChecked={permissions.indexOf(`${module.slug}-export`) > -1} disabled />\n                          <Label className='form-check-label' for={`export-${module.slug}`}>\n                            Export\n                          </Label>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                )\n              })\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Permissions","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Can } from '@src/utility/context/Can.js'\nimport {\n    Row,\n    Col,\n    Card,\n    Label,\n    Input,\n    Table,\n    Modal,\n    Button,\n    ModalBody,\n    ModalHeader,\n    FormFeedback,\n    Badge,\n    CardBody,\n    CardHeader\n} from 'reactstrap'\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { Edit, Eye, Plus, Trash2 } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { getData, addRole, updateRole, deleteRole, addRolePermissions, updateRolePermissions } from './store/roles' //deleteRole\n// ** FAQ Illustrations\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport toast from 'react-hot-toast'\nimport Permissions from './Permissions'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\nconst Roles = ({ }) => {\n    // ** States\n    const MySwal = withReactContent(Swal)\n    const [show, setShow] = useState(false)\n    const [data, setData] = useState([])\n    const [modalType, setModalType] = useState('Add New')\n    const store = useSelector(state => state.role)\n    const dispatch = useDispatch()\n    const [modules, setModules] = useState([])\n    const [permissionArr, setPermissionArr] = useState([])\n    const [formModal, setFormModal] = useState(false)\n    const [selectedRoleId, setselectedRoleId] = useState(null)\n    const [permissions, setPermissions] = useState([])\n    const [block, setBlock] = useState(false)\n\n    const Loader = () => {\n        return (\n            <Fragment>\n                <Spinner />\n            </Fragment>\n        )\n    }\n    const getModules = () => {\n        axios.post('/modules/list').\n            then((res) => {\n                setModules(res.data.modules)\n            }).catch(() => { })\n    }\n\n    const getRolePermissions = async (roleId) => {\n        const res = await axios.post('/rolepermissions/list', { roleId })\n        await setPermissions(res.data.rolepermission.permissions.split(','))\n        await setPermissionArr(res.data.rolepermission.permissions.split(','))\n\n    }\n\n    // ** Hooks\n    const schema = yup.object().shape({\n        organizationId: yup.string().default(activeOrgId),\n        name: yup.string().required('Please Enter Role'),\n        description: yup.string().nullable(),\n        panel: yup.string().default('client'),\n        role: yup.string().default('client'),\n        isDefault: yup.number().default(3),\n        isAdminRole: yup.boolean().default(false),\n        updatedBy: yup.string().default(userId),\n        createdBy: yup.string().default(userId),\n        permissionsArr: yup.array().min('1')\n    })\n\n    const { handleSubmit, formState: { errors }, control, reset, setValue } = useForm({\n        resolver: yupResolver(schema),\n        defaultValues: schema.cast()\n    })\n\n    const onReset = async () => {\n        setShow(false)\n        await dispatch(getData())\n        reset({ id: '', name: '', description: '' })\n    }\n\n    const onSubmit = async data => {\n        setBlock(true)\n        let eventname\n        if (modalType === 'Edit') {\n            await dispatch(updateRole(data))\n\n            const obj = {\n                organizationId: activeOrgId,\n                roleId: data.id,\n                permissions: permissionArr.toString(),\n                updatedBy: userId\n            }\n\n            await dispatch(updateRolePermissions(obj))\n            eventname = 'Updated'\n        } else {\n            const res = await dispatch(addRole(data))\n            const obj = {\n                organizationId: activeOrgId,\n                roleId: res?.payload?.id,\n                permissions: permissionArr.toString(),\n                createdBy: userId\n            }\n            await dispatch(addRolePermissions(obj))\n            eventname = 'Added'\n        }\n        setBlock(false)\n        toast.success(`Role ${eventname} Successfully`, { position: 'bottom-right' })\n        onReset()\n    }\n\n    const handleCheckbox = (e, mod, trans) => {\n        const slug = `${mod}-${trans}`\n        let permissions_array = [...permissionArr]\n        if (e.target.checked) {\n            permissions_array = [...permissionArr, slug]\n        } else {\n            permissions_array.splice(permissionArr.indexOf(slug), 1)\n        }\n        setPermissionArr(permissions_array)\n        setValue('permissionsArr', permissions_array)\n    }\n    useEffect(() => {\n        setData(store.data)\n    }, [store.data])\n\n\n    const renderPermissions = () => {\n\n        return (\n            modules.map((module, index) => {\n                const transactions = module.transactions.split(',')\n                return (\n                    <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{module.name}</td>\n                        <td>\n                            <div className='d-flex'>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`read-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'read')} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled={transactions.indexOf('read') === -1} />\n                                    <Label className='form-check-label' for={`read-${module.slug}`}>\n                                        Read\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`read-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'read')} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled={transactions.indexOf('read') === -1} />\n                                    <Label className='form-check-label' for={`read-${module.slug}`}>\n                                        Read\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`write-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'write')} value={`${module.slug}-write`} defaultChecked={permissions.indexOf(`${module.slug}-write`) > -1} disabled={transactions.indexOf('write') === -1} />\n                                    <Label className='form-check-label' for={`write-${module.slug}`}>\n                                        Write\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`delete-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'delete')} value={`${module.slug}-delete`} defaultChecked={permissions.indexOf(`${module.slug}-delete`) > -1} disabled={transactions.indexOf('delete') === -1} />\n                                    <Label className='form-check-label' for={`delete-${module.slug}`}>\n                                        Delete\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`import-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'import')} value={`${module.slug}-import`} defaultChecked={permissions.indexOf(`${module.slug}-import`) > -1} disabled={transactions.indexOf('import') === -1} />\n                                    <Label className='form-check-label' for={`import-${module.slug}`}>\n                                        import\n                                    </Label>\n                                </div>\n                                <div className='form-check'>\n                                    <Input type='checkbox' id={`export-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'export')} value={`${module.slug}-export`} defaultChecked={permissions.indexOf(`${module.slug}-export`) > -1} disabled={transactions.indexOf('export') === -1} />\n                                    <Label className='form-check-label' for={`export-${module.slug}`}>\n                                        Export\n                                    </Label>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                )\n            })\n        )\n    }\n\n    const showPermission = (role) => {\n        setselectedRoleId(role.id)\n        setFormModal(true)\n    }\n\n    const editRole = async (role) => {\n        reset(role)\n\n        await setselectedRoleId(role.id)\n        await getRolePermissions(role.id)\n        await setModalType('Edit')\n        setShow(true)\n        renderPermissions()\n    }\n\n    const deletefn = (id) => {\n        return MySwal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ms-1'\n            },\n            buttonsStyling: false\n        }).then(async (result) => {\n            if (result.value) {\n                await dispatch(deleteRole(id))\n                MySwal.fire({\n                    icon: 'success',\n                    title: 'Deleted!',\n                    text: 'Department has been deleted.',\n                    customClass: {\n                        confirmButton: 'btn btn-success'\n                    }\n                })\n                await dispatch(getData())\n                return true\n            } else if (result.dismiss === MySwal.DismissReason.cancel) {\n                return false\n            }\n        })\n    }\n\n    const handleModalClosed = () => {\n        setModalType('Add New')\n    }\n\n    useEffect(async () => {\n        await dispatch(getData())\n        getModules()\n    }, [])\n\n    return (\n        <Fragment>\n            <Card>\n                <CardBody>\n                    <Row>\n                        <CardHeader className={'justify-content-between align-items-center p-1'}>\n                            <Col>\n                                <h5>Roles</h5>\n                            </Col>\n\n                            <Col className={'d-flex justify-content-end'}>\n                                <Can I={'write'} a={'role'}>\n                                    <Button color='primary' size='sm' onClick={() => { setShow(true) }}> <Plus size={15} />Add</Button>\n                                </Can>\n                            </Col>\n                        </CardHeader>\n                        <Table className='table table-bordered table-hover'>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Status</th>\n                                    <th>No of Users</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.map((item, index) => {\n                                    return (\n                                        <tr key={index}>\n\n                                            <td className='fw-bolder'>{item.name}</td>                                            \n                                            <td>\n                                                {item.status === 1 ? (\n                                                    <Badge color='light-success' className='ms-50'>\n                                                        Active\n                                                    </Badge>\n                                                ) : (\n                                                    <Badge color='light-danger' className='ms-50'>\n                                                        InActive\n                                                    </Badge>\n                                                )}\n                                            </td>\n                                            <td>{item.noofusers}</td>\n                                            <td>\n                                                <Can I={'write'} a={'role'}>\n                                                    <div className='d-flex' >\n                                                        <Eye size={15} className='me-1' onClick={() => { showPermission(item) }} />\n                                                        {!item.isdefault &&\n                                                            <div className='d-flex'>\n                                                                <Edit size={15} className='me-1' onClick={() => { editRole(item) }} />\n                                                                <Trash2 size={15} onClick={() => deletefn(item.id)} />\n                                                            </div>\n                                                        }\n                                                    </div>\n                                                </Can>\n                                            </td>\n\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </Table>\n                    </Row>\n                </CardBody>\n            </Card>\n            <Modal\n                isOpen={formModal}\n                toggle={() => setFormModal(!formModal)}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={() => setFormModal(!formModal)}>\n                    Role Permissions\n                </ModalHeader>\n                <ModalBody>\n                    <Permissions roleId={selectedRoleId} />\n                </ModalBody>\n            </Modal>\n            <Modal\n                isOpen={show}\n                onClosed={handleModalClosed}\n                toggle={() => setShow(!show)}\n                className='modal-dialog-centered modal-lg'\n            >\n                <UILoader blocking={block} loader={<Loader />}>\n                    <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\n                    <ModalBody className='px-2'>\n                        <div className='text-center mb-1'>\n                            <h1>{modalType} Role</h1>\n                        </div>\n                        <Row tag='form' onSubmit={handleSubmit(onSubmit)}>\n                            <Col xs={12}>\n                                <Label className='form-label' for='name'>\n                                    Role Name\n                                </Label>\n                                <Controller\n                                    name='name'\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Input {...field} id='name' placeholder='Enter Role name' invalid={errors.name && true} />\n                                    )}\n                                />\n                                {errors.name && <FormFeedback>Please enter a valid role name</FormFeedback>}\n                            </Col>                            \n                            <Col xs={12} className='mt-1'>\n                                <Label className='form-label' for='description'>\n                                    Description\n                                </Label>\n                                <Controller\n                                    name='description'\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Input {...field} id='description' placeholder='Enter Description' invalid={errors.description && true} />\n                                    )}\n                                />\n                            </Col>\n                            <Col xs={12}>\n                                <h4 className='mt-2 pt-50'>Role Permissions</h4>\n                                <Table className='table-flush-spacing' responsive>\n                                    <tbody>{\n                                        renderPermissions()\n                                    }\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col className='text-center mt-2' xs={12}>\n                                <Button type='submit' color='primary' className='me-1'>\n                                    Submit\n                                </Button>\n                                <Button type='button' color='warning' onClick={onReset}>\n                                    Cancel\n                                </Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </UILoader>\n            </Modal>\n        </Fragment>\n    )\n}\n\nexport default Roles\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}