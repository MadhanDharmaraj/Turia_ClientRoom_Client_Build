{"version":3,"sources":["views/apps/client/list/columns.js","views/apps/client/list/Table.js","views/apps/client/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","assets/images/banner/banner.png"],"names":["renderClient","name","initials","className","color","content","charAt","toUpperCase","statusObj","statusArr","stringTrimfn","text","length","substr","columns","minWidth","sortable","sortField","selector","row","cell","to","onClick","localStorage","setItem","id","store","dispatch","getClient","contactpersonname","email","maxWidth","entityname","contactnumber","status","pill","activeOrg","withReactContent","Swal","activeOrganization","userId","orgUserId","UsersList","useDispatch","useSelector","state","client","useState","block","setBlock","Loader","navigate","useNavigate","sort","setSort","searchTerm","setSearchTerm","sortColumn","useEffect","getItem","getData","q","assignflag","assignuserflag","parseInt","rolelevel","handleFaqFilter","e","target","value","handleSort","column","sortDirection","setSortColumn","currentStatus","clientid","style","backgroundImage","require","default","size","onChange","placeholder","blocking","loader","noHeader","subHeader","sortServer","responsive","highlightOnHover","onSort","sortIcon","data","subHeaderComponent","ClientList","Table","UILoader","props","children","tag","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/40.f09aa47e.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\nimport { getClient } from '../store'\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = name => {\n  return (\n    <Avatar\n      initials\n      className='me-1'\n      color={'light-primary'}\n      content={name ? name?.charAt(0).toUpperCase() : ''}\n    />\n  )\n}\n\nconst statusObj = [\n  '',\n  'light-primary',\n  'light-warning'\n]\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"Inactive\"\n\n]\n\nconst stringTrimfn = (text) => {\n  return text.length >= 20 ? `${text.substr(0, 20)}...` : text\n}\n\nexport const columns = [\n  {\n    name: 'Business Name',\n    minWidth: '240px',\n    sortable: true,\n    sortField: 'name',\n    selector: row => row.name,\n    cell: row => (row.name !== '' ? <div className='d-flex justify-content-left align-items-center'>\n      {renderClient(row.name)}\n      <div className='d-flex flex-column'>\n        <Link\n          to={`/master`}\n          className='user_name text-truncate text-body'\n          onClick={() => { localStorage.setItem('clientId', row.id); store.dispatch(getClient(row.id)) }}\n        >\n          <span className='fw-bolder'>{row.name === '' ? stringTrimfn(row.contactpersonname || '') : stringTrimfn(row.name || '')}</span>\n        </Link>\n      </div>\n    </div> : <span>-</span>\n    )\n  },\n  {\n    name: 'Contact Person',\n    sortable: true,\n    minWidth: '240px',\n    sortField: 'email',\n    selector: row => row.contactpersonname,\n    cell: row => (<Link to={`/master/${row.id}`}>\n      <div className='d-flex justify-content-left text-body'>\n        {renderClient(row.contactpersonname)}\n        <div className='d-flex flex-column'>\n          <span className='fw-bolder text-start'>{stringTrimfn(row.contactpersonname || '')}</span>\n          <small className='text-truncate text-muted mb-0'>{stringTrimfn(row.email || '')}</small>\n        </div>\n      </div>\n    </Link>\n    )\n  },\n  {\n    name: 'Business Entity',\n    minWidth: '158px',\n    maxWidth: '248px',\n    sortable: true,\n    sortField: 'entityname',\n    selector: row => row.entityname,\n    cell: row => <Link to={`/master/${row.id}`}> <span className='text-capitalize text-body'>{stringTrimfn(row.entityname || '')}</span></Link>\n  },\n  {\n    name: 'Contact',\n    minWidth: '138px',\n    maxWidth: '150px',\n    sortable: true,\n    sortField: 'contactnumber',\n    selector: row => row.contactnumber,\n    cell: row => <Link to={`/master/${row.id}`}> <span className='text-capitalize text-body'>{row.contactnumber}</span></Link>\n  },\n  {\n    name: 'Status',\n    minWidth: '138px',\n    maxWidth: '150px',\n    sortable: true,\n    sortField: 'status',\n    selector: row => statusArr[row.status],\n    cell: row => (\n      <Link to={`/master/${row.id}`}>\n        <Badge className='text-capitalize' color={statusObj[row.status]} pill>\n          {statusArr[row.status]}\n        </Badge>\n      </Link>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Store & Actions\nimport { getData } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, MoreVertical, Download, Search } from 'react-feather'\n\n// ** Utils\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardText,\n  Form,\n  InputGroupText,\n  InputGroup\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport { useNavigate } from 'react-router-dom'\nconst activeOrg = activeOrganization()\nconst userId = orgUserId()\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.client)\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  // ** States\n  const navigate = useNavigate()\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const sortColumn = 'createdon'\n  useEffect(() => {\n    const clientId = localStorage.getItem('activeOrganization')?.['clientId']\n    if (clientId) {\n      navigate(`/master`)\n    }\n  }, [])\n\n  // ** Get data on mount\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n\n        assignflag: activeOrg?.assignuserflag ?? false,\n        userId: parseInt(activeOrg?.rolelevel) === 1 ? '' : userId\n      })\n    )\n    setBlock(false)\n  }, [dispatch])\n\n  const handleFaqFilter = async () => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        assignflag: activeOrg?.assignuserflag ?? false,\n        userId: parseInt(activeOrg?.rolelevel) === 1 ? '' : userId\n      })\n    )\n    setBlock(false)\n    setSearchTerm(e.target.value)\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n\n    if (store.data.length > 0) {\n      return store.data\n    } else {\n      return []\n    }\n  }\n\n  const handleSort = async (column, sortDirection) => {\n    setBlock(true)\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        status: currentStatus.id,\n        assignflag: activeOrg?.assignuserflag ?? false,\n        userId: parseInt(activeOrg?.rolelevel) === 1 ? '' : userId\n      })\n    )\n    setBlock(false)\n  }\n\n  useEffect(() => {\n    if (activeOrg.clientid) {\n      localStorage.setItem('clientId', activeOrg.clientid)\n      navigate(`/master`)\n    }\n  }, [])\n\n  return (\n    <Fragment>\n      <Card\n        className='faq-search'\n        style={{\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\n        }}\n      >\n        <CardBody className='text-center'>\n          <h2 className='text-primary'>ClientPortal</h2>\n          <CardText className='mb-2'>Client Data, Documents, Licenses, Filing History, DSC, Tasks & Invoices</CardText>\n\n          <InputGroup className='input-group-merge'>\n            <InputGroupText>\n              <Search size={14} />\n            </InputGroupText>\n            <Input value={searchTerm} onChange={e => handleFaqFilter(e)} placeholder='search faq...' />\n          </InputGroup>\n\n          <div className='react-dataTable'>\n            <UILoader blocking={block} loader={<Loader />}>\n\n              <DataTable\n                noHeader\n                subHeader\n                sortServer\n                responsive\n                highlightOnHover\n                columns={columns}\n                onSort={handleSort}\n                sortIcon={<ChevronDown />}\n                className='react-dataTable'\n                data={dataToRender()}\n                subHeaderComponent={\n                  <div className='d-flex flex-wrap flex-md-nowrap flex-start mb-75 mt-3 w-100'>\n                    <h5>Client List</h5>\n                  </div>\n                }\n              />\n            </UILoader>\n          </div>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\nimport '@styles/react/apps/app-users.scss'\nconst ClientList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default ClientList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";"],"sourceRoot":""}