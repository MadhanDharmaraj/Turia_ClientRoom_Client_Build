{"version":3,"sources":["views/apps/task/edit/EditCard.js","views/apps/task/edit/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","EditCard","useState","block","setBlock","Loader","colourStyles","multiValue","styles","backgroundColor","navigate","useNavigate","date","setDate","id","useParams","schema","yup","shape","default","updatedBy","clientId","required","serviceId","forms","assignee","min","reviewer","clientAccessFlag","organizationId","taskStatus","invoiceId","startDate","endDate","priority","invoiceFlag","store","useSelector","state","task","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","reset","setValue","priorityOptions","name","assigneeUserOptions","setAssigneeUserOptions","reviewerUserOptions","setReviewerUserOptions","assigneeDefaultValue","setAssigneeDefaultValue","reviewerDefaultValue","setReviewerDefaultValue","formDefaultValue","setFormDefaultValue","taskDescription","setTaskDescription","taskDescriptionObj","setTaskDescriptionObj","descriptionFlag","setDescriptionFlag","dispatch","useDispatch","clientOptions","setClientOptions","serviceOptions","setServiceOptions","userOptions","setUserOptions","taskParticipants","seTaskParticipants","fileClassNames","image","pdf","xlsx","xls","docx","doc","filesArr","setFilesArr","files","setFiles","fileUploadProgress","setProgress","existAttachmentIds","setExistAttachmentsId","attachmentIds","setAttachmentsId","moveFiles","obj","taskId","createdBy","axios","post","then","useEffect","arr","map","deletedUser","tasktemp","x","selectedTask","forEach","indexOf","push","addTaskParticipants","rows","serviceid","_formValues","cloneWorkFlows","length","comment","undefined","isDefault","addDescription","updateDescription","formatparticipants","user","type","onSubmit","data","tempParticipants","updateTask","getOrganizationUsers","status","response","organizationusers","catch","err","console","log","formOptions","setFormOptions","handleFormChange","e","tempArr","Array","isArray","getServiceForms","res","serviceforms","temp","filter","includes","configUpload","headers","onUploadProgress","Math","round","loaded","total","uploadFiles","formData","FormData","file","key","append","attachment_ids","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","extension","split","pop","toast","error","getRootProps","getInputProps","fileList","index","md","className","substr","originalfilename","size","onClick","ids","splice","filtered","i","handleRemoveFile","clients","services","handleAssigneeChange","reviewerOptions","id1","some","id2","handleReviwerChange","assigneeOptions","clientid","taskstatus","invoiceid","startdate","String","enddate","parseInt","invoiceflag","getTask","taskconversation","attachmentids","blocking","loader","Object","keys","k","message","sm","for","render","field","ref","inputRef","classnames","classNamePrefix","options","value","find","c","onChange","val","getClientData","getOptionLabel","option","getOptionValue","isMulti","invalid","description","onInput","target","defaultValue","replace","color","rules","dateFormat","dateStr","altInput","altFormat","outline","tag","Link","to","TaskEdit","xl","UILoader","props","children","overlayColor","Tag","style","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/73.7066c901.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\n// ** Custom Components\nimport classnames from 'classnames'\n\n// ** Third Party Components\nimport axios from '@src/configs/axios/axiosConfig'\nimport Flatpickr from 'react-flatpickr'\nimport { useDropzone } from 'react-dropzone'\nimport { X, Plus, Paperclip } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\nimport { getTask, addTaskParticipants, updateDescription, addDescription, updateTask, cloneWorkFlows } from '../store'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, Progress, FormFeedback, Input, CardHeader } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\nconst EditCard = () => {\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const navigate = useNavigate()\n  const [setOpen] = useState(false)\n  const [date, setDate] = useState(\"\")\n  const { id } = useParams()\n\n  const schema = yup.object().shape({\n    id: yup.string().default(id),\n    updatedBy: yup.string().default(userId),\n    clientId: yup.string().required(\"Please select a Client\"),\n    serviceId: yup.string().required(\"Please select a Service\"),\n    forms: yup.array(),\n    assignee: yup.array().min(1, \"Please select Assignee\"),\n    reviewer: yup.array(),\n    clientAccessFlag: yup.boolean().default(false),\n    organizationId: yup.string().default(activeOrgId),\n    taskStatus: yup.number().default(1),\n    invoiceId: yup.string().default(0),\n    startDate: yup.string().required('Please Select Start Date'),\n    endDate: yup.string().required('Please Select End Date'),\n    priority: yup.string().required(\"Please select a Priority\"),\n    invoiceFlag: yup.boolean().default(false)\n  })\n  const store = useSelector(state => state.task)\n\n  const { handleSubmit, formState: { errors }, control, reset, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const priorityOptions = [\n    { id: 1, name: \"Low\" },\n    { id: 2, name: \"Medium\" },\n    { id: 3, name: \"High\" }\n  ]\n\n  const [assigneeUserOptions, setAssigneeUserOptions] = useState([])\n  const [reviewerUserOptions, setReviewerUserOptions] = useState([])\n  const [assigneeDefaultValue, setAssigneeDefaultValue] = useState()\n  const [reviewerDefaultValue, setReviewerDefaultValue] = useState()\n  const [formDefaultValue, setFormDefaultValue] = useState()\n  const [taskDescription, setTaskDescription] = useState('')\n  const [taskDescriptionObj, setTaskDescriptionObj] = useState({})\n  const [descriptionFlag, setDescriptionFlag] = useState(false)\n\n  const dispatch = useDispatch()\n  const [clientOptions, setClientOptions] = useState([])\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [userOptions, setUserOptions] = useState([])\n\n  const [taskParticipants, seTaskParticipants] = useState([])\n\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n\n  const [filesArr, setFilesArr] = useState([])\n  const [files, setFiles] = useState([])\n  const [fileUploadProgress, setProgress] = useState(0)\n  const [existAttachmentIds, setExistAttachmentsId] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n\n  const moveFiles = async () => {\n\n    const obj = { taskId: store.taskId, organizationId: activeOrgId, attachmentIds, createdBy: userId }\n    await axios.post('/google/movetaskfiles', obj).then(() => {\n\n    })\n  }\n\n\n  useEffect(async () => {\n    if (store.taskId !== null) {\n      const arr = taskParticipants.map((obj) => {\n        return { ...obj, taskId: store.taskId }\n      })\n      const deletedUser = []\n      const tasktemp = taskParticipants.map(x => x.userId)\n      store.selectedTask.assignee.forEach((obj) => {\n        if (tasktemp.indexOf(obj.id) === -1) {\n          deletedUser.push(obj.id)\n        }\n      })\n      store.selectedTask.reviewer.forEach((obj) => {\n        if (tasktemp.indexOf(obj.id) === -1) {\n          deletedUser.push(obj.id)\n        }\n      })\n\n      await dispatch(addTaskParticipants({ rows: arr, deletedUser, taskId: store.taskId }))\n\n      if (store.selectedTask.serviceid !== control._formValues.serviceId) {\n        const obj = {\n          taskId: store.taskId,\n          serviceId: control._formValues.serviceId,\n          organizationId: activeOrgId,\n          createdBy: userId\n        }\n        await dispatch(cloneWorkFlows(obj))\n      }\n\n      if (taskDescription !== '' || attachmentIds.length > 0) {\n        const comment = {\n          comment: taskDescription,\n          taskId: store.taskId,\n          createdBy: userId,\n          updatedBy: userId,\n          organizationId: activeOrgId,\n          attachmentIds: [...existAttachmentIds, ...attachmentIds],\n          id: taskDescriptionObj === undefined ? '' : taskDescriptionObj.id,\n          isDefault: true\n        }\n        if (!descriptionFlag) {\n          await dispatch(addDescription(comment))\n        } else {\n          await dispatch(updateDescription(comment))\n        }\n\n      }\n\n      if (attachmentIds.length > 0) {\n        await moveFiles()\n      }\n\n      const id = store.taskId\n      navigate(`/task/view/${id}`)\n\n    }\n  }, [store.taskId])\n\n  const formatparticipants = (user, type) => {\n    const obj = {\n      organizationId: activeOrgId,\n      userId: user,\n      type,\n      createdBy: userId\n    }\n    return obj\n  }\n\n  const onSubmit = async data => {\n    setBlock(true)\n    const tempParticipants = []\n    data.assignee.forEach((user) => {\n      tempParticipants.push(formatparticipants(user, 1))\n    })\n\n    if (data.reviewer !== undefined) {\n      data.reviewer.forEach((user) => {\n        tempParticipants.push(formatparticipants(user, 2))\n      })\n    }\n\n    seTaskParticipants(tempParticipants)\n    delete data.assignee\n    delete data.reviewer\n\n    await dispatch(updateTask(data))\n  }\n\n  const getClients = () => {\n    axios.post('/clients/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setClientOptions(arr.clients)\n    })\n  }\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setReviewerUserOptions(arr.organizationusers)\n      setAssigneeUserOptions(arr.organizationusers)\n      setUserOptions(arr.organizationusers)\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setServiceOptions(arr.services)\n    })\n  }\n\n\n  const [formOptions, setFormOptions] = useState([])\n\n  const handleFormChange = (e) => {\n    setFormDefaultValue(e)\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    setValue(\"forms\", tempArr)\n  }\n\n  const getServiceForms = (serviceId) => {\n\n    axios.post('serviceforms/dropdown', { serviceId })\n      .then((res) => {\n        setFormOptions(res.data.serviceforms)\n        if (serviceId === store.selectedTask.serviceid) {\n          const temp = res.data.serviceforms.filter(obj => store.selectedTask.forms.includes(obj.id))\n          handleFormChange(temp)\n        } else {\n          setValue(\"forms\", [])\n        }\n      }).catch(() => {\n\n      })\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n\n    axios.post('/google/taskfiles', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n    }).catch((err) => { console.log(err) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const handleRemoveFile = (file) => {\n\n    if (file.id) {\n      const temp = attachmentIds.indexOf(file.id)\n      const ids = attachmentIds.splice(temp, 1)\n      setExistAttachmentsId(ids)\n      const filtered = filesArr.filter(i => i.originalfilename !== file.originalfilename)\n      setFilesArr(filtered)\n    } else {\n      const uploadedFiles = files\n      const filtered = uploadedFiles.filter(i => i.name !== file.name)\n      setFiles(filtered)\n    }\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    file &&\n    <Col md={4} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          {file.name &&\n            <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n          }{file.originalfilename &&\n            <p className='file-name mb-0 text-overflow-ellipsis'>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}` : file.originalfilename}</p>\n          }\n        </div>\n      </div>\n      <X size={14} className='cursor-pointer' onClick={() => handleRemoveFile(file)} />\n    </Col>\n\n  ))\n\n  useEffect(() => {\n    getClients()\n    getOrganizationUsers()\n    getServices()\n  }, [])\n\n  // handle onChange event of the dropdown\n  const handleAssigneeChange = (e) => {\n    setAssigneeDefaultValue(e)\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let reviewerOptions\n    if (tempArr.length > 0) {\n      reviewerOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { reviewerOptions = userOptions }\n\n    setReviewerUserOptions(reviewerOptions)\n    setValue(\"assignee\", tempArr)\n  }\n\n  const handleReviwerChange = (e) => {\n    setReviewerDefaultValue(e)\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let assigneeOptions\n    if (tempArr.length > 0) {\n      assigneeOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { assigneeOptions = userOptions }\n\n    setAssigneeUserOptions(assigneeOptions)\n    setValue(\"reviewer\", tempArr)\n  }\n\n  const getDescription = () => {\n    axios.post('/taskconversations/description', { taskId: id })\n      .then((res) => {\n        setTaskDescriptionObj(res.data.taskconversation)\n        setTaskDescription(res.data.taskconversation === undefined ? '' : res.data.taskconversation.comment)\n        if (res.data.taskconversation !== undefined) {\n          setDescriptionFlag(true)\n        }\n        if (res.data?.taskconversation?.attachmentids) {\n          setExistAttachmentsId(res.data.taskconversation.attachmentids)\n          setFilesArr(res.data.taskconversation.files)\n        }\n      }).catch((err) => {\n        console.log(err)\n      })\n  }\n\n  useEffect(async () => {\n    if (store.selectedTask !== null) {\n      reset({\n        updatedBy: userId,\n        clientId: store.selectedTask.clientid,\n        serviceId: store.selectedTask.serviceid,\n        clientAccessFlag: false,\n        organizationId: activeOrgId,\n        taskStatus: store.selectedTask.taskstatus,\n        invoiceId: store.selectedTask.invoiceid || 0,\n        startDate: store.selectedTask.startdate.length === 13 ? String(store.selectedTask.startdate / 1000) : store.selectedTask.startdate,\n        endDate: store.selectedTask.enddate.length === 13 ? String(store.selectedTask.enddate / 1000) : store.selectedTask.enddate,\n        priority: parseInt(store.selectedTask.priority),\n        invoiceFlag: store.selectedTask.invoiceflag\n      })\n      //setinvoiceFlag(store.selectedTask.invoiceflag)\n      handleAssigneeChange(store.selectedTask.assignee)\n      handleReviwerChange(store.selectedTask.reviewer)\n      getServiceForms(store.selectedTask.serviceid)\n    }\n  }, [store.selectedTask])\n\n  useEffect(async () => {\n    if (id !== undefined) {\n      await dispatch(getTask({ id, userId }))\n      getDescription()\n    }\n  }, [id])\n\n  // ** Custom Options Component\n  const OptionComponent = ({ data, ...props }) => {\n    if (data.type === 'button') {\n      return (\n        <Button className='text-start rounded-0 px-50' color={data.color} block onClick={() => setOpen(true)}>\n          <Plus className='font-medium-1 me-50' />\n          <span className='align-middle'>{data.label}</span>\n        </Button>\n      )\n    } else {\n      return <components.Option {...props}> {data.label} </components.Option>\n    }\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Card className='invoice-preview-card'>\n          {Object.keys(errors).map((obj, k) => {\n            return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n          })}\n          <CardHeader>Edit Task</CardHeader>\n          {/* Header */}\n          <CardBody className='pb-2 px-2'>\n            <Row>\n              <div className='col-lg-6 col-sm-12'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='clientId'>\n                    Client\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"clientId\"\n                      id=\"clientId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.clientId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={clientOptions}\n                          value={clientOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { field.onChange(val.id); getClientData(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.clientId && <FormFeedback className='text-danger'>{errors.clientId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='serviceId'>\n                    Service\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"serviceId\"\n                      id=\"serviceId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.serviceId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={serviceOptions}\n                          value={serviceOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { field.onChange(val.id); getServiceForms(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.serviceId && <FormFeedback className='text-danger'>{errors.serviceId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='reviewer'>\n                    Forms\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"forms\"\n                      id=\"forms\"\n                      render={({ field, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.forms })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={formOptions}\n                          isMulti={true}\n                          value={formDefaultValue} // set selected values\n                          onChange={handleFormChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.forms && <FormFeedback className='text-danger'>{errors.forms?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='description'>\n                    Description\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='description'\n                      name='description'\n                      control={control}\n                      render={({ field }) => <Input type=\"textarea\" invalid={errors.description && true} onInput={(e) => { setTaskDescription(e.target.value) }} {...field} defaultValue={taskDescription.replace(/(\\\\n)/g, \"\\n\")} />}\n                    />\n                    {errors.description && <FormFeedback>{errors.description.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='my-2'>\n                  <Col>\n                    <div className='d-lg-flex'>\n\n                      <input {...getInputProps()} />\n\n                      <Button type='button' color='primary' size='sm' {...getRootProps({ })} >\n                        <Paperclip size={14} className=''></Paperclip> Add Attachment\n                      </Button>\n\n                      {fileUploadProgress > 0 && <Progress className='mt-md-50' color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Row className='d-flex p-1'>{fileList}</Row>\n                </Row>\n              </div>\n              <div className='col-lg-6 col-sm-12'>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='assignee'>\n                    Assigned To\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"assignee\"\n                      id=\"assignee\"\n                      render={({ field, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.assignee })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={assigneeUserOptions}\n                          isMulti={true}\n                          value={assigneeDefaultValue} // set selected values\n                          onChange={handleAssigneeChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.assignee && <FormFeedback className='text-danger'>{errors.assignee?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='reviewer'>\n                    Reviewer\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"reviewer\"\n                      id=\"reviewer\"\n                      render={({ field, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.reviewer })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={reviewerUserOptions}\n                          isMulti={true}\n                          value={reviewerDefaultValue} // set selected values\n                          onChange={handleReviwerChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.reviewer && <FormFeedback className='text-danger'>{errors.reviewer?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='startDate'>\n                    Start Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      value={date}\n                      name=\"startDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.startDate })} />\n                      )}\n                    />\n\n                    {errors.startDate && <FormFeedback className='text-danger'>{errors.startDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='endDate'>\n                    End Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      value={date}\n                      onChange={date => setDate(date)}\n                      name=\"endDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.endDate })} />\n                      )}\n                    />\n\n                    {errors.endDate && <FormFeedback className='text-danger'>{errors.endDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='priority'>\n                    Priority\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"priority\"\n                      id=\"priority\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.priority })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={priorityOptions}\n                          value={priorityOptions.find(c => { return c.id === field.value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.priority && <FormFeedback className='text-danger'>{errors.priority?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </CardBody>\n          {/*<hr className='invoice-spacing' />\n           <Row className='px-1 pb-2'>\n            <div className='form-check form-check-primary mx-2'>\n              <Controller\n                control={control}\n                name={`invoiceFlag`}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <Input className='form-check-input' type='checkbox' id='invoice_flag' value={field.value} checked={invoiceFlag} {...field} onChange={(val) => { field.onChange(val); enableInvoice() }} />\n                )}\n              />\n              <Label className='form-check-label' for='invoice_flag'>\n                Create Profoma Invoice for this Task\n              </Label>\n            </div>\n          </Row> */}\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button className='add-new-user' outline color='warning' tag={Link} to={`/task/view/${id}`}>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form >\n    </UILoader>\n  )\n}\n\nexport default EditCard\n","// ** Invoice Add Components\nimport EditCard from './EditCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TaskEdit = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <EditCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TaskEdit\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}