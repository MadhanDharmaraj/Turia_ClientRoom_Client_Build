{"version":3,"sources":["views/pages/account-settings/Modules.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["EmailTemplates","useState","dataList","setDataList","orgModules","setOrgModules","block","setBlock","Loader","getOrgModules","modules","flg","obj","axios","post","then","res","data","result","moduleslist","map","o","slug","catch","err","console","log","useEffect","isrolebased","length","defultModule","blocking","loader","key","className","type","name","value","disabled","indexOf","defaultChecked","onChange","ind","temp","splice","push","handleCheckbox","UILoader","props","children","tag","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","color","ComponentSpinner"],"mappings":"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","file":"static/js/81.8dc02fc8.chunk.js","sourcesContent":["import React, { useEffect, Fragment, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, Col, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap'\nimport axios from '@src/configs/axios/axiosConfig'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n//import { activeOrganization } from '@src/helper/sassHelper'\n\n//const activeOrg = activeOrganization()\n//const moduleList = activeOrg.moduleslist\nconst EmailTemplates = () => {\n\n  const [dataList, setDataList] = useState([])\n  const [orgModules, setOrgModules] = useState([])\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const getList = () => {\n    setBlock(true)\n    axios.post('/modules/list', { isrolebased: 1 })\n      .then(async (res) => {\n        setDataList(res.data.modules || [])\n        setBlock(false)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const getOrgModules = async (modules = [], flg = false) => {\n    setBlock(true)\n    const obj = { modules }\n    await axios.post('/organizationprefernces/organizationmodules', flg ? obj : {})\n      .then(async (res) => {\n        setOrgModules(res.data.result.moduleslist || dataList.map((o) => o.slug))\n        setBlock(false)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(async () => {\n    await getList()\n  }, [])\n\n  useEffect(async () => {\n    if (dataList.length > 0) {\n      await getOrgModules()\n    }\n  }, [dataList])\n\n  const defultModule = ['invoice', 'client', 'service', 'task']\n\n  const handleCheckbox = (slug) => {\n\n    if (defultModule.indexOf(slug) > -1) return false\n    const ind = orgModules.indexOf(slug)\n    const temp = [...orgModules]\n    if (ind > -1) {\n      temp.splice(ind, 1)\n    } else {\n      temp.push(slug)\n    }\n    setOrgModules(temp)\n    getOrgModules(temp, true)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <h4>Modules</h4>\n      </CardHeader>\n      <CardBody>\n        <UILoader blocking={block} loader={<Loader />}>\n          {\n            orgModules.length > 0 &&\n\n            dataList.map((obj, key) => {\n              return (\n                <Row key={key} className='my-1'>\n                  <Col>\n                    <Input type='checkbox' name='modules' value={obj.slug} disabled={defultModule.indexOf(obj.slug) > -1} defaultChecked={(orgModules.indexOf(obj.slug) > -1)} onChange={() => handleCheckbox(obj.slug)} />\n                    <span className='ms-75'>{obj.name}</span></Col>\n                </Row>\n              )\n            })\n          }\n        </UILoader>\n      </CardBody>\n    </Card>\n  )\n}\nexport default EmailTemplates","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}