{"version":3,"sources":["views/apps/proposal/shared-sidebar/SidebarSendInvoice.js","views/apps/proposal/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrg","activeOrganization","userData","loggedInUser","SidebarSendInvoice","props","colourStyles","multiValue","styles","backgroundColor","useState","block","setBlock","Loader","toEmail","setToEmail","ccEmail","setCCEmail","data","setData","open","toggleSidebar","invoice","thankyouNote","setThankyouNote","userOptions","setUserOptions","clientOptions","setClientOptions","getCoatctInfo","id","axios","post","contactid","then","res","contactinformations","catch","getThankyouNotes","slug","value","test","emailtemplates","description","replace","paymentdue","length","moment","format","unix","taskinvoiceitemsservicename","contactperson","uniqueno","totalamount","name","replaceAll","temp","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","useEffect","undefined","clientid","Object","keys","organizationusers","ccOpen","setCCOpen","SelectComponent","Option","className","size","initials","content","charAt","email","toggleCC","e","preventDefault","scrollable","fade","keyboard","backdrop","container","isOpen","contentClassName","toggle","modalClassName","blocking","loader","href","onClick","onSubmit","for","isMulti","isClearable","theme","selectThemeColors","options","classNamePrefix","components","onChange","map","i","getOptionLabel","option","getOptionValue","placeholder","toolbarClassName","wrapperClassName","editorState","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","editorClassName","toolbar","inline","inDropdown","outline","color","subject","taskinvoiceId","clientName","contactname","toast","success","position","console","log","sendMail","MySwal","withReactContent","Swal","CustomHeader","handleFilter","handlePerPage","rowsPerPage","exportList","lg","htmlFor","type","target","I","a","tag","Link","to","caret","ProposalList","dispatch","useDispatch","store","useSelector","state","setValue","selectedData","setSelectedData","sendSidebarOpen","setSendSidebarOpen","sort","setSort","sortColumn","setSortColumn","currentPage","setCurrentPage","setRowsPerPage","currentStatus","currentTaskStatus","setCurrentTaskStatus","statusOptionsArr","statusObj","toggleSendSidebar","renderClient","row","Math","floor","random","getData","q","page","perPage","status","taskstatus","val","parseInt","exortProposal","handlePagination","selected","CustomPagination","count","Number","total","toFixed","nextLabel","breakLabel","previousLabel","pageCount","activeClassName","breakClassName","pageClassName","breakLinkClassName","nextLinkClassName","pageLinkClassName","nextClassName","previousLinkClassName","previousClassName","onPageChange","forcePage","containerClassName","dataToRender","filters","some","k","handleSort","col","dateFormat","md","responsive","scope","index","contactemail","invoicedate","placement","end","downloadLink","document","createElement","fileName","pdf","download","click","removeChild","err","downloadPdf","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","deleteInvoice","UILoader","children","overlayColor","Tag","classnames","style","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/58.88a6ffff.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html'\nimport { EditorState, ContentState, convertFromHTML, convertToRaw } from 'draft-js'\nimport Select, { components } from 'react-select'\nimport CreatableSelect from 'react-select/creatable'\n\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash, File } from 'react-feather'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Modal,\n  Button,\n  ModalBody\n} from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\n// ** User Avatars\nimport { activeOrganization, loggedInUser } from '@src/helper/sassHelper'\nconst activeOrg = activeOrganization()\nconst userData = loggedInUser()\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport toast from 'react-hot-toast'\nconst SidebarSendInvoice = props => {\n\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const [block, setBlock] = useState(false)\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const [toEmail, setToEmail] = useState([])\n  const [ccEmail, setCCEmail] = useState([])\n  const [data, setData] = useState('')\n  const { open, toggleSidebar, invoice } = props\n  const [thankyouNote, setThankyouNote] = useState('')\n  const [userOptions, setUserOptions] = useState([])\n  const [clientOptions, setClientOptions] = useState([])\n\n  const getOrganizationUsers = () => {\n    axios.post('/organizationusers/dropdown').then((res) => {\n      setUserOptions(res.data.organizationusers)\n    }).catch(() => { })\n  }\n\n  const getCoatctInfo = (id) => {\n    axios.post('contactinformations/list', { contactid: id }).then((res) => {\n      setClientOptions(res.data.contactinformations)\n    }).catch(() => { })\n\n  }\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n\n  }\n\n  const getThankyouNotes = () => {\n    axios.post('/emailtemplates/get', { slug: 'invoice-send-mail' }).then((res) => {\n      const mailSub = res.data.emailtemplates.description\n      const test = mailSub.replace('{invoice_date}', dateFormat(invoice.paymentdue)).replace('{service}', invoice.taskinvoiceitemsservicename).replace('recipient_name', invoice.contactperson).replace('{recipient_name}', invoice.contactperson).replace('{invoice_no}', invoice.uniqueno).replace('{amount}', invoice.totalamount).replace('{invoice_amount}', invoice.totalamount).replace('{your_name}', userData.name).replaceAll('{firm_name}', activeOrg.name).replace('{', '').replace('}', '')\n\n      const temp = EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML(test)\n        )\n      )\n      setData(temp)\n      setThankyouNote(test)\n\n    }).catch(() => { })\n  }\n\n  const handleChange = (editorState) => {\n    setData(editorState)\n    setThankyouNote(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  }\n\n\n  useEffect(() => {\n    if (invoice.clientid !== undefined) {\n      getCoatctInfo(invoice.clientid)\n    }\n    if (invoice.contactid !== undefined) {\n      getCoatctInfo(invoice.contactid)\n    }\n    if (Object.keys(invoice).length > 0) {\n      getOrganizationUsers()\n      getThankyouNotes()\n    }\n  }, [invoice])\n\n  const sendMail = () => {\n    setBlock(true)\n    const subject = `${invoice.uniqueno} Invoices Acknowledgement Mail`\n    axios.post('/google/sendGmail', { content: thankyouNote, subject, toEmail, ccEmail, taskinvoiceId: invoice.id, clientName: invoice.contactname })\n      .then(() => {\n        toggleSidebar(false)\n        setBlock(false)\n        toast.success('Email send Successfully', { position: 'bottom-right' })\n      })\n    console.log(() => { })\n  }\n\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-50' size='sm' initials content={data.name?.charAt(0)} />\n          {data.name} - {data.email}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleSidebar()\n  }\n\n  return (\n\n    <div className='email-application'>\n      <div className='content-area-wrapper'>\n        <div className='col-md-12'>\n          <div className='content-body'>\n            <Modal\n              scrollable\n              fade={false}\n              keyboard={false}\n              backdrop={false}\n              id='compose-mail'\n              container='.content-body'\n              className='modal-lg'\n              isOpen={open}\n              contentClassName='p-0'\n              toggle={toggleSidebar}\n              modalClassName='modal-sticky'\n            >\n              <UILoader blocking={block} loader={<Loader />}>\n                <div className='modal-header'>\n                  <h5 className='modal-title'>Compose Mail</h5>\n                  <div className='modal-actions'>\n                    {/* <a href='/' className='text-body me-75' onClick={togglePopUp}>\n                      <Minus size={14} />\n                    </a>\n                    <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\n                      <Maximize2 size={14} />\n                    </a> */}\n                    <a href='/' className='text-body' onClick={togglePopUp}>\n                      <X size={14} />\n                    </a>\n                  </div>\n                </div>\n                <ModalBody className='flex-grow-1 p-0'>\n                  <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-to' className='form-label'>\n                        To:\n                      </Label>\n                      <div className='flex-grow-1'>\n                        <CreatableSelect\n                          isMulti\n                          id='email-to'\n                          isClearable={false}\n                          theme={selectThemeColors}\n                          options={clientOptions}\n                          className='react-select select-borderless'\n                          classNamePrefix='select'\n                          components={{ Option: SelectComponent }}\n                          styles={colourStyles}\n                          onChange={(e) => { setToEmail(e.map(i => i.email)) }}\n                          getOptionLabel={(option) => `${option.name} - ${option.email}`}\n                          getOptionValue={(option) => option.id}\n                        />\n                      </div>\n                      <div>\n                        <a href='/' className='toggle-cc text-body me-1' onClick={toggleCC}>\n                          Cc\n                        </a>\n                      </div>\n                    </div>\n                    {ccOpen === true ? (\n                      <div className='compose-mail-form-field cc-wrapper'>\n                        <Label for='email-cc' className='form-label'>\n                          Cc:\n                        </Label>\n                        <div className='flex-grow-1'>\n                          <Select\n                            isMulti\n                            id='email-cc'\n                            onChange={(e) => { setCCEmail(e.map(i => i.email)) }}\n                            isClearable={false}\n                            theme={selectThemeColors}\n                            options={userOptions}\n                            className='react-select select-borderless'\n                            classNamePrefix='select'\n                            components={{ Option: SelectComponent }}\n                            styles={colourStyles}\n                            getOptionLabel={(option) => `${option.name} - ${option.email}`}\n                            getOptionValue={(option) => option.id}\n                          />\n                        </div>\n                        <div>\n                          <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                            <X size={14} />\n                          </a>\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-subject' className='form-label'>\n                        Subject:\n                      </Label>\n                      <Input id='email-subject' placeholder='Subject' />\n                    </div>\n                    <div id='message-editor'>\n                      <Editor\n                        placeholder='Message'\n                        toolbarClassName='rounded-0'\n                        wrapperClassName='toolbar-bottom'\n                        editorState={data}\n                        onEditorStateChange={handleChange}\n                        editorClassName='rounded-0 border-0'\n                        toolbar={{\n                          options: ['inline', 'textAlign'],\n                          inline: {\n                            inDropdown: false,\n                            options: ['bold', 'italic', 'underline', 'strikethrough']\n                          }\n                        }}\n                      />\n                    </div>\n                    <div className='compose-footer-wrapper'>\n                      <div className='btn-wrapper d-flex align-items-center'>\n                        <Button outline color='primary' onClick={() => { sendMail() }}>Send</Button>\n                        <div className='email-attachement rounded border p-50 ms-50'>\n                          {invoice.uniqueno}.pdf\n                        </div>\n                      </div>\n                      <div className='footer-action d-flex align-items-center'>\n                        <Trash className='cursor-pointer' size={18} onClick={toggleSidebar} />\n                      </div>\n                    </div>\n                  </Form>\n                </ModalBody>\n              </UILoader>\n            </Modal>\n          </div></div></div>\n    </div>\n\n  )\n}\n\nexport default SidebarSendInvoice\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect, Fragment } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Third Party Components\nimport { Can } from '@src/utility/context/Can.js'\nimport ReactPaginate from 'react-paginate'\nimport Avatar from '@components/avatar'\nimport Select from 'react-select'\nimport {\n  Eye, Send, Edit, Copy, Trash, Download, MoreVertical, Trash2\n} from 'react-feather'\n// ** Reactstrap Imports\nimport {\n  Button, Input, Row, Col, Card, CardBody, Label, DropdownToggle, DropdownMenu, Badge, UncontrolledTooltip, UncontrolledDropdown, DropdownItem, Table\n} from 'reactstrap'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\nimport { getData, deleteInvoice, exortProposal } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst MySwal = withReactContent(Swal)\n\nconst CustomHeader = ({ handleFilter, value, handlePerPage, rowsPerPage, exportList }) => {\n\n  return (\n    <div className='invoice-list-table-header w-100 py-2 px-1'>\n      <Row>\n        <Col lg='6' className='d-flex align-items-center px-0 px-lg-1'>\n          <div className='d-flex align-items-center me-2'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              className='form-control ms-50 pe-3'\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n          </div>\n        </Col>\n        <Col\n          lg='6'\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pe-lg-1 p-0'\n        >\n          <div className='d-flex align-items-center'>\n            <label htmlFor='search-invoice'>Search</label>\n            <Input\n              id='search-invoice'\n              className='ms-50 me-2 w-100'\n              type='text'\n              value={value}\n              onChange={e => handleFilter(e.target.value)}\n              placeholder='Search Profoma Invoice'\n            />\n          </div>\n          <Can I={'write'} a={'invoice'}>\n            <Button tag={Link} to='/proposal/add' color='primary'>\n              Add Profoma Invoice\n            </Button>\n          </Can>\n          <UncontrolledDropdown className='ms-1'>\n            <DropdownToggle color='secondary' caret outline>\n              <MoreVertical className='font-small-4 me-50' />\n            </DropdownToggle>\n            <DropdownMenu>\n              <Can I={'export'} a={'invoice'}>\n                <DropdownItem onClick={() => { exportList() }}>\n                  <Download className='font-small-4 me-50' />\n                  <span className='align-middle'>Export</span>\n                </DropdownItem>\n              </Can>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst ProposalList = () => {\n  // ** Store vars\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  // ** States\n  const [value, setValue] = useState('')\n  const [selectedData, setSelectedData] = useState({})\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('createdon')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(50)\n  const currentStatus = { id: 4, name: 'Draft' }\n  const [currentTaskStatus, setCurrentTaskStatus] = useState({ id: '', name: 'SelectAll' })\n  // ** Vars\n  const statusOptionsArr = ['', 'Pending', 'In progress', 'Completed', 'On Hold', 'Cancelled', 'Sent to Review', 'Request Changes']\n  const statusObj = [\n    '',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-warning',\n    'light-info',\n    'light-success'\n  ]\n  const statusOptions = [{ name: 'Select All', id: '' }, { name: 'Pending', id: 1 }, { name: 'In progress', id: 2 }, { name: 'Completed', id: 3 }, { name: 'Sent to Review', id: 6 }, { name: 'Request Changes', id: 7 }]\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n\n  // ** renders client column\n  const renderClient = row => {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n    return <Avatar color={color} className='me-50' content={row.contactname !== null ? row.contactname?.charAt(0) : ''} />\n\n  }\n\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id,\n        taskstatus: currentTaskStatus.id\n      })\n    )\n    setBlock(false)\n  }, [dispatch])\n\n  const handleFilter = async val => {\n    setValue(val)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id,\n        taskstatus: currentTaskStatus.id\n      })\n    )\n    setBlock(false)\n  }\n\n  const handlePerPage = async e => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        status: currentStatus.id,\n        taskstatus: currentTaskStatus.id,\n        perPage: parseInt(e.target.value)\n      })\n    )\n    setBlock(true)\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const exportList = async () => {\n    setBlock(true)\n    await dispatch(\n      exortProposal({\n        sort,\n        sortColumn,\n        q: value,\n        status: currentStatus.id,\n        taskstatus: currentTaskStatus.id\n      })\n    )\n    setBlock(false)\n  }\n\n  // const handleSort = (column, sortDirection) => {\n  //   setSort(sortDirection)\n  //   setSortColumn(column.sortField)\n  //   dispatch(\n  //     getData({\n  //       q: value,\n  //       page: currentPage,\n  //       sort: sortDirection,\n  //       status: currentStatus.id,\n  //taskstatus: currentTaskStatus.id,\n  //       perPage: rowsPerPage,\n  //       sortColumn: column.sortField\n  //     })\n  //   )\n  // }\n\n  const handlePagination = async page => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        status: currentStatus.id,\n        taskstatus: currentTaskStatus.id,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n    setBlock(false)\n  }\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        nextLabel=''\n        breakLabel='...'\n        previousLabel=''\n        pageCount={count || 1}\n        activeClassName='active'\n        breakClassName='page-item'\n        pageClassName={'page-item'}\n        breakLinkClassName='page-link'\n        nextLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousLinkClassName={'page-link'}\n        previousClassName={'page-item prev'}\n        onPageChange={page => handlePagination(page)}\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\n      />\n    )\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      q: value,\n      status: currentStatus.id,\n      taskstatus: currentTaskStatus.id\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return []\n    }\n  }\n\n  useEffect(() => {\n    dataToRender()\n  }, [store.data])\n\n  const deleteClientfun = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteInvoice(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Invoice has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const handleSort = async col => {\n\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn: col,\n        q: value,\n        status: currentStatus.id,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n    setSort(sort === 'asc' ? 'desc' : 'asc')\n    setSortColumn(col)\n    setBlock(false)\n  }\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n  }\n\n  const downloadPdf = (row) => {\n    setBlock(true)\n    axios.post('/pdfmaker/pdf', { id: row.id })\n      .then((res) => {\n        const downloadLink = document.createElement(\"a\")\n        const fileName = `${row.uniqueno}.pdf`\n        downloadLink.href = res.data.pdf\n        downloadLink.download = fileName\n        downloadLink.click()\n        document.removeChild(downloadLink)\n        setBlock(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setBlock(false)\n      })\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Label for='status-select'>Task Status</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentTaskStatus}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n                onChange={async data => {\n                  setCurrentTaskStatus(data)\n                  setBlock(true)\n                  await dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: value,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      status: currentStatus.id,\n                      taskstatus: data.id\n                    })\n                  )\n                  setBlock(false)\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <Card>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <CustomHeader handlePerPage={handlePerPage} exportList={exportList} handleFilter={handleFilter} />\n          <UILoader blocking={block} loader={<Loader />}>\n            <Table responsive className='table-hover'>\n              <thead>\n                <tr>\n                  <th scope='col' className='text-nowrap'>ID</th>\n                  <th scope='col' className='text-nowrap'>Customer</th>\n                  <th scope='col' className='text-nowrap'>Services</th>\n                  <th scope='col' className='text-nowrap' onClick={() => { handleSort('invoicedate') }}>Profoma Invoice Date</th>\n                  <th scope='col' className='text-nowrap'>Total</th>\n                  <th scope='col' className='text-nowrap'>Task Status</th>\n                  <th scope='col' className='text-nowrap'>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dataToRender().map((row, index) => {\n                  return (\n                    <tr key={index}>\n                      <td><Link to={`/proposal/view/${row.id}`}>\n                        <span className='text-body'>{`${row.uniqueno}`}\n                        </span></Link></td>\n                      <td>{\n                        <Link to={`/proposal/view/${row.id}`}>\n                          <div className='d-flex justify-content-left align-items-center'>\n                            {renderClient(row)}\n                            <div className='d-flex flex-column'>\n                              <h6 className='user-name text-truncate mb-0'>{row.contactname}</h6>\n                              <small className='text-truncate text-muted mb-0'>{row.contactemail}</small>\n                            </div>\n                          </div>\n                        </Link>\n                      }</td>\n                      <td>\n                        <Link to={`/proposal/view/${row.id}`}>\n                          <span className='text-body'>{row.taskinvoiceitemsservicename}\n                          </span></Link>\n                      </td>\n                      <td>\n                        <Link to={`/proposal/view/${row.id}`}>\n                          <span className='text-body'>{dateFormat(row.invoicedate)}\n                          </span></Link></td>\n                      <td><Link to={`/proposal/view/${row.id}`}><span className='text-body'>{row.totalamount || 0}\n                      </span></Link></td>\n                      <td>\n                        <Badge color={statusObj[row.taskstatus]}>{statusOptionsArr[row.taskstatus]}</Badge>\n                      </td>\n                      <td>\n                        <div className='column-action d-flex align-items-center'>\n                          <Can I={'read'} a={'invoice'}>\n                            <Send size={17} onClick={() => { toggleSendSidebar(); setSelectedData(row) }} />\n                          </Can>\n                          <Can I={'read'} a={'invoice'}>\n                            <Link to={`/proposal/view/${row.id}`} id={`pw-tooltip-${row.id}`}>\n                              <Eye size={17} className='mx-1' />\n                            </Link>\n                          </Can>\n                          <UncontrolledTooltip placement='top' target={`pw-tooltip-${row.id}`}>\n                            Preview Invoice\n                          </UncontrolledTooltip>\n                          <UncontrolledDropdown>\n                            <DropdownToggle tag='span'>\n                              <MoreVertical size={17} className='cursor-pointer' />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                              <Can I={'export'} a={'invoice'}>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => { e.preventDefault(); downloadPdf(row) }}>\n                                  <Download size={14} className='me-50' />\n                                  <span className='align-middle'>Download</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'write'} a={'invoice'}>\n                                <DropdownItem tag={Link} to={`/proposal/edit/${row.id}`} className='w-100'>\n                                  <Edit size={14} className='me-50' />\n                                  <span className='align-middle'>Edit</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'delete'} a={'invoice'}>\n                                <DropdownItem\n                                  tag='a'\n                                  href='/'\n                                  className='w-100'\n                                  onClick={e => {\n                                    e.preventDefault()\n                                    deleteClientfun(row.id)\n                                  }}\n                                >\n                                  <Trash size={14} className='me-50' />\n                                  <span className='align-middle'>Delete</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'write'} a={'invoice'}>\n                                <DropdownItem tag={Link} className='w-100' to={`/proposal/clone/${row.id}`}>\n                                  <Copy size={14} className='me-50' />\n                                  <span className='align-middle'>Duplicate</span>\n                                </DropdownItem>\n                              </Can>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  )\n                })\n                }\n              </tbody>\n            </Table>\n          </UILoader>\n          <CustomPagination />\n        </div>\n        <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} invoice={selectedData} />\n      </Card >\n    </div >\n  )\n}\n\nexport default ProposalList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}