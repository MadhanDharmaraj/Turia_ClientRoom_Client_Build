{"version":3,"sources":["views/apps/team/shared-sidebar/SidebarSendMail.js","views/apps/team/list/Table.js","views/apps/team/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrg","activeOrganization","SidebarSendInvoice","props","open","toggleSidebar","invite","useState","emailContent","setEmailContent","data","setData","toEmail","setToEmail","block","setBlock","subject","setSubject","Loader","useEffect","Object","keys","length","test","replace","name","temp","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","getThankyouNotes","email","className","scrollable","fade","keyboard","backdrop","id","container","isOpen","contentClassName","toggle","modalClassName","blocking","loader","href","onClick","e","preventDefault","size","onSubmit","for","type","value","disabled","placeholder","onChange","target","toolbarClassName","wrapperClassName","editorState","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","editorClassName","toolbar","options","inline","inDropdown","outline","color","axios","post","content","then","toast","success","position","console","log","MySwal","withReactContent","Swal","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","xl","md","sm","htmlFor","style","width","Can","I","a","tag","Link","to","caret","UsersList","dispatch","useDispatch","store","useSelector","state","team","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","label","number","currentStatus","setCurrentStatus","sendSidebarOpen","setSendSidebarOpen","navigate","useNavigate","renderClient","row","initials","taskCountSts","response","result","deletefn","clientcount","taskcount","fire","title","text","icon","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","showCancelButton","opt","usertype","deleteUser","updateSubscription","deleteInvitation","inviteStatusObj","userStatusObj","statusArr","userstatusArr","invitationsList","q","page","perPage","status","userList","handlePagination","selected","parseInt","currentTarget","val","CustomPagination","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","theme","selectThemeColors","isClearable","classNamePrefix","filters","some","k","dataToRender","map","rolename","designationname","departmentname","pill","SidebarSendMail","TeamList","Table","UILoader","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/38.8f50308b.chunk.js","sourcesContent":["// ** Custom Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html'\nimport { EditorState, ContentState, convertFromHTML, convertToRaw } from 'draft-js'\n// ** Reactstrap Imports\nimport { Form, Button, Badge, Modal, ModalBody, Label, Input } from 'reactstrap'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { useEffect, useState, Fragment } from 'react'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { Maximize, Minus, Trash, X } from 'react-feather'\nimport '@styles/react/libs/editor/editor.scss'\nimport { activeOrganization } from '@src/helper/sassHelper'\nimport toast from 'react-hot-toast'\nconst activeOrg = activeOrganization()\n\nconst SidebarSendInvoice = (props) => {\n\n  const { open, toggleSidebar, invite } = props\n  const [emailContent, setEmailContent] = useState('')\n  const [data, setData] = useState('')\n  const [toEmail, setToEmail] = useState([])\n  const [block, setBlock] = useState(false)\n  const [subject, setSubject] = useState(null)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const getThankyouNotes = () => {\n\n    const email_content = `<p>Dear {invitename}!</p><p>You have been Invited to join <b>{inviteorganizationname} </b></p><p>You can start exploring the resources or showcasing your work.</p><p>Kindly click below button to Join</p>\n    <a style='background-color:#7367f0;padding:12px;color:#fff'target='_blank' href={invitelink} >Join</a>`\n    const test = email_content.replace('{invitename}', invite.name).replace('{inviteorganizationname}', activeOrg.name || '')\n    setEmailContent(test)\n    setSubject(`${activeOrg.name} is inviting you to use Turia `)\n\n    const temp = EditorState.createWithContent(\n      ContentState.createFromBlockArray(\n        convertFromHTML(test)\n      )\n    )\n    setData(temp)\n\n  }\n\n  useEffect(() => {\n\n    if (Object.keys(invite).length > 0) {\n      getThankyouNotes()\n\n      setToEmail(invite.email)\n    }\n  }, [invite])\n\n  const sendMail = () => {\n    setBlock(true)\n    axios.post('/invitations/invitationmail', { content: emailContent, id: invite.id, subject })\n      .then(() => {\n        toggleSidebar(false)\n        toast.success('Invitation send Successfuly', { position: 'bottom-right' })\n        setBlock(false)\n      })\n    console.log(() => {\n      setBlock(false)\n    })\n  }\n\n  const handleChange = (editorState) => {\n    setData(editorState)\n    setEmailContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleSidebar()\n  }\n\n  return (\n    <div className='email-application'>\n      <div className='content-area-wrapper'>\n        <div className='col-md-12'>\n          <div className='content-body'>\n            <Modal\n              scrollable\n              fade={false}\n              keyboard={false}\n              backdrop={false}\n              id='compose-mail'\n              container='.content-body'\n              className='modal-lg'\n              isOpen={open}\n              contentClassName='p-0'\n              toggle={toggleSidebar}\n              modalClassName='modal-sticky'\n            >\n              <UILoader blocking={block} loader={<Loader />}>\n                <div className='modal-header'>\n                  <h5 className='modal-title'>Invite Mail</h5>\n                  <div className='modal-actions'>\n                    {/* <a href='/' className='text-body me-75' onClick={togglePopUp}>\n                      <Minus size={14} />\n                    </a>\n                    <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\n                      <Maximize size={14} />\n                    </a> */}\n                    <a href='/' className='text-body' onClick={togglePopUp}>\n                      <X size={14} />\n                    </a>\n                  </div>\n                </div>\n                <ModalBody className='flex-grow-1 p-0'>\n                  <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-to' className='form-label'>\n                        To:\n                      </Label>\n                      <div className='flex-grow-1'>\n                        <Input type='text' value={toEmail} disabled />\n                      </div>\n                    </div>\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-subject' className='form-label'>\n                        Subject:\n                      </Label>\n                      <Input id='email-subject' placeholder='Subject' onChange={(e) => { setSubject(e.target.value) }} value={subject} />\n                    </div>\n                    <div id='message-editor'>\n                      <Editor\n                        placeholder='Message'\n                        toolbarClassName='rounded-0'\n                        wrapperClassName='toolbar-bottom'\n                        editorState={data}\n                        onEditorStateChange={handleChange}\n                        editorClassName='rounded-0 border-0'\n                        toolbar={{\n                          options: ['inline', 'textAlign'],\n                          inline: {\n                            inDropdown: false,\n                            options: ['bold', 'italic', 'underline', 'strikethrough']\n                          }\n                        }}\n                      />\n                    </div>\n                    <div className='compose-footer-wrapper'>\n                      <div className='btn-wrapper d-flex align-items-center'>\n                        <Button outline color='primary' onClick={() => { sendMail() }}>Send</Button>\n                      </div>\n                      <div className='footer-action d-flex align-items-center'>\n                        <Trash className='cursor-pointer' size={18} onClick={toggleSidebar} />\n                      </div>\n                    </div>\n                  </Form>\n                </ModalBody>\n              </UILoader>\n            </Modal>\n          </div></div></div>\n    </div>\n  )\n}\n\nexport default SidebarSendInvoice\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Avatar from '@components/avatar'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Store & Actions\nimport { invitationsList, userList, deleteUser, deleteInvitation } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select from 'react-select'\nimport SidebarSendMail from '../shared-sidebar/SidebarSendMail'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { MoreVertical, Trash2, Eye, Edit, Send, CheckCircle, XCircle, Upload } from 'react-feather'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n// ** Utils\nimport { selectThemeColors } from '@utils'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Badge,\n  UncontrolledDropdown,\n  Table\n} from 'reactstrap'\nconst MySwal = withReactContent(Swal)\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n//import { activeOrganization } from '@src/helper/sassHelper'\nimport axios from '@src/configs/axios/axiosConfig'\n//const activeOrg = activeOrganization()\n// ** Table Header\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' md='6' sm='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col md='6' sm='6'\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className='d-flex align-items-center table-header-actions'>\n            <Can I={'write'} a={'team'}>\n              <Button color='primary' tag={Link} to='/team/add'>\n                Add Employee\n              </Button>\n            </Can>\n            <UncontrolledDropdown className='ms-1'>\n              <DropdownToggle color='secondary' caret outline>\n                <MoreVertical className='font-small-4 me-50' />\n              </DropdownToggle>\n              <DropdownMenu>\n                <Can I={'import'} a={'team'}>\n                  <DropdownItem tag={Link} to={`/import/team`} className='w-100'>\n                    <Upload className='font-small-4 me-50' />\n                    <span className='align-middle'>Import</span>\n                  </DropdownItem>\n                </Can>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.team)\n\n  const statusOptions = [\n    { value: '', label: 'Select All' },\n    { value: '1', label: 'Active' },\n    { value: '-1', label: 'Deleted' }\n  ]\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(50)\n  const [currentStatus, setCurrentStatus] = useState({ value: '1', label: 'Active', number: 0 })\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n  const navigate = useNavigate()\n  const renderClient = row => {\n\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={'light-primary'}\n        content={row.name || 'John Doe'}\n      />\n    )\n  }\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const taskCountSts = async (id) => {\n    const response = await axios.post('/organizationusers/userstaskstatus', { id })\n    return response.data.result\n  }\n\n  const deletefn = async (row) => {\n\n    const data = await taskCountSts(row.id)\n\n    if (data.clientcount > 0 || data.taskcount > 0) {\n      return MySwal.fire({\n        title: 'Info!',\n        text: `User have ${data.taskcount} pending task and ${data.clientcount} client, Please reassing to Other Users`,\n        icon: 'info',\n        confirmButtonText: 'Re Assign!',\n        customClass: {\n          confirmButton: 'btn btn-primary',\n          cancelButton: 'btn btn-outline-danger ms-1'\n        },\n        buttonsStyling: false,\n        showCancelButton: true\n      }).then(async (result) => {\n        if (result.value) {\n          if (data.taskcount > 0) {\n            navigate(`/team/view/${row.id}?tab=teamtasks`)\n          } else {\n            navigate(`/team/view/${row.id}?tab=teamclients`)\n          }\n          return false\n        } else {\n          return false\n        }\n      })\n    }\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        const opt = row.usertype === '1' ? 'User' : 'invitation'\n        if (row.usertype === '1') {\n          await dispatch(deleteUser(row.id))\n          await updateSubscription()\n        } else {\n          await dispatch(deleteInvitation(row.id))\n        }\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: `${opt} has been deleted.`,\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const inviteStatusObj = [\n    '',\n    'light-primary',\n    'light-warning',\n    '',\n    'light-danger'\n  ]\n\n  const userStatusObj = [\n    '',\n    'light-success',\n    'light-warning',\n    '',\n    'light-danger'\n  ]\n\n  const statusArr = [\n    '',\n    'Invited',\n    'Inactive',\n    '',\n    'Deleted'\n  ]\n\n  const userstatusArr = [\n    '',\n    'Active',\n    'Inactive',\n    '',\n    'Deleted'\n  ]\n\n  // ** Get data on mount\n  useEffect(async () => {\n    setBlock(true)\n    if (currentStatus.value === '3') {\n      await dispatch(\n        invitationsList({\n          q: searchTerm,\n          page: currentPage,\n          perPage: rowsPerPage,\n          status: currentStatus.value\n        })\n      )\n    } else {\n      await dispatch(\n        userList({\n          q: searchTerm,\n          page: currentPage,\n          perPage: rowsPerPage,\n          status: currentStatus.value\n        })\n      )\n    }\n    setBlock(false)\n  }, [dispatch])\n\n  // ** Function in get data on page change\n  const handlePagination = async page => {\n    setBlock(true)\n    if (currentStatus.value === '3') {\n      await dispatch(\n        invitationsList({\n          q: searchTerm,\n          perPage: rowsPerPage,\n          page: page.selected + 1,\n          status: currentStatus.value\n        })\n      )\n    } else {\n      await dispatch(\n        userList({\n          q: searchTerm,\n          perPage: rowsPerPage,\n          page: page.selected + 1,\n          status: currentStatus.value\n        })\n      )\n    }\n    setBlock(false)\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = async e => {\n    const value = parseInt(e.currentTarget.value)\n    setBlock(true)\n    if (currentStatus.value === '3') {\n      await dispatch(\n        invitationsList({\n          q: searchTerm,\n          perPage: value,\n          page: currentPage,\n          status: currentStatus.value\n        })\n      )\n    } else {\n      await dispatch(\n        userList({\n          q: searchTerm,\n          perPage: value,\n          page: currentPage,\n          status: currentStatus.value\n        })\n      )\n    }\n    setBlock(false)\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = async val => {\n    setSearchTerm(val)\n    setBlock(true)\n    if (currentStatus.value === '3') {\n      await dispatch(\n        invitationsList({\n          q: val,\n          page: currentPage,\n          perPage: rowsPerPage,\n          status: currentStatus.value\n        })\n      )\n    } else {\n      await dispatch(\n        userList({\n          q: val,\n          page: currentPage,\n          perPage: rowsPerPage,\n          status: currentStatus.value\n        })\n      )\n    }\n    setBlock(false)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      status: currentStatus.value,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return []\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <Row>\n            <Col md='3'>\n              <Label for='status-select'>Status</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={async data => {\n                  setCurrentStatus(data)\n                  setBlock(true)\n                  if (data.value === '3') {\n                    await dispatch(\n                      invitationsList({\n                        q: searchTerm,\n                        page: currentPage,\n                        status: data.value,\n                        perPage: rowsPerPage\n                      })\n                    )\n                  } else {\n                    await dispatch(\n                      userList({\n                        q: searchTerm,\n                        page: currentPage,\n                        status: data.value,\n                        perPage: rowsPerPage\n                      })\n                    )\n                  }\n                  setBlock(false)\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card className='overflow-hidden'>\n          <div className='react-dataTable px-2'>\n            <CustomHeader\n              store={store}\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n            />\n            <Table className='table-hover'>\n              <thead>\n                <tr>\n                  <th>User</th>\n                  <th>Role</th>\n                  <th>Designation</th>\n                  <th>Department</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {\n                  dataToRender().map((row, k) => {\n                    return (\n                      <tr key={k}>\n                        <td>\n                          <div className='d-flex justify-content-left align-items-center'>\n                            {renderClient(row)}\n                            <div className='d-flex flex-column'>\n                              <Link\n                                to={`/team/view/${row.id}?tab=teamjobinfo`}\n                                className='user_name text-truncate text-body'\n                              >\n                                <span className='fw-bolder'>{row.name}</span>\n                              </Link>\n                              <small className='text-truncate text-muted mb-0'>{row.email}</small>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <span className='text-capitalize'>{row.rolename}</span>\n                        </td>\n                        <td> <span className='text-capitalize'>{row.designationname}</span></td>\n                        <td> <span className='text-capitalize'>{row.departmentname}</span></td>\n                        <td>\n                          <Badge className='text-capitalize' color={row.usertype === '1' ? userStatusObj[row.status === -1 ? 4 : row.status] : inviteStatusObj[row.status]} pill>\n                            {row.usertype === '1' ? userstatusArr[row.status === -1 ? 4 : row.status] : statusArr[row.status === -1 ? 4 : row.status]}\n                          </Badge>\n                        </td>\n                        <td>\n                          <div className='column-action d-flex align-items-center'>\n                            <Can I={'read'} a={'team'}>\n                              <Col tag={Link} to={`/team/view/${row.id}?tab=teamjobinfo`}>\n                                <Eye\n                                  className='cursor-pointer mt-0' size={16} />\n                              </Col>\n                            </Can>\n                            <UncontrolledDropdown>\n                              <DropdownToggle tag='div' className='btn btn-sm'>\n                                <MoreVertical size={14} className='cursor-pointer' />\n                              </DropdownToggle>\n                              <DropdownMenu>\n                                <Can I={'delete'} a={'team'}>\n                                  <DropdownItem\n                                    tag='a'\n                                    href='/'\n                                    className='w-50'\n                                    onClick={e => {\n                                      e.preventDefault()\n                                      deletefn(row)\n                                    }}\n                                  >\n                                    <Trash2 size={14} className='me-50' />\n                                    <span className='align-middle'>Delete</span>\n                                  </DropdownItem>\n                                </Can>\n                                <Can I={'write'} a={'team'}>\n                                  <DropdownItem\n                                    tag={Link}\n                                    to={`/team/edit/${row.id}`}\n                                    className='w-50'\n                                  >\n                                    <Edit size={14} className='me-50' />\n                                    <span className='align-middle'>Edit</span>\n                                  </DropdownItem>\n                                </Can>\n                              </DropdownMenu>\n                            </UncontrolledDropdown>\n                          </div>\n                        </td>\n                      </tr>\n\n                    )\n                  })\n                }\n              </tbody>\n            </Table>\n            <CustomPagination />\n          </div>\n          {sendSidebarOpen &&\n            <SidebarSendMail toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} />\n          }\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst TeamList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default TeamList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}