{"version":3,"sources":["views/reports/sales/revenuebyuser/columns.js","views/reports/sales/revenuebyuser/index.js"],"names":["renderClient","row","initials","className","color","content","name","charAt","columns","sortable","minWidth","sortField","selector","id","cell","total_Alltime","indianFormattedPrice","total_Week","total_Month","total_Quarter","total_Year","total_Lastyear","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","applyFileter","dataId","exportList","options","startDate","endDate","moment","startOf","valueOf","endOf","subtract","set","add","useState","setStartDate","setEndDate","selectOpt","setSelectOpt","xl","md","sm","htmlFor","type","value","onChange","style","width","classNamePrefix","val","getOptionLabel","option","getOptionValue","find","oj","date","dates","start","end","flag","onDateChange","startdate","selected","enddate","mode","altInput","altFormat","dateFormat","outline","size","onClick","e","target","caret","Receivables","dispatch","useDispatch","store","useSelector","state","salesreport","sort","setSort","setSearchTerm","sortColumn","setSortColumn","setRowsPerPage","setDataId","useEffect","getRevenueByUser","q","perPage","parseInt","currentTarget","exportRevenueByUser","export","handleSort","column","sortDirection","noHeader","subHeader","sortServer","responsive","onSort","sortIcon","data","filters","isFiltered","Object","keys","some","k","length","revenueByUser","dataToRender","subHeaderComponent"],"mappings":"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","file":"static/js/141.b45ae800.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport { indianFormattedPrice } from '@src/helper/functionHelper.js'\n// ** Renders Client Columns\nconst renderClient = row => {\n\n  return (\n    <Avatar\n      initials\n      className='me-1'\n      color={'light-primary'}\n      content={row.name ? row.name?.charAt(0) : 'T'}\n    />\n  )\n}\n\nexport const columns = [\n\n  {\n    name: 'Name',\n    sortable: true,\n    minWidth: '370px',\n    sortField: 'uniqueidentity',\n    selector: row => row.id,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <span className='user_name fw-bolder'>{row.name}</span>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'All Time',\n    sortable: true,\n    minWidth: '108px',\n    selector: row => row.total_Alltime,\n    cell: row => <span className='text-capitalize'>{indianFormattedPrice(row.total_Alltime)}</span>\n  },\n  {\n    name: 'This Week',\n    sortable: true,\n    minWidth: '108px',\n    selector: row => row.total_Week,\n    cell: row => <span className='text-capitalize'>{indianFormattedPrice(row.total_Week || 0)}</span>\n  },\n  {\n    name: 'This Month',\n    sortable: true,\n    minWidth: '108px',\n    selector: row => row.total_Month,\n    cell: row => <span className='text-capitalize'>{indianFormattedPrice(row.total_Month || 0)}</span>\n  },\n  {\n    name: 'This Quarter',\n    sortable: true,\n    minWidth: '108px',\n    selector: row => row.total_Quarter,\n    cell: row => <span className='text-capitalize'>{indianFormattedPrice(row.total_Quarter || 0)}</span>\n  },\n  {\n    name: 'This Year',\n    sortable: true,\n    minWidth: '108px',\n    selector: row => row.total_Year,\n    cell: row => <span className='text-capitalize'>{indianFormattedPrice(row.total_Year || 0)}</span>\n  },\n  {\n    name: 'Last Year',\n    sortable: true,\n    minWidth: '108px',\n    selector: row => row.total_Lastyear,\n    cell: row => <span className='text-capitalize'>{indianFormattedPrice(row.total_Lastyear || 0)}</span>\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getRevenueByUser, exportRevenueByUser } from '../store/index'\nimport { useDispatch, useSelector } from 'react-redux'\n//import axios from '@src/configs/axios/axiosConfig'\nimport Flatpickr from 'react-flatpickr'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Download, MoreVertical } from 'react-feather'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// ** Reactstrap Imports\nimport {\n    Row,\n    Col,\n    Card,\n    Input,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Button\n} from 'reactstrap'\nimport moment from 'moment'\nimport Select from 'react-select'\n// ** Table Header\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm, applyFileter, dataId, exportList }) => {\n    // ** Converts table to CSV\n    const options = [\n        { id: 1, name: 'All Time', startDate: '', endDate: '' },\n        { id: 2, name: 'This Month', startDate: moment().startOf('M').valueOf(), endDate: moment().endOf('M').valueOf() },\n        { id: 3, name: 'Last Month', startDate: moment().subtract(1, 'M').startOf('M').valueOf(), endDate: moment().subtract(1, 'M').endOf('M').valueOf() },\n        { id: 6, name: 'This Year', startDate: moment().set('M', 3).startOf('M').valueOf(), endDate: moment().set('M', 2).add(1, 'Y').endOf('M').valueOf() },\n        { id: 8, name: 'Custom Range', startDate: '', endDate: '' }\n    ]\n\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [selectOpt, setSelectOpt] = useState(1)\n\n    const onDateChange = dates => {\n        const [start, end] = dates\n        setStartDate(start)\n        setEndDate(end)\n\n        if (start && end) {\n            applyFileter({ id: 1, startDate: moment(start).valueOf() || '', endDate: moment(end).valueOf() || \"\", flag: true })\n        }\n    }\n\n    const resetFilter = () => {\n        setStartDate('')\n        setEndDate('')\n        setSelectOpt('')\n        applyFileter({ id: 1, name: 'All Time', startDate: '', endDate: \"\", flag: true })\n    }\n    return (\n        <div className='w-100 me-1 ms-50 mt-2 mb-75'>\n            <Row>\n                <Col xl='6' md='6' sm='6' className='d-flex align-items-center p-0'>\n                    <div className='d-flex align-items-center w-100'>\n                        <label htmlFor='rows-per-page'>Show</label>\n                        <Input\n                            className='mx-50'\n                            type='select'\n                            id='rows-per-page'\n                            value={rowsPerPage}\n                            onChange={handlePerPage}\n                            style={{ width: '5rem' }}\n                        >\n                            <option value='10'>10</option>\n                            <option value='25'>25</option>\n                            <option value='50'>50</option>\n                        </Input>\n                        <label htmlFor='rows-per-page'>Entries</label>\n                        <Col className='me-1'>\n                            <Select\n                                className={'react-select ms-1 w-100'}\n                                classNamePrefix='select'\n                                options={options}\n                                onChange={val => applyFileter(val)}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                                value={options.find(oj => oj.id === selectOpt) || {}}\n                            />\n                        </Col>\n\n                        {\n                            (dataId === 8) &&\n                            <Col className={'ms-1'}>\n                                <Flatpickr\n                                    onChange={(date) => { onDateChange(date) }}\n                                    startdate={startDate}\n                                    selected={startDate}\n                                    enddate={endDate}\n                                    options={{ mode: 'range', altInput: true, altFormat: \"M j, Y\", dateFormat: \"M j, Y\" }}\n                                    className='form-control invoice-edit-input date-picker'\n                                />\n                            </Col>\n                        }\n                        <Button outline color='primary' size='sm' className='ms-1' onClick={() => { resetFilter() }}>Clear Filter</Button>\n                    </div>\n                </Col>\n                <Col\n                    xl='6'\n                    className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n                >\n                    <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                        <label className='mb-0' htmlFor='search-invoice'>\n                            Search:\n                        </label>\n                        <Input\n                            id='search-invoice'\n                            className='ms-50 w-100'\n                            type='text'\n                            value={searchTerm}\n                            onChange={e => handleFilter(e.target.value)}\n                        />\n                    </div>\n\n                    <div className='d-flex align-items-center table-header-actions'>\n\n                        <UncontrolledDropdown className='ms-1'>\n                            <DropdownToggle color='secondary' caret outline>\n                                <MoreVertical className='font-small-4 me-50' />\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={() => { exportList() }} className='w-100'>\n                                    <Download className='font-small-4 me-50' />\n                                    <span className='align-middle'>Export</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nconst Receivables = () => {\n    // ** Store Vars\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.salesreport)\n    // ** States\n    const [sort, setSort] = useState('desc')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [sortColumn, setSortColumn] = useState('createdon')\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [dataId, setDataId] = useState(2)\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n\n    // ** Get data on mount\n    useEffect(async () => {\n        await dispatch(\n            getRevenueByUser({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                perPage: rowsPerPage,\n                startDate,\n                endDate\n            })\n        )\n    }, [dispatch])\n\n    // ** Function in get data on rows per page\n    const handlePerPage = async e => {\n        const value = parseInt(e.currentTarget.value)\n        await dispatch(\n            getRevenueByUser({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                perPage: value,\n                startDate,\n                endDate\n            })\n        )\n        setRowsPerPage(value)\n    }\n\n    const exportList = async () => {\n        await dispatch(\n            exportRevenueByUser({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                startDate,\n                endDate,\n                export: true\n            })\n        )\n    }\n\n    // ** Function in get data on search query change\n    const handleFilter = async val => {\n        setSearchTerm(val)\n        await dispatch(\n            getRevenueByUser({\n                sort,\n                q: val,\n                sortColumn,\n                perPage: rowsPerPage,\n                startDate,\n                endDate\n            })\n        )\n    }\n\n    // ** Table data to render\n    const dataToRender = () => {\n        const filters = {\n            q: searchTerm\n        }\n\n        const isFiltered = Object.keys(filters).some(function (k) {\n            return filters[k].length > 0\n        })\n\n        if (store.revenueByUser.length > 0) {\n            return store.revenueByUser\n        } else if (store.revenueByUser.length === 0 && isFiltered) {\n            return []\n        }\n    }\n\n    const handleSort = async (column, sortDirection) => {\n        setSort(sortDirection)\n        setSortColumn(column.sortField)\n        await dispatch(\n            getRevenueByUser({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                perPage: rowsPerPage,\n                startDate,\n                endDate\n            })\n        )\n    }\n\n    const applyFileter = async (val) => {\n\n        setDataId(val.id)\n\n        if (val.id === 1 && !val.flag) {\n            return\n        }\n        setStartDate(val.startDate)\n        setEndDate(val.endDate)\n        await dispatch(\n            getRevenueByUser({\n                sort,\n                q: searchTerm,\n                sortColumn,\n                perPage: rowsPerPage,\n                startDate: val.startDate,\n                endDate: val.endDate\n            })\n        )\n    }\n\n    return (\n        <Fragment>\n            <Card className='overflow-hidden'>\n                <div className='react-dataTable'>\n                    <DataTable\n                        noHeader\n                        subHeader\n                        sortServer\n                        responsive\n                        columns={columns}\n                        onSort={handleSort}\n                        sortIcon={<ChevronDown />}\n                        className='react-dataTable'\n                        data={dataToRender()}\n                        subHeaderComponent={\n                            <CustomHeader\n                                store={store}\n                                searchTerm={searchTerm}\n                                rowsPerPage={rowsPerPage}\n                                handleFilter={handleFilter}\n                                handlePerPage={handlePerPage}\n                                applyFileter={applyFileter}\n                                dataId={dataId}\n                                exportList={exportList}\n                            />\n                        }\n                    />\n                </div>\n            </Card>\n        </Fragment>\n    )\n}\n\nexport default Receivables\n"],"sourceRoot":""}