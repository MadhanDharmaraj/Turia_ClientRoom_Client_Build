{"version":3,"sources":["views/pages/account-settings/Attendance/store/leavesettings.js","views/pages/account-settings/Attendance/LeaveSetting.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/pages/account-settings/Attendance/store/index.js"],"names":["userId","orgUserId","getLeaveTypes","createAsyncThunk","params","axios","post","response","data","leavetypes","addLeaveTypes","dispatch","getState","rejectWithValue","leavesettings","updateLeaveTypes","deleteLeaveTypes","id","updatedBy","invoiceaccount","createSlice","name","initialState","total","allData","leaveTypeError","leaveTypeSucess","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","errors","activeOrgId","activeOrganizationid","leaveTypeOptions","leaveTypeArr","LeaveTypes","MySwal","withReactContent","Swal","useState","setData","selected","setSelected","designationOptions","setDesignationOptions","designations","setDesignations","formModal","setFormModal","store","useSelector","block","setBlock","Loader","excludeWeekend","setExcludeWeekend","excludeHolidays","setExcludeHolidays","useDispatch","schema","yup","shape","organizationId","default","required","daysCount","leaveType","status","designation","min","createdBy","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","formState","control","setValue","setError","useEffect","handleDesignationChange","e","tempArr","Array","isArray","map","x","test","filter","k","indexOf","resetForm","closeModal","onSubmit","length","pop","toast","success","position","Object","keys","obj","type","message","updateDLeaveSetting","sts1","sts2","addOrgPreference","then","res","arr","catch","getData","undefined","excludeweekend","excludeholidays","getRow","fieldLabel","fieldName","reqflag","md","sm","className","classnames","for","render","field","invalid","colourStyles","multiValue","styles","backgroundColor","color","outline","onClick","card","index","leavetype","dayscount","size","des","includes","openEditModal","isPrimary","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","value","dismiss","DismissReason","cancel","lg","defaultChecked","onChange","isOpen","toggle","blocking","loader","key","tag","Form","options","ref","inputRef","classNamePrefix","find","c","val","getOptionLabel","option","getOptionValue","getSelectRow","isMulti","xs","UILoader","props","children","overlayColor","Tag","style","defaultProps","ComponentSpinner","organizationprefernces","accounts"],"mappings":"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","file":"static/js/67.37d94bbd.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\n\nexport const getLeaveTypes = createAsyncThunk('appLeaveTypes/getLeaveTypes', async params => {\n  const response = await axios.post(`/leavetypes/list`, params)\n  return {\n    params,\n    data: response.data.leavetypes\n  }\n})\n\nexport const addLeaveTypes = createAsyncThunk('appLeaveTypes/addLeaveTypes', async (data, { dispatch, getState, rejectWithValue }) => {\n\n  try {\n    await axios.post(`/leavetypes/create`, data)\n    await dispatch(getLeaveTypes(getState().leavesettings.params))\n    return []\n  } catch (ex) {\n    return rejectWithValue(ex.response)\n  }\n})\n\nexport const updateLeaveTypes = createAsyncThunk('appLeaveTypes/updateLeaveTypes', async (data, { dispatch, getState, rejectWithValue }) => {\n  try {\n    await axios.post(`/leavetypes/update`, data)\n    await dispatch(getLeaveTypes(getState().leavesettings.params))\n    return []\n  } catch (ex) {\n    return rejectWithValue(ex.response)\n  }\n\n})\n\nexport const deleteLeaveTypes = createAsyncThunk('appLeaveTypes/deleteLeaveTypes', async (id, { dispatch, getState }) => {\n  await axios.post('/leavetypes/delete', { id, updatedBy: userId })\n  await dispatch(getLeaveTypes(getState().invoiceaccount.params))\n  return id\n})\n\nexport const appLeaveTypesSlice = createSlice({\n  name: 'appLeaveTypes',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    leaveTypeError: null,\n    leaveTypeSucess: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getLeaveTypes.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.leaveTypeSucess = false\n      })\n      .addCase(addLeaveTypes.rejected, (state, action) => {\n        state.leaveTypeError = action.payload.data.errors\n      })\n      .addCase(updateLeaveTypes.rejected, (state, action) => {\n        state.leaveTypeError = action.payload.data.errors\n      })\n      .addCase(addLeaveTypes.fulfilled, (state) => {\n        state.leaveTypeSucess = true\n      })\n      .addCase(updateLeaveTypes.fulfilled, (state) => {\n        state.leaveTypeSucess = true\n      })\n\n  }\n})\n\nexport default appLeaveTypesSlice.reducer\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport Select from 'react-select'\n// ** Reactstrap Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Label,\n  Input,\n  Button,\n  CardBody,\n  FormFeedback,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody\n} from 'reactstrap'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { getData, addOrgPreference } from './store/index'\nimport { getLeaveTypes, addLeaveTypes, updateLeaveTypes, deleteLeaveTypes } from './store/leavesettings'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useDispatch, useSelector } from 'react-redux'\nimport toast from 'react-hot-toast'\n\nconst leaveTypeOptions = [{ id: '1', name: \"Paid\" }, { id: 2, name: 'Non Paid' }]\nconst leaveTypeArr = [\"\", \"Paid\", \"Non Paid\"]\n\nconst LeaveTypes = () => {\n  const MySwal = withReactContent(Swal)\n  const [data, setData] = useState([])\n  const [selected, setSelected] = useState(null)\n  const [designationOptions, setDesignationOptions] = useState([])\n  const [designations, setDesignations] = useState([])\n  const [formModal, setFormModal] = useState(false)\n  const store = useSelector(state => state.leavesettings)\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const [excludeWeekend, setExcludeWeekend] = useState(null)\n  const [excludeHolidays, setExcludeHolidays] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const schema = yup.object().shape({\n    organizationId: yup.string().default(activeOrgId),\n    name: yup.string().required('Please Enter Name'),\n    daysCount: yup.string().required('Please Enter Days Count'),\n    leaveType: yup.string().required('Please Select Leave Type'),\n    status: yup.number().default(1),\n    designation: yup.array().min(1, 'Please Select Designation'),\n    updatedBy: yup.string().default(userId),\n    createdBy: yup.string().default(userId)\n  })\n\n  const { handleSubmit, formState: { errors }, control, setValue, setError } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  useEffect(() => {\n    setFormModal(false)\n  }, [])\n\n\n  const getDesignation = () => {\n    axios.post('/designations/dropdown').\n      then((res) => {\n        const arr = res.data.designations\n        setDesignationOptions(arr)\n\n      }).catch(() => { })\n  }\n\n  const deletefn = (id) => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteLeaveTypes(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'LeaveTypes has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n        return true\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\n        return false\n      }\n    })\n  }\n\n  const handleDesignationChange = (e) => {\n    setDesignations(e ?? [])\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    const test = tempArr.filter((id, k) => id !== 0 && tempArr.indexOf(id) === k)\n    setValue(\"designation\", test)\n  }\n\n\n  const resetForm = () => {\n\n    setValue('organizationId', activeOrgId)\n    setValue('name', '')\n    setValue('daysCount', '')\n    handleDesignationChange()\n    setValue('id', '')\n    setValue('leaveType', '')\n    setValue('status', 1)\n\n  }\n\n  const closeModal = () => {\n    setFormModal(false)\n    resetForm()\n  }\n\n  const onSubmit = async data => {\n    setBlock(true)\n    if (data.designation.length === designationOptions.length - 1) {\n      data.designation.pop(0)\n    }\n    if (selected !== null) {\n      await dispatch(updateLeaveTypes(data))\n    } else {\n      await dispatch(addLeaveTypes(data))\n    }\n    resetForm()\n    closeModal()\n  }\n\n  useEffect(() => {\n    if (store.leaveTypeSucess) {\n      toast.success(`Leave Types Successfully, ${selected === null ? 'Added' : 'Updated'}`, { position: 'bottom-right' })\n      setBlock(false)\n      setSelected(null)\n      resetForm()\n      closeModal()\n    }\n  }, [store.leaveTypeSucess])\n\n  useEffect(() => {\n    if (store.leaveTypeError !== null) {\n      setBlock(false)\n      Object.keys(store.leaveTypeError).map((obj) => {\n        setError(obj, { type: 'custom', message: store.leaveTypeError[obj][0] })\n      })\n    }\n  }, [store.leaveTypeError])\n\n\n  const updateDLeaveSetting = async (sts1, sts2) => {\n    await addOrgPreference({ excludeWeekend: sts1, excludeHolidays: sts2, createdBy: userId, updatedBy: userId, organizationId: activeOrgId })\n  }\n\n  useEffect(() => {\n    getDesignation()\n  }, [])\n\n  useEffect(async () => {\n\n    await dispatch(getLeaveTypes())\n    const response = await dispatch(getData(activeOrgId))\n    const res = response.payload.data\n    if (res !== undefined) {\n      setExcludeWeekend(res.excludeweekend || false)\n      setExcludeHolidays(res.excludeholidays || false)\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(store.data)\n  }, [store.data])\n\n  const getRow = (fieldLabel, fieldName, reqflag = true) => {\n    return (\n      <Col md={12}>\n        <Label sm='12' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName}>\n          {fieldLabel}\n        </Label>\n        <Col>\n          <Controller\n            id={fieldName}\n            name={fieldName}\n            control={control}\n            render={({ field }) => <Input invalid={errors[fieldName] && true} {...field} />}\n          />\n          {errors[fieldName] && <FormFeedback>{errors[fieldName].message}</FormFeedback>}\n        </Col>\n      </Col>\n    )\n  }\n\n  const getSelectRow = (fieldLabel, fieldName, options, reqflag = false) => {\n    return (\n\n      <Col md={12}>\n        <Label sm='12' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName} >\n          {fieldLabel}\n        </Label>\n        <Col>\n          <Controller\n            control={control}\n            name={fieldName}\n            id={fieldName}\n            render={({ field, ref }) => (\n              <Select\n                inputRef={ref}\n                className={classnames('react-select', { 'is-invalid': errors[fieldName] })}\n                {...field}\n                classNamePrefix='select'\n                options={options}\n                value={options.find(c => { return c.id === field.value })}\n                onChange={val => { return field.onChange(val.id) }}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n              />\n            )}\n\n          />\n          {errors[fieldName] && <FormFeedback className='text-danger'>{errors[fieldName]?.message}</FormFeedback>}\n        </Col>\n      </Col>\n\n    )\n  }\n\n  const openEditModal = card => {\n    setSelected(card)\n    setFormModal(true)\n\n    setValue('organizationId', activeOrgId)\n    setValue('name', card.name)\n    setValue('daysCount', card.dayscount)\n\n    const des = designationOptions.filter((obj) => card.designation.includes(obj.id))\n    handleDesignationChange(des)\n    setValue('id', card.id)\n    setValue('leaveType', card.leavetype)\n    setValue('status', card.status)\n\n  }\n\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody className='py-25'>\n          <Row className='gx-4'>\n            <Col className='d-flex align-items-center'>\n              <h6 className='fw-bolder mb-2'>Leave Types</h6>\n            </Col>\n            <Col className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'>\n              <Button color='primary' outline className='ms-1' onClick={() => { setFormModal(true) }}>\n                Add\n              </Button>\n            </Col>\n          </Row>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Leave Type</th>\n                <th>No of Day's</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((card, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{card.name}</td>\n                    <td>{leaveTypeArr[card.leavetype]}</td>\n                    <td>{card.dayscount}</td>\n                    <td>\n                      <Button size='sm' outline color='primary' className='me-75' onClick={() => openEditModal(card)}>\n                        Edit\n                      </Button>\n                      {!card.isPrimary &&\n                        <Button size='sm' outline onClick={() => { deletefn(card.id) }}>Delete</Button>\n                      }\n                    </td>\n                  </tr>\n                )\n              }\n              )}\n            </tbody>\n          </Table>\n\n          <Col lg='12' className='mt-2 mt-lg-0'>\n            <h6 className='fw-bolder'>Leave Settings</h6>\n            <div className='demo-inline-spacing'>\n              {excludeWeekend !== null &&\n                <div className='form-check form-switch'>\n                  <Input type='switch' name='excludeWeekend' id='exampleCustomSwitch' defaultChecked={excludeWeekend} onChange={() => { updateDLeaveSetting(!excludeWeekend, excludeHolidays) }} />\n                  <Label for='exampleCustomSwitch' className='form-check-label'>\n                    Exclude Weekend for Leave Calculation\n                  </Label>\n                </div>\n              }\n              {excludeHolidays !== null &&\n                <div className='form-check form-switch'>\n                  <Input type='switch' name='excludeHolidays' id='exampleCustomSwitchDisabled' defaultChecked={excludeHolidays} onChange={() => { updateDLeaveSetting(excludeWeekend, !excludeHolidays) }} />\n                  <Label for='exampleCustomSwitchDisabled' className='form-check-label'>\n                    Exclude Holidays for Leave Calculation\n                  </Label>\n                </div>\n              }\n            </div>\n          </Col>\n        </CardBody>\n      </Card>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <UILoader blocking={block} loader={<Loader />}>\n          <ModalHeader toggle={() => closeModal()}>Holidays</ModalHeader>\n          <ModalBody>\n            {\n              Object.keys(errors).map((key) => {\n\n                return <FormFeedback key={key}>${errors[key]?.message}</FormFeedback>\n\n              })\n            }\n            <Col lg='12'>\n              {\n                Object.keys(errors).map((key) => {\n\n                  return <FormFeedback key={key}>${errors[key]?.message}</FormFeedback>\n\n                })\n              }\n              <Row tag={Form} className='gx-2 gy-1' onSubmit={handleSubmit(onSubmit)}>\n\n                {getRow('Name', 'name', true)}\n\n                {getSelectRow('Leave Type', 'leaveType', leaveTypeOptions, true)}\n\n                {getRow('No of Days', 'daysCount', true)}\n\n                <Col md={12}>\n                  <Label sm='12' className={classnames(`form-label required`)} for={`designation`} >\n                    Applicable Designation\n                  </Label>\n                  <Col>\n                    <Controller\n                      control={control}\n                      name=\"designation\"\n                      id=\"designation\"\n                      render={({ field, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.designation })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={designationOptions}\n                          isMulti={true}\n                          onChange={handleDesignationChange}\n                          value={designations} // set selected values\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors['designation'] && <FormFeedback className='text-danger'>{errors['designation']?.message}</FormFeedback>}\n                  </Col>\n                </Col>\n\n                <Col className='mt-2 pt-1' xs={12}>\n                  <Button type='submit' className='me-1' color='primary'>\n                    Submit\n                  </Button>\n                  <Button type='button' className='me-1' color='warning' onClick={() => closeModal()}>\n                    Cancel\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </ModalBody>\n        </UILoader>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default LeaveTypes\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\n\nexport const getData = createAsyncThunk('appInvoiceSetting/getData', async organizationId => {\n  const response = await axios.post(`/organizationprefernces/get`, { organizationId })\n  return {\n    data: response.data.organizationprefernces\n  }\n})\n\nexport const addOrgPreference = createAsyncThunk('appInvoiceSetting/addOrgPreference', async (data, { }) => {\n\n  await axios.post(`/organizationprefernces/createandupdate`, data)\n  return ''\n\n})\n\nexport const appInvoiceAccountSlice = createSlice({\n  name: 'appInvoiceSetting',\n  initialState: {\n    accounts: [],\n    total: 1,\n    params: {},\n    allData: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getData.fulfilled, (state, action) => {\n        state.accounts = action.payload.data\n        state.params = action.payload.params\n      })\n\n  }\n})\n\nexport default appInvoiceAccountSlice.reducer\n"],"sourceRoot":""}