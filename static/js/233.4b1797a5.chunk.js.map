{"version":3,"sources":["views/apps/dsc-license/store/index.js","views/apps/dsc-license/list/Table.js","views/apps/dsc-license/list/index.js"],"names":["userId","orgUserId","getData","createAsyncThunk","params","axios","post","response","data","digitalsignatures","totalPages","total","getLicenseData","getDsc","id","DSCList","contactid","dateFormat","dsc","dispatch","getState","digitalsignature","updatedBy","val","length","moment","format","unix","exportDSC","status","location","result","map","obj","uniqueidentity","contactname","email","contact","password","issueddate","expirydate","dsclocation","XLSX","json_to_sheet","origin","skipHeader","ws","Heading","sheet_add_aoa","wb","Sheets","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","createSlice","name","initialState","allData","selectedDigitalSignature","DSCLists","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","updateRefreshList","currentStatus","statusArrOptions","handleStatus","exportList","useState","formModal","setFormModal","useParams","className","isOpen","toggle","updateRefresh","htmlFor","value","onChange","style","width","md","sm","lg","label","isClearable","options","classNamePrefix","theme","selectThemeColors","getOptionLabel","option","getOptionValue","placeholder","e","target","Can","I","a","color","onClick","tag","Link","to","caret","outline","DigitalSignatureList","useDispatch","store","useSelector","sort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setRowsPerPage","setCurrentStatus","currentLocation","selectedDSC","setSelectedDSC","statusArr","block","setBlock","Loader","q","page","perPage","useEffect","handlePagination","selected","parseInt","currentTarget","CustomPagination","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","blocking","loader","setFreshList","responsive","filters","isFiltered","Object","keys","some","k","slice","dataToRender","item","index","licenseno","undefined","files","file","href","driveid","originalfilename","split","substr","extension","statusColArr","openEditModal","size","deletefn","Trash2","ServiceList","Table"],"mappings":"mRAQMA,EAASC,cAEFC,EAAUC,YAAiB,8BAA6B,iDAAE,WAAMC,GAAM,iGAC1DC,IAAMC,KAAK,0BAA2BF,GAAO,OAAtD,OAARG,EAAQ,yBACP,CACLH,SACAI,KAAMD,EAASC,KAAKC,kBAAkBA,kBACtCC,WAAYH,EAASC,KAAKC,kBAAkBE,QAC7C,2CACF,mDAPoE,IASxDC,EAAiBT,YAAiB,qCAAoC,iDAAE,WAAMC,GAAM,iGACxEC,IAAMC,KAAK,iCAAkCF,GAAO,OAA7D,OAARG,EAAQ,yBACP,CACLH,SACAI,KAAMD,EAASC,KAAKC,kBAAkBA,kBACtCC,WAAYH,EAASC,KAAKC,kBAAkBE,QAC7C,2CACF,mDAPkF,IAStEE,EAASV,YAAiB,6BAA4B,iDAAE,WAAMW,GAAE,iGACpDT,IAAMC,KAAK,yBAA0B,CAAEQ,OAAK,OAArD,OAARP,EAAQ,yBACPA,EAASC,KAAKC,mBAAiB,2CACvC,mDAHkE,IAKtDM,EAAUZ,YAAiB,8BAA6B,iDAAE,WAAOa,GAAS,iGAC9DX,IAAMC,KAAK,kCAAmC,CAAEU,cAAY,OAArE,OAART,EAAQ,yBACP,CAAEC,KAAMD,EAASC,KAAKC,oBAAmB,2CACjD,mDAHoE,IAmC/DQ,GA9BgBd,YAAiB,6BAA4B,iDAAE,WAAOe,EAAI,GAAD,mFAAsB,OAAlBC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,SAC7Ff,IAAMC,KAAK,4BAA6BY,GAAI,uBAC5CC,EAASjB,EAAQkB,IAAWC,iBAAiBjB,SAAQ,gCACpD,IAAE,2CACV,qDAJkE,IAM1CD,YAAiB,gCAA+B,iDAAE,WAAOe,EAAI,GAAD,mFAAsB,OAAlBC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,SACnGf,IAAMC,KAAK,4BAA6BY,GAAI,uBAC5CC,EAASjB,EAAQkB,IAAWC,iBAAiBjB,SAAQ,gCACpD,IAAE,2CACV,qDAJwE,IAMnCD,YAAiB,6CAA4C,iDAAE,WAAOW,EAAG,GAAD,0GACtGT,IAAMC,KAAK,4BAA6B,CAAEQ,KAAIQ,UAAWtB,IAAS,uBAClEmB,SAASjB,EAAQkB,WAAWC,iBAAiBjB,SAAQ,gCACpD,MAAI,2CACZ,qDAJkG,IAMzDD,YAAiB,6CAA4C,iDAAE,WAAOW,EAAG,GAAD,mFAAsB,OAAlBK,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,SAChIf,IAAMC,KAAK,4BAA6B,CAAEQ,KAAIQ,UAAWtB,IAAS,uBAClEmB,EAASjB,EAAQkB,IAAWC,iBAAiBjB,SAAQ,gCACpD,MAAI,2CACZ,qDAJsG,IAMtED,YAAiB,wCAAuC,iDAAE,WAAOK,EAAK,GAAD,mFAAsB,OAAlBW,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,SACpHf,IAAMC,KAAK,oCAAqCE,GAAK,uBACrDW,EAASjB,EAAQkB,IAAWC,iBAAiBjB,SAAQ,gCACpD,MAAI,2CACZ,qDAJwF,IAMtE,SAACmB,GAClB,OAAmB,KAAfA,EAAIC,OACCC,IAAOF,EAAK,KAAKG,OAAO,aAExBD,IAAOE,KAAKJ,GAAKG,OAAO,YAGnC,GAEaE,EAAYzB,YAAiB,qBAAoB,iDAAE,WAAMC,GAAM,iHACnDC,IAAMC,KAAK,mCAAoCF,GAAO,OAiB3E,OAjBIG,EAAQ,OACRsB,EAAS,CAAC,GAAI,SAAU,WAAY,WACpCC,EAAW,CAAC,GAAI,SAAU,eAC1BC,EAASxB,EAASC,KAAKC,kBAAkBuB,KAAI,SAACC,GAElD,IAAMzB,EAAO,CAAC,EAWd,OAVAA,EAAS,GAAIyB,EAAIC,eACjB1B,EAAiB,WAAIyB,EAAIE,YACzB3B,EAAY,MAAIyB,EAAIG,MACpB5B,EAAc,QAAIyB,EAAII,QACtB7B,EAAe,SAAIyB,EAAIK,SACvB9B,EAAiB,WAAIS,EAAWgB,EAAIM,YACpC/B,EAAiB,WAAIS,EAAWgB,EAAIO,YACpChC,EAAe,SAAIsB,EAASG,EAAIQ,aAChCjC,EAAa,OAAIqB,EAAOI,EAAIJ,QAErBrB,CACT,IAAE,SAEekC,QAAWC,cAAcZ,EAAQ,CAAEa,OAAQ,KAAMC,YAAY,IAAO,OAA/EC,EAAE,OACFC,EAAU,CAAC,CAAC,KAAM,cAAe,eAAgB,UAAW,WAAY,cAAe,cAAe,WAAY,WACxHL,QAAWM,cAAcF,EAAIC,GACvBE,EAAK,CAAEC,OAAQ,CAAE1C,KAAMsC,GAAMK,WAAY,CAAC,SAC1CC,EAAcV,QAAWO,EAAI,CAAEI,SAAU,OAAQC,KAAM,UACvD9C,EAAO,IAAI+C,KAAK,CAACH,GAAc,CAAEE,KAAM,oFAC7CE,SAAiBhD,EAAM,iCAAgC,4CAExD,mDA5B6D,I,GA8BtBiD,YAAY,CAClDC,KAAM,sBACNC,aAAc,CACZnD,KAAM,GACNG,MAAO,EACPP,OAAQ,CAAC,EACTwD,QAAS,GACTC,yBAA0B,KAC1BC,SAAU,IAEZC,SAAU,CAAC,EACXC,cAAe,SAAAC,GACbA,EACGC,QAAQhE,EAAQiE,WAAW,SAACC,EAAOC,GAClCD,EAAM5D,KAAO6D,EAAOC,QAAQ9D,KAC5B4D,EAAMhE,OAASiE,EAAOC,QAAQlE,OAC9BgE,EAAMzD,MAAQ0D,EAAOC,QAAQ5D,WAC7B0D,EAAMN,SAAW,EACnB,IACCI,QAAQtD,EAAeuD,WAAW,SAACC,EAAOC,GACzCD,EAAM5D,KAAO6D,EAAOC,QAAQ9D,KAC5B4D,EAAMhE,OAASiE,EAAOC,QAAQlE,OAC9BgE,EAAMzD,MAAQ0D,EAAOC,QAAQ5D,WAC7B0D,EAAMN,SAAW,EACnB,IACCI,QAAQnD,EAAQoD,WAAW,SAACC,EAAOC,GAClCD,EAAMN,SAAWO,EAAOC,QAAQ9D,IAClC,IACC0D,QAAQrD,EAAOsD,WAAW,SAACC,EAAOC,GACjCD,EAAMP,yBAA2BQ,EAAOC,QACxCF,EAAMN,SAAW,EACnB,GACJ,IAG6C,Q,2ICvGzCS,EAAe,SAAH,GAAgJ,IAA1IC,EAAa,EAAbA,cAAeC,EAAW,EAAXA,YAAaC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAAYC,EAAiB,EAAjBA,kBAAmBC,EAAa,EAAbA,cAAeC,EAAgB,EAAhBA,iBAAkBC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAC9I,EAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KACtBrE,EAAOsE,cAAPtE,GAQR,OACE,sBAAKuE,UAAU,mDAAkD,UAC/D,eAAC,IAAK,CAACC,OAAQJ,EAAWK,OAAQ,kBAAMJ,GAAcD,EAAU,EAAEG,UAAU,kCAAiC,UAE3G,cAAC,IAAW,CAACE,OAAQ,kBAAMJ,GAAcD,EAAU,EAAC,SAAC,sBACrD,cAAC,IAAS,UACR,cAAC,IAAM,CAACM,cAbM,SAACjE,GACjBA,IACF4D,GAAa,GACbP,GAAkB,GAEtB,SAWI,cAAC,IAAG,CAACS,UAAU,iDAAgD,SAC7D,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOI,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJJ,UAAU,QACV/B,KAAK,SACLxC,GAAG,gBACH4E,MAAOjB,EACPkB,SAAUnB,EACVoB,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQH,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,UAErB,uBAAOD,QAAQ,gBAAe,SAAC,iBAInC,eAAC,IAAG,CAACJ,UAAU,sKAAqK,WAEhLvE,GACA,eAAC,WAAQ,WACP,cAAC,IAAG,CAACgF,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGX,UAAU,OAAM,SACzC,cAAC,IAAM,CACLY,MAAO,OACPC,aAAa,EACbR,MAAOb,EACPsB,QAASrB,EACTO,UAAU,eACVe,gBAAgB,SAChBC,MAAOC,IACPC,eAAgB,SAACC,GAAM,OAAKA,EAAO9C,IAAI,EACvC+C,eAAgB,SAACD,GAAM,OAAKA,EAAO1F,EAAE,EACrC6E,SAAU,SAACnF,GAAWuE,EAAavE,EAAM,MAG7C,cAAC,IAAG,CAACsF,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGX,UAAU,OAAM,SACzC,cAAC,IAAK,CACJvE,GAAG,iBACHuE,UAAU,GACV/B,KAAK,OACLoD,YAAY,SACZhB,MAAOf,EACPgB,SAAU,SAAAgB,GAAC,OAAIjC,EAAaiC,EAAEC,OAAOlB,MAAM,SAKnD,eAAC,IAAG,CAACL,UAAU,8GAA6G,UAC1H,eAACwB,EAAA,EAAG,CAACC,EAAG,QAASC,EAAG,oBAAoB,UACrCjG,GACC,cAAC,IAAM,CAACuE,UAAU,eAAe2B,MAAM,UAAUC,QAAS,WAAQ9B,GAAcD,EAAW,EAAE,SAAC,SAI9FpE,GACA,cAAC,IAAM,CAACuE,UAAU,eAAe2B,MAAM,UAAUE,IAAKC,IAAMC,GAAI,yBAAyB,SAAE,WAK/F,eAAC,KAAoB,CAAC/B,UAAU,OAAM,UACpC,cAAC,IAAc,CAAC2B,MAAM,YAAYK,OAAK,EAACC,SAAO,EAACjC,UAAU,OAAM,SAC9D,cAAC,IAAY,CAACA,UAAU,mBAE1B,eAAC,IAAY,WACX,cAACwB,EAAA,EAAG,CAACC,EAAG,QAASC,EAAG,oBAAoB,SACtC,eAAC,IAAY,CAAC1B,UAAU,QAAQ6B,IAAKC,IAAMC,GAAG,4BAA2B,UACvE,cAAC,IAAW,CAAC/B,UAAU,uBACvB,sBAAMA,UAAU,eAAc,SAAC,gBAGnC,cAACwB,EAAA,EAAG,CAACC,EAAG,QAASC,EAAG,oBAAoB,SACtC,eAAC,IAAY,CAAC1B,UAAU,QAAQ4B,QAAS,WAAQjC,GAAa,EAAE,UAC9D,cAAC,IAAQ,CAACK,UAAU,uBACpB,sBAAMA,UAAU,eAAc,SAAC,8BASjD,EA0TekC,EAxTc,WAE3B,IAAMpG,EAAWqG,cACXC,EAAQC,aAAY,SAAAtD,GAAW,OAAOA,EAAM/C,gBAAiB,IAC3DP,EAAOsE,cAAPtE,GAER,EAAemE,mBAAS,QAAjB0C,EAAwB,iBAApB,GACX,EAAoC1C,mBAAS,IAAG,mBAAzCN,EAAU,KAAEiD,EAAa,KAChC,EAAsC3C,mBAAS,GAAE,mBAA1C4C,EAAW,KAAEC,EAAc,KAClC,EAAqB7C,mBAAS,aAAvB8C,EAAmC,iBAAzB,GACjB,EAAsC9C,mBAASnE,EAAK,EAAI,IAAG,mBAApD2D,EAAW,KAAEuD,EAAc,KAClC,EAA0C/C,mBAAS,CAAEnE,GAAI,GAAI4C,KAAM,kBAAkB,mBAA9EmB,EAAa,KAAEoD,EAAgB,KACtC,EAA0BhD,mBAAS,CAAEnE,GAAI,GAAI4C,KAAM,QAA5CwE,EAAoD,iBAArC,GACtB,EAAkCjD,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAAsCF,mBAAS,MAAK,mBAA7CkD,EAAW,KAAEC,EAAc,KAG5BC,EAAY,CAChB,GACA,SACA,WACA,WAUIpH,EAAa,SAACyE,GAClB,OAAqB,KAAjBA,EAAMlE,OACDC,IAAOiE,EAAO,KAAKhE,OAAO,gBAE1BD,IAAOE,KAAK+D,GAAOhE,OAAO,eAGrC,EAEA,EAA0BuD,oBAAS,GAAM,mBAAlCqD,GAAK,KAAEC,GAAQ,KAChBC,GAAS,WACb,OACE,cAAC,WAAQ,UACP,cAAC,IAAO,KAGd,EAEMxD,GAAU,iDAAG,wGACX7D,EACJS,EAAU,CACR+F,OACAI,aACAU,EAAG9D,EACH+D,KAAMb,EACNc,QAASlE,EACT5C,OAAQgD,EAAc/D,GACtBgB,SAAUoG,EAAgBpH,MAE7B,2CACF,kBAZe,mCAehB8H,oBAAS,gCAAC,wFACM,OAAdL,IAAS,GAAK,SACRpH,EACJP,EAAe,CACb+G,OACAI,aACAU,EAAG9D,EACH+D,KAAMb,EACNc,QAASlE,EACT5C,OAAQgD,EAAc/D,GACtBgB,SAAUoG,EAAgBpH,MAE7B,OACDyH,IAAS,GAAM,2CACd,CAACpH,IAGJ,IAAM0H,GAAgB,iDAAG,WAAMH,GAAI,2EACnB,OAAdH,IAAS,GAAK,SACRpH,EACJP,EAAe,CACb+G,OACAI,aACAU,EAAG9D,EACHgE,QAASlE,EACTiE,KAAMA,EAAKI,SAAW,EACtBjH,OAAQgD,EAAc/D,GACtBgB,SAAUoG,EAAgBpH,MAE7B,OACDyH,IAAS,GACTT,EAAeY,EAAKI,SAAW,GAAE,2CAClC,gBAfqB,sCAkBhBtE,GAAa,iDAAG,WAAMmC,GAAC,iFAEb,OADRjB,EAAQqD,SAASpC,EAAEqC,cAActD,OACvC6C,IAAS,GAAK,SACRpH,EACJP,EAAe,CACb+G,OACAI,aACAU,EAAG9D,EACHgE,QAASjD,EACTgD,KAAMb,EACNhG,OAAQgD,EAAc/D,GACtBgB,SAAUoG,EAAgBpH,MAE7B,OACDkH,EAAetC,GACf6C,IAAS,GAAM,2CAChB,gBAhBkB,sCAmBb7D,GAAY,iDAAG,WAAMnD,GAAG,2EAEd,OADdqG,EAAcrG,GACdgH,IAAS,GAAK,SACRpH,EACJP,EAAe,CACb+G,OACAc,EAAGlH,EACHwG,aACAW,KAAMb,EACNc,QAASlE,EACT5C,OAAQgD,EAAc/D,GACtBgB,SAAUoG,EAAgBpH,MAE7B,OACDyH,IAAS,GAAM,2CAChB,gBAfiB,sCAiBZxD,GAAY,iDAAG,WAAMxD,GAAG,2EAEd,OADd0G,EAAiB1G,GACjBgH,IAAS,GAAK,SACRpH,EACJP,EAAe,CACb+G,OACAc,EAAG9D,EACHoD,aACAW,KAAMb,EACNc,QAASlE,EACT5C,OAAQN,EAAIT,GACZgB,SAAUoG,EAAgBpH,MAE7B,OACDyH,IAAS,GAAM,2CAChB,gBAfiB,sCAmBZU,GAAmB,WACvB,IAAMC,EAAQC,OAAOC,KAAKC,KAAK5B,EAAM9G,MAAQ8D,IAE7C,OACE,cAAC,IAAa,CACZ6E,cAAe,GACfC,UAAW,GACXC,UAAWN,GAAS,EACpBO,gBAAgB,SAChBC,UAA2B,IAAhB7B,EAAoBA,EAAc,EAAI,EACjD8B,aAAc,SAAAjB,GAAI,OAAIG,GAAiBH,EAAK,EAC5CkB,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DAG1B,EAsBMtF,GAAiB,iDAAG,WAAOrD,GAAG,+EAC9BA,EAAI,CAAD,eACS,OAAdgH,IAAS,GAAK,SACRpH,EACJP,EAAe,CACb+G,OACAc,EAAG9D,EACHoD,aACAW,KAAMb,EACNc,QAASlE,EACT5C,OAAQgD,EAAc/D,GACtBgB,SAAUoG,EAAgBpH,MAE7B,OACDyH,IAAS,GAAM,2CAElB,gBAhBsB,sCAyBvB,OACE,cAAC,WAAQ,UACP,cAAC,IAAQ,CAAC4B,SAAU7B,GAAO8B,OAAQ,cAAC5B,GAAM,IAAI,SAC5C,cAAC,IAAI,CAACnD,UAAU,kBAAiB,SAC/B,eAAC,KAAG,WACF,cAAC,EAAY,CACXV,WAAYA,EACZF,YAAaA,EACbC,aAAcA,GACdF,cAAeA,GACfI,kBAAmBA,GACnBE,iBAhNa,CACvB,CAAEhE,GAAI,EAAG4C,KAAM,cACf,CAAE5C,GAAI,EAAG4C,KAAM,UACf,CAAE5C,GAAI,EAAG4C,KAAM,YACf,CAAE5C,GAAI,EAAG4C,KAAM,YA6MLmB,cAAeA,EACfE,aAAcA,GACdC,WAAYA,KAGd,eAAC,IAAK,CAACM,OAAQJ,EAAWK,OAAQ,kBAAMJ,GAAcD,EAAU,EAAEG,UAAU,kCAAiC,UAE3G,cAAC,IAAW,CAACE,OAAQ,kBAAMJ,GAAcD,EAAU,EAAC,SAAC,sBACrD,cAAC,IAAS,UACR,cAAC,IAAO,CAACiD,YAAaA,EAAakC,aA5B5B,WACnBlF,GAAa,GACbiD,EAAe,KAEjB,SA4BU,eAAC,KAAK,CAAC/C,UAAU,wCAAwCiF,YAAU,YACjE,gCACE,+BACE,oBAAIjF,UAAU,aAAY,SAAC,SAC3B,6BAAI,WACJ,6BAAI,eACJ,6BAAI,gBACJ,6BAAI,UACJ,6BAAI,WACJ,6BAAI,gBAGR,gCAjFS,WACnB,IAAMkF,EAAU,CACd1I,OAAQgD,EAAc/D,GACtB2H,EAAG9D,GAGC6F,EAAaC,OAAOC,KAAKH,GAASI,MAAK,SAAUC,GACrD,OAAOL,EAAQK,GAAGpJ,OAAS,CAC7B,IAEA,OAAIiG,EAAMjH,KAAKgB,OAAS,EACfiG,EAAMjH,KACkB,IAAtBiH,EAAMjH,KAAKgB,QAAgBgJ,EAC7B,GAEA/C,EAAM7D,QAAQiH,MAAM,EAAGpG,EAElC,CAiEeqG,GAAe9I,KAAI,SAAC+I,EAAMC,GAAW,IAAD,EACnC,OACE,+BACE,oBAAI3F,UAAU,aAAY,SAAE0F,EAAKrH,OACjC,6BACGqH,EAAKE,YAER,kCACuBC,IAApBH,EAAKxI,WAA2BtB,EAAW8J,EAAKxI,YAAc,KAEjE,6BACGwI,EAAKvI,WAAa,EAAIvB,EAAW8J,EAAKvI,YAAc,KAEvD,oBAAI6C,UAAU,aAAY,SAEZ,QAFY,EAEtB0F,EAAKI,aAAK,aAAV,EAAYnJ,KAAI,SAACoJ,EAAMR,GACrB,OACE,cAAC,IAAK,CAASvF,UAAU,QAAQ2B,MAAM,UAAS,SAC9C,mBAAGJ,OAAO,SAASvB,UAAU,mCAAmCgG,KAAI,6CAAwCD,EAAKE,QAAO,gEAA+D,SAAEF,EAAKG,iBAAiBC,MAAM,KAAK,GAAGhK,OAAS,EAAC,UAAM4J,EAAKG,iBAAiBC,MAAM,KAAK,GAAGC,OAAO,EAAG,IAAG,YAAIL,EAAKM,WAAcN,EAAKG,oBADhTX,EAIhB,MAGJ,6BACE,eAAC,IAAK,CAAC5D,MAAO2E,aAAaZ,EAAKlJ,QAAQ,UAAC,IAAEwG,EAAU0C,EAAKlJ,aAE5D,6BACE,sBAAKwD,UAAU,0CAAyC,UACtD,cAAC,IAAG,CACF4B,QAAS,WAAQ2E,cAAcb,EAAM,EAAE,SACvC,cAAC,IAAI,CAAC1F,UAAU,sBAAsBwG,KAAM,OAE9C,cAAC,IAAG,CAAC7F,GAAI,EACPiB,QAAS,WAAQ6E,SAASf,EAAKjK,GAAI,EAAE,SACrC,cAACiL,OAAM,CACL1G,UAAU,2BAA2BwG,KAAM,cAlC5Cb,EAwCb,SAGJ,cAAC/B,GAAgB,YAM7B,E,OC1be+C,UARK,WAClB,OACE,qBAAK3G,UAAU,gBAAe,SAC5B,cAAC4G,EAAK,KAGZ,C","file":"static/js/233.4b1797a5.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport * as FileSaver from \"file-saver\"\nimport * as XLSX from \"xlsx\"\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nconst userId = orgUserId()\n\nexport const getData = createAsyncThunk('appDigitalSignature/getData', async params => {\n  const response = await axios.post('/digitalsignatures/list', params)\n  return {\n    params,\n    data: response.data.digitalsignatures.digitalsignatures,\n    totalPages: response.data.digitalsignatures.total\n  }\n})\n\nexport const getLicenseData = createAsyncThunk('appDigitalSignature/getLicenseData', async params => {\n  const response = await axios.post('/digitalsignatures/licenselist', params)\n  return {\n    params,\n    data: response.data.digitalsignatures.digitalsignatures,\n    totalPages: response.data.digitalsignatures.total\n  }\n})\n\nexport const getDsc = createAsyncThunk('appDigitalSignature/getDsc', async id => {\n  const response = await axios.post('/digitalsignatures/get', { id })\n  return response.data.digitalsignatures\n})\n\nexport const DSCList = createAsyncThunk('appDigitalSignature/DSCList', async (contactid) => {\n  const response = await axios.post(`/digitalsignatures/listbyclient`, { contactid })\n  return { data: response.data.digitalsignatures }\n})\n\nexport const addDsc = createAsyncThunk('appDigitalSignature/addDsc', async (dsc, { dispatch, getState }) => {\n  await axios.post('/digitalsignatures/create', dsc)\n  await dispatch(getData(getState().digitalsignature.params))\n  return ''\n})\n\nexport const updateDSC = createAsyncThunk('appDigitalSignature/updateDsc', async (dsc, { dispatch, getState }) => {\n  await axios.post('/digitalsignatures/update', dsc)\n  await dispatch(getData(getState().digitalsignature.params))\n  return ''\n})\n\nexport const deleteDigitalSignature = createAsyncThunk('appDigitalSignature/deleteDigitalSignature', async (id, { }) => {\n  await axios.post('/digitalsignatures/delete', { id, updatedBy: userId })\n  await dispatch(getData(getState().digitalsignature.params))\n  return null\n})\n\nexport const deleteDigitalSignaturelist = createAsyncThunk('appDigitalSignature/deleteDigitalSignature', async (id, { dispatch, getState }) => {\n  await axios.post('/digitalsignatures/delete', { id, updatedBy: userId })\n  await dispatch(getData(getState().digitalsignature.params))\n  return null\n})\n\nexport const updateDSCLocation = createAsyncThunk('appDigitalSignature/updateDSCLocation', async (data, { dispatch, getState }) => {\n  await axios.post('/digitalsignatures/updatelocation', data)\n  await dispatch(getData(getState().digitalsignature.params))\n  return null\n})\n\nconst dateFormat = (val) => {\n  if (val.length === 13) {\n    return moment(val, 'x').format('MMM DD, Y')\n  } else {\n    return moment.unix(val).format('MMM DD, Y')\n  }\n\n}\n\nexport const exportDSC = createAsyncThunk('appTasks/exportDSC', async params => {\n  const response = await axios.post(`/digitalsignatures/exportToExcel`, params)\n  const status = ['', 'Active', 'Inactive', 'Expired']\n  const location = ['', 'Office', 'with Client']\n  const result = response.data.digitalsignatures.map((obj) => {\n\n    const data = {}\n    data['id'] = obj.uniqueidentity\n    data['clientname'] = obj.contactname\n    data['email'] = obj.email\n    data['contact'] = obj.contact\n    data['password'] = obj.password\n    data['issueddate'] = dateFormat(obj.issueddate)\n    data['expirydate'] = dateFormat(obj.expirydate)\n    data['location'] = location[obj.dsclocation]\n    data['status'] = status[obj.status]\n\n    return data\n  })\n\n  const ws = await XLSX.utils.json_to_sheet(result, { origin: 'A2', skipHeader: true })\n  const Heading = [['ID', 'Client Name', 'Client Email', 'Conatct', 'Password', 'Issued Date', 'Expiry Date', 'Location', 'Status']]\n  XLSX.utils.sheet_add_aoa(ws, Heading)\n  const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] }\n  const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" })\n  const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n  FileSaver.saveAs(data, 'Digital_Signature_Report.xlsx')\n\n})\n\nexport const appDigitalSignatureSlice = createSlice({\n  name: 'appDigitalSignature',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    selectedDigitalSignature: null,\n    DSCLists: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getData.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n        state.DSCLists = []\n      })\n      .addCase(getLicenseData.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n        state.DSCLists = []\n      })      \n      .addCase(DSCList.fulfilled, (state, action) => {\n        state.DSCLists = action.payload.data\n      })\n      .addCase(getDsc.fulfilled, (state, action) => {\n        state.selectedDigitalSignature = action.payload\n        state.DSCLists = []\n      })\n  }\n})\n\nexport default appDigitalSignatureSlice.reducer\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Store & Actions\nimport { getLicenseData, exportDSC} from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport AddDSC from '@src/views/apps/digital-signature/add/AddCard.js'\nimport EditDSC from '@src/views/apps/digital-signature/edit/EditCard.js'\n\n\nimport {\n  Badge,\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n// ** Styles\nimport Select from 'react-select'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\nimport { Download, Edit, Edit2, MoreVertical, Trash, UploadCloud } from 'react-feather'\n\n// ** Table Header\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm, updateRefreshList, currentStatus, statusArrOptions, handleStatus, exportList }) => {\n  const [formModal, setFormModal] = useState(false)\n  const { id } = useParams()\n  const updateRefresh = (val) => {\n    if (val) {\n      setFormModal(false)\n      updateRefreshList(true)\n    }\n  }\n\n  return (\n    <div className='d-flex flex-wrap flex-md-nowrap p-2 p-md-1 my-75'>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered modal-dsc'>\n\n        <ModalHeader toggle={() => setFormModal(!formModal)}>Digital Signature</ModalHeader>\n        <ModalBody>\n          <AddDSC updateRefresh={updateRefresh} />\n        </ModalBody>\n      </Modal>\n      <Col className='col-12 col-md-6 d-flex align-items-center px-1'>\n        <div className='d-flex align-items-center w-100'>\n          <label htmlFor='rows-per-page'>Show</label>\n          <Input\n            className='mx-50'\n            type='select'\n            id='rows-per-page'\n            value={rowsPerPage}\n            onChange={handlePerPage}\n            style={{ width: '5rem' }}\n          >\n            <option value='10'>10</option>\n            <option value='25'>25</option>\n            <option value='50'>50</option>\n          </Input>\n          <label htmlFor='rows-per-page'>Entries</label>\n        </div>\n\n      </Col>\n      <Col className='col-12 col-md-6 d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n      >\n        {!id &&\n          <Fragment>\n            <Col md={5} sm={12} lg={5} className='p-25'>\n              <Select\n                label={'name'}\n                isClearable={false}\n                value={currentStatus}\n                options={statusArrOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n                onChange={(data) => { handleStatus(data) }}\n              />\n            </Col>\n            <Col md={5} sm={12} lg={5} className='p-25'>\n              <Input\n                id='search-invoice'\n                className=''\n                type='text'\n                placeholder='Search'\n                value={searchTerm}\n                onChange={e => handleFilter(e.target.value)}\n              />\n            </Col>\n          </Fragment>\n        }\n        <Col className='d-flex justify-content-start justify-content-lg-end align-items-center table-header-actions col-12 col-md-2'>\n          <Can I={'write'} a={'digital-signature'}>\n            {id &&\n              <Button className='add-new-user' color='primary' onClick={() => { setFormModal(!formModal) }}>\n                Add\n              </Button>\n            }\n            {!id &&\n              <Button className='add-new-user' color='primary' tag={Link} to={'/digital-signature/add'} >\n                Add\n              </Button>\n            }\n          </Can>\n          <UncontrolledDropdown className='ms-1'>\n            <DropdownToggle color='secondary' caret outline className='px-1'>\n              <MoreVertical className='font-small-4' />\n            </DropdownToggle>\n            <DropdownMenu>\n              <Can I={'write'} a={'digital-signature'}>\n                <DropdownItem className='w-100' tag={Link} to='/import/digitalsignatures'>\n                  <UploadCloud className='font-small-4 me-50' />\n                  <span className='align-middle'>Import</span>\n                </DropdownItem>\n              </Can>\n              <Can I={'write'} a={'digital-signature'}>\n                <DropdownItem className='w-100' onClick={() => { exportList() }} >\n                  <Download className='font-small-4 me-50' />\n                  <span className='align-middle'>Export</span>\n                </DropdownItem>\n              </Can>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Col>\n      </Col>\n    </div>\n  )\n}\n\nconst DigitalSignatureList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => { return state.digitalsignature })\n  const { id } = useParams()\n  // ** States\n  const [sort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn] = useState('createdon')\n  const [rowsPerPage, setRowsPerPage] = useState(id ? 6 : 25)\n  const [currentStatus, setCurrentStatus] = useState({ id: '', name: 'Select Status' })\n  const [currentLocation] = useState({ id: '', name: 'All' })\n  const [formModal, setFormModal] = useState(false)\n  const [selectedDSC, setSelectedDSC] = useState(null)\n \n\n  const statusArr = [\n    '',\n    \"Active\",\n    \"Inactive\",\n    \"Expired\"\n  ]\n\n  const statusArrOptions = [\n    { id: 0, name: 'Select All' },\n    { id: 1, name: \"Active\" },\n    { id: 2, name: \"Inactive\" },\n    { id: 3, name: \"Expired\" }\n  ]\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n\n  }\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const exportList = async () => {\n    await dispatch(\n      exportDSC({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id,\n        location: currentLocation.id\n      })\n    )\n  }\n\n  // ** Get data on mount\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(\n      getLicenseData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id,\n        location: currentLocation.id\n      })\n    )\n    setBlock(false)\n  }, [dispatch])\n\n  // ** Function in get data on page change\n  const handlePagination = async page => {\n    setBlock(true)\n    await dispatch(\n      getLicenseData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        status: currentStatus.id,\n        location: currentLocation.id\n      })\n    )\n    setBlock(false)\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = async e => {\n    const value = parseInt(e.currentTarget.value)\n    setBlock(true)\n    await dispatch(\n      getLicenseData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: currentPage,\n        status: currentStatus.id,\n        location: currentLocation.id\n      })\n    )\n    setRowsPerPage(value)\n    setBlock(false)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = async val => {\n    setSearchTerm(val)\n    setBlock(true)\n    await dispatch(\n      getLicenseData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id,\n        location: currentLocation.id\n      })\n    )\n    setBlock(false)\n  }\n\n  const handleStatus = async val => {\n    setCurrentStatus(val)\n    setBlock(true)\n    await dispatch(\n      getLicenseData({\n        sort,\n        q: searchTerm,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: val.id,\n        location: currentLocation.id\n      })\n    )\n    setBlock(false)\n  }\n\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      status: currentStatus.id,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n  \n  const updateRefreshList = async (val) => {\n    if (val) {\n      setBlock(true)\n      await dispatch(\n        getLicenseData({\n          sort,\n          q: searchTerm,\n          sortColumn,\n          page: currentPage,\n          perPage: rowsPerPage,\n          status: currentStatus.id,\n          location: currentLocation.id\n        })\n      )\n      setBlock(false)\n    }\n  }\n\n  const setFreshList = () => {\n    setFormModal(false)\n    setSelectedDSC(null)\n\n  }\n\n \n  return (\n    <Fragment>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card className='overflow-hidden'>\n          <Row>\n            <CustomHeader\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n              updateRefreshList={updateRefreshList}\n              statusArrOptions={statusArrOptions}\n              currentStatus={currentStatus}\n              handleStatus={handleStatus}\n              exportList={exportList}\n            />\n\n            <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered modal-dsc'>\n\n              <ModalHeader toggle={() => setFormModal(!formModal)}>Digital Signature</ModalHeader>\n              <ModalBody>\n                <EditDSC selectedDSC={selectedDSC} setFreshList={setFreshList} />\n              </ModalBody>\n            </Modal>\n\n            <Table className='text-nowrap text-center border-bottom' responsive>\n              <thead>\n                <tr>\n                  <th className='text-start'>Name</th>\n                  <th>Number</th>\n                  <th>Start Date</th>\n                  <th>Expiry Date</th>\n                  <th>Files</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dataToRender().map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <td className='text-start'>{item.name}</td>\n                      <td>\n                        {item.licenseno}\n                      </td>\n                      <td>\n                        {item.issueddate !== undefined ? dateFormat(item.issueddate) : ''}\n                      </td>\n                      <td>\n                        {item.expirydate > 0 ? dateFormat(item.expirydate) : ''}\n                      </td>\n                      <td className='text-start'>\n                        {\n                          item.files?.map((file, k) => {\n                            return (\n                              <Badge key={k} className='ms-25' color='primary' >\n                                <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 1 ? `${file.originalfilename.split('.')[0].substr(0, 10)}.${file.extension}` : file.originalfilename}</a>\n                              </Badge>\n                            )\n                          })\n                        }\n                      </td>\n                      <td>\n                        <Badge color={statusColArr[item.status]}> {statusArr[item.status]}</Badge>\n                      </td>\n                      <td>\n                        <div className='column-action d-flex align-items-center'>\n                          <Col\n                            onClick={() => { openEditModal(item) }}>\n                            <Edit className='cursor-pointer mt-0' size={16} />\n                          </Col>\n                          <Col lg={4}\n                            onClick={() => { deletefn(item.id) }}>\n                            <Trash2\n                              className='cursor-pointer ms-1 mt-0' size={16} />\n                          </Col>\n                        </div>\n                      </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </Table>\n            <CustomPagination />\n          </Row>\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default DigitalSignatureList","// ** User List Component\nimport Table from './Table'\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default ServiceList\n"],"sourceRoot":""}