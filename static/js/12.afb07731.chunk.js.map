{"version":3,"sources":["views/apps/invoice/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/apps/invoice/shared-sidebar/SidebarSendInvoice.js"],"names":["MySwal","withReactContent","Swal","paymentstatusObj","id","name","color","CustomHeader","handleFilter","value","handlePerPage","rowsPerPage","exportList","setCurrentStatus","currentStatus","selecteIds","dispatch","useDispatch","className","lg","sm","htmlFor","type","onChange","length","size","onClick","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","deleteInvoiceBulk","md","theme","selectThemeColors","isClearable","placeholder","classNamePrefix","options","getOptionLabel","option","getOptionValue","data","e","target","I","a","tag","Link","to","caret","outline","InvoiceList","store","useSelector","state","invoice","useState","block","setBlock","Loader","setValue","sendSidebarOpen","setSendSidebarOpen","sort","setSort","sortColumn","setSortColumn","selectedData","setSelectedData","currentPage","setCurrentPage","setRowsPerPage","toggleSendSidebar","setSelectedIds","renderClient","row","Math","floor","random","content","contactname","charAt","dateFormat","moment","format","unix","renderStatus","val","find","o","parseInt","useEffect","getData","q","page","perPage","status","handlePagination","selected","handleSort","col","exportInvoice","CustomPagination","count","Number","total","toFixed","nextLabel","breakLabel","previousLabel","pageCount","activeClassName","breakClassName","pageClassName","breakLinkClassName","nextLinkClassName","pageLinkClassName","nextClassName","previousLinkClassName","previousClassName","onPageChange","forcePage","containerClassName","dataToRender","filters","Object","keys","some","k","downloadPdf","axios","post","res","downloadLink","document","createElement","fileName","uniqueno","href","pdf","download","click","removeChild","catch","err","console","log","stringTrimfn","substr","blocking","loader","responsive","scope","style","padding","fontSize","map","index","checked","temp","ind","indexOf","splice","handleCheckBox","width","contactemail","taskinvoiceitemsservicename","invoicedate","paymentdue","totalamount","dueamount","pill","paymentstatus","end","preventDefault","deleteInvoice","toggleSidebar","open","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner","activeOrg","activeOrganization","userData","loggedInUser","SidebarSendInvoice","colourStyles","multiValue","styles","toEmail","setToEmail","ccEmail","setCCEmail","setData","thankyouNote","setThankyouNote","userOptions","setUserOptions","clientOptions","setClientOptions","getCoatctInfo","contactid","contactinformations","getThankyouNotes","slug","test","emailtemplates","description","replace","contactperson","replaceAll","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","undefined","clientid","organizationusers","ccOpen","setCCOpen","SelectComponent","Option","initials","email","toggleCC","scrollable","fade","keyboard","backdrop","container","isOpen","contentClassName","toggle","modalClassName","onSubmit","for","isMulti","components","i","toolbarClassName","wrapperClassName","editorState","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","editorClassName","toolbar","inline","inDropdown","subject","taskinvoiceId","clientName","toast","success","position","sendMail"],"mappings":"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","file":"static/js/12.afb07731.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect, Fragment } from 'react'\nimport Avatar from '@components/avatar'\nimport Select from 'react-select'\n// ** Third Party Components\nimport { Can } from '@src/utility/context/Can.js'\nimport ReactPaginate from 'react-paginate'\nimport { Download, MoreVertical, Send, Eye, Edit, Trash, Copy, Trash2, Save, Upload } from 'react-feather'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Button, Input, Row, Col, Card, CardBody, Label,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Badge,\n  UncontrolledTooltip,\n  Table,\n  DropdownItem\n} from 'reactstrap'\n\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Store & Actions\nimport { getData, exportInvoice, deleteInvoice, deleteInvoiceBulk } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\nconst MySwal = withReactContent(Swal)\n\nconst paymentstatusObj = [\n  { id: '', name: \"Select All\" },\n  { id: '4', name: \"Draft\" },\n  { id: '5', name: \"Pending\", color: 'light-danger' },\n  { id: '6', name: \"Partially Paid\", color: 'light-warning' },\n  { id: '7', name: 'Paid', color: 'light-success' },\n  { id: '11', name: 'Sent', color: 'light-secondary' }\n]\n\nconst CustomHeader = ({ handleFilter, value, handlePerPage, rowsPerPage, exportList, setCurrentStatus, currentStatus, selecteIds }) => {\n\n  const dispatch = useDispatch()\n\n  const deleteInvoicefun = () => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteInvoiceBulk(selecteIds))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Invoice has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n\n  return (\n    <div className='invoice-list-table-header w-100 py-2 px-1'>\n      <Row className='px-1'>\n        <Col lg='3' sm='12' className='d-flex align-items-center px-0 px-sm px-lg-1'>\n          <div className='d-flex align-items-center me-2'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              className='form-control ms-50 pe-3'\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n          </div>\n\n          {selecteIds.length > 0 &&\n            <Trash2 size={16} className='text-danger' onClick={() => { deleteInvoicefun() }} />\n          }\n        </Col>\n\n        <Col\n          lg='9' sm='12'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <Col md='3' sm='12' className='ms-0 m-l-50 me-50'>\n            <Select\n              theme={selectThemeColors}\n              isClearable={false}\n              className='react-select'\n              placeholder={'Select Status'}\n              classNamePrefix='select'\n              options={paymentstatusObj}\n              value={currentStatus}\n              getOptionLabel={(option) => option.name}\n              getOptionValue={(option) => option.id}\n              onChange={async data => {\n                setCurrentStatus(data)\n              }}\n            />\n          </Col>\n         \n          <div className='d-flex align-items-center mt-50 mt-lg-0 m me-50 me-lg-0'>\n            <Input\n              id='search-invoice'\n              className='ms-0 m-lg-50 me-lg-2 me-0'\n              type='text'\n              value={value}\n              onChange={e => handleFilter(e.target.value)}\n              placeholder='Search Invoice'\n            />\n          </div>\n          <Col className='d-flex flex-lg-nowrap align-items-center justify-content-start justify-content-lg-end flex-wrap mt-50 mt-lg-0 col-12 col-md-3 col-lg-3'>\n          <Can I={'write'} a={'invoice'}>\n            <Button tag={Link} to='/invoice/add' color='primary'>\n              Add Invoice\n            </Button>\n          </Can>\n          <UncontrolledDropdown className='ms-1'>\n            <DropdownToggle color='secondary' caret outline>\n              <MoreVertical className='font-small-4 me-50' />\n            </DropdownToggle>\n            <DropdownMenu>\n              <Can I={'import'} a={'invoice'}>\n                <DropdownItem tag={Link} to={`/import/invoice`} >\n                  <Upload className='font-small-4 me-50' />\n                  <span className='align-middle'>Import</span>\n                </DropdownItem>\n              </Can>\n              <Can I={'export'} a={'invoice'}>\n                <DropdownItem onClick={() => { exportList() }} >\n                  <Download className='font-small-4 me-50' />\n                  <span className='align-middle'>Export</span>\n                </DropdownItem>\n              </Can>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Col>\n      </Col>\n    </Row>\n    </div >\n  )\n}\n\nconst InvoiceList = () => {\n  // ** Store vars\n\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  // ** States\n  const [value, setValue] = useState('')\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('createdon')\n  const [selectedData, setSelectedData] = useState({})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(50)\n  const [currentStatus, setCurrentStatus] = useState({ id: '', name: 'Select Status' })\n\n\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n  \n  const [selecteIds, setSelectedIds] = useState([])\n  // ** renders client column\n  const renderClient = row => {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n    return <Avatar color={color} className='me-50' content={row.contactname !== null ? row.contactname?.charAt(0) : ''} />\n\n  }\n\n  const dateFormat = (value) => {\n    if (!value) return ''\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n\n  }\n\n  const renderStatus = (val) => {\n    const obj = paymentstatusObj.find((o) => parseInt(o.id) === parseInt(val))\n    return obj\n  }\n  const deleteInvoicefun = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteInvoice(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Invoice has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id\n      })\n    )\n    setBlock(false)\n  }, [dispatch, currentStatus])\n\n  const handleFilter = async val => {\n    setValue(val)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: currentStatus.id\n      })\n    )\n    setBlock(false)\n  }\n\n  const handlePerPage = async e => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        status: currentStatus.id,\n        perPage: parseInt(e.target.value)\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n    setBlock(false)\n  }\n\n  const handlePagination = async page => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        status: currentStatus.id,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n    setBlock(false)\n  }\n\n  const handleSort = async col => {\n\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn: col,\n        q: value,\n        status: currentStatus.id,\n        perPage: rowsPerPage,\n        page: currentPage      \n      })\n    )\n    setSort(sort === 'asc' ? 'desc' : 'asc')\n    setSortColumn(col)\n    setBlock(false)\n  }\n\n  const exportList = async () => {\n    setBlock(true)\n    await dispatch(\n      exportInvoice({\n        sort,\n        sortColumn,\n        q: value,\n        status: currentStatus.id        \n      })\n    )\n    setBlock(false)\n  }\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        nextLabel=''\n        breakLabel='...'\n        previousLabel=''\n        pageCount={count || 1}\n        activeClassName='active'\n        breakClassName='page-item'\n        pageClassName={'page-item'}\n        breakLinkClassName='page-link'\n        nextLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousLinkClassName={'page-link'}\n        previousClassName={'page-item prev'}\n        onPageChange={page => handlePagination(page)}\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\n      />\n    )\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      q: value,\n      status: currentStatus.id\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return []\n    }\n  }\n\n  useEffect(() => {\n    dataToRender()\n  }, [store.data])\n\n  const downloadPdf = async (row) => {\n    setBlock(true)\n    axios.post('/pdfmaker/pdf', { id: row.id })\n      .then((res) => {\n        const downloadLink = document.createElement(\"a\")\n        const fileName = `${row.uniqueno}.pdf`\n        downloadLink.href = res.data.pdf\n        downloadLink.download = fileName\n        downloadLink.click()\n        document.removeChild(downloadLink)\n        setBlock(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setBlock(false)\n      })\n  }\n\n  const stringTrimfn = (text) => {\n    return text.length >= 20 ? `${text.substr(0, 20)}...` : text\n  }\n\n  const handleCheckBox = (e, id) => {\n    if (e.target.checked) {\n      setSelectedIds([...selecteIds, id])\n    } else {\n      const temp = [...selecteIds]\n      const ind = temp.indexOf(id)\n      temp.splice(ind, 1)\n      setSelectedIds(temp)\n    }\n\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <div className='invoice-list-dataTable react-dataTable'>\n            <CustomHeader handlePerPage={handlePerPage} exportList={exportList} handleFilter={handleFilter} setCurrentStatus={setCurrentStatus} currentStatus={currentStatus} selecteIds={selecteIds} />\n            <Table responsive className='table-hover'>\n              <thead>\n                <tr>\n                  <th></th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 7px', fontSize: '13px' }}>ID</th>\n                  <th>\n                    DRAFT / INVOICE\n                  </th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 8px', fontSize: '13px' }}>Customer</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 8px', fontSize: '13px' }}>Service</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 8px', fontSize: '13px' }} onClick={() => { handleSort('invoicedate') }}>Invoice Date</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }} onClick={() => { handleSort('paymentdue') }}>Due Date</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Total</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Balance</th>\n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Payment Status</th>                \n                  <th scope='col' className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dataToRender().map((row, index) => {\n                  return (\n                    <tr key={index}>\n                      <td>\n                        <Input type='checkbox' color='primary' value={row.id} onChange={(e) => { handleCheckBox(e, row.id) }} />\n                      </td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}>\n                        <span className='text-body'>{`${row.uniqueno}`}</span></Link></td>\n                      <td className='text-nowrap' style={{ width: '40px' }}>\n                        <Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}>\n                          <UncontrolledTooltip target={`row${row.id}`}>{row.status === 4 ? 'Draft' : 'Invoice'}</UncontrolledTooltip>\n                          <Avatar id={`row${row.id}`} color={row.status === 4 ? 'light-primary' : 'light-warning'} icon={row.status === 4 ? <Save size={14} /> : <Send size={14} />} className='me-2' />\n                        </Link>\n                      </td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>{\n                        <Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}>\n                          <div className='d-flex' style={{ padding: \"0.2574rem 0rem\" }}>\n                            {renderClient(row)}\n                            <div className='d-flex flex-column text-overflow-ellipsis'>\n                              <h6 className='user-name text-truncate mb-0'>{stringTrimfn(row.contactname || '')}</h6>\n                              <small className='text-truncate text-muted mb-0'>{stringTrimfn(row.contactemail || '')}</small>\n                            </div>\n                          </div>\n                        </Link>\n                      }</td>\n                      <td className='text-nowrap' style={{ padding: '8px 0px', fontSize: '13px' }}><Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}>\n                        <span className='text-body text-truncate' style={{ padding: \"0.2574rem 0rem\" }}>{stringTrimfn(row.taskinvoiceitemsservicename || '')}\n                        </span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}>\n                        <span className='text-body'>{dateFormat(row.invoicedate)}</span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}>\n                        <span className='text-body'>{dateFormat(row.paymentdue)}</span></Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}><Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`}><span className='text-body'>{row.totalamount || 0}</span>\n                      </Link></td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>\n                        {row.dueamount !== '0' ? (\n                          <span>{row.dueamount}</span>\n                        ) : (\n                          <Badge color='light-success' pill>\n                            Paid\n                          </Badge>\n                        )}\n                      </td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>\n                        {row.status === 4 &&\n                          <Badge color={'light-primary'}>Draft</Badge>\n                        }{row.status !== 4 &&\n                          <Badge color={renderStatus(row.paymentstatus)?.color || 'light-primary'}>{renderStatus(row.paymentstatus).name || row.paymentstatus}</Badge>\n                        }\n                      </td>\n                      <td className='text-nowrap' style={{ padding: '8px 5px', fontSize: '13px' }}>\n                        <div className='column-action d-flex align-items-center'>\n\n                          <Can I={'read'} a={'invoice'}><Send size={17} onClick={() => { toggleSendSidebar(); setSelectedData(row) }} /></Can>\n\n                          <Can I={'read'} a={'invoice'}> <Link to={`/${row.status === 4 ? \"proposal\" : \"invoice\"}/view/${row.id}`} id={`pw-tooltip-${row.id}`}>\n                            <Eye size={17} className='mx-1' />\n                          </Link></Can>                         \n                          <UncontrolledDropdown>\n                            <DropdownToggle tag='span'>\n                              <MoreVertical size={17} className='cursor-pointer' />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                              <Can I={'export'} a={'invoice'}>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => { e.preventDefault(); downloadPdf(row) }}>\n                                  <Download size={14} className='me-50' />\n                                  <span className='align-middle'>Download</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'write'} a={'invoice'}>\n                                <DropdownItem tag={Link} to={`/invoice/edit/${row.id}`} className='w-100'>\n                                  <Edit size={14} className='me-50' />\n                                  <span className='align-middle'>Edit</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'delete'} a={'invoice'}>\n                                <DropdownItem\n                                  tag='a'\n                                  href='/'\n                                  className='w-100'\n                                  onClick={e => {\n                                    e.preventDefault()\n                                    deleteInvoicefun(row.id)\n                                  }}\n                                >\n                                  <Trash size={14} className='me-50' />\n                                  <span className='align-middle'>Delete</span>\n                                </DropdownItem>\n                              </Can>\n                              <Can I={'write'} a={'invoice'}>\n                                <DropdownItem tag='a' href={`/invoice/clone/${row.id}`} className='w-100' >\n                                  <Copy size={14} className='me-50' />\n                                  <span className='align-middle'>Duplicate</span>\n                                </DropdownItem>\n                              </Can>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  )\n                })\n                }\n              </tbody>\n            </Table>\n            <CustomPagination />\n          </div>\n          {sendSidebarOpen &&\n            <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} invoice={selectedData} />\n          }\n        </Card>\n      </UILoader>\n    </div>\n  )\n}\n\nexport default InvoiceList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html'\nimport { EditorState, ContentState, convertFromHTML, convertToRaw } from 'draft-js'\nimport Select, { components } from 'react-select'\nimport CreatableSelect from 'react-select/creatable'\n\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash, File } from 'react-feather'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Modal,\n  Button,\n  ModalBody\n} from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\nimport moment from 'moment'\n// ** User Avatars\nimport { activeOrganization, loggedInUser } from '@src/helper/sassHelper'\nconst activeOrg = activeOrganization()\nconst userData = loggedInUser()\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport toast from 'react-hot-toast'\nconst SidebarSendInvoice = props => {\n\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const [block, setBlock] = useState(false)\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const [toEmail, setToEmail] = useState([])\n  const [ccEmail, setCCEmail] = useState([])\n  const [data, setData] = useState('')\n  const { open, toggleSidebar, invoice } = props\n  const [thankyouNote, setThankyouNote] = useState('')\n  const [userOptions, setUserOptions] = useState([])\n  const [clientOptions, setClientOptions] = useState([])\n\n  const getOrganizationUsers = () => {\n    axios.post('/organizationusers/dropdown').then((res) => {\n      setUserOptions(res.data.organizationusers)\n    }).catch(() => { })\n  }\n\n  const getCoatctInfo = (id) => {\n    axios.post('contactinformations/list', { contactid: id }).then((res) => {\n      setClientOptions(res.data.contactinformations)\n    }).catch(() => { })\n\n  }\n\n  const dateFormat = (value) => {\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n\n  }\n\n  const getThankyouNotes = () => {\n    axios.post('/emailtemplates/get', { slug: 'invoice-send-mail' }).then((res) => {\n      const mailSub = res.data.emailtemplates.description\n      const test = mailSub.replace('{invoice_date}', dateFormat(invoice.paymentdue)).replace('{service}', invoice.taskinvoiceitemsservicename).replace('recipient_name', invoice.contactperson).replace('{recipient_name}', invoice.contactperson).replace('{invoice_no}', invoice.uniqueno).replace('{amount}', invoice.totalamount).replace('{invoice_amount}', invoice.totalamount).replace('{your_name}', userData.name).replaceAll('{firm_name}', activeOrg.name).replace('{', '').replace('}', '')\n\n      const temp = EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML(test)\n        )\n      )\n      setData(temp)\n      setThankyouNote(test)\n\n    }).catch(() => { })\n  }\n\n  const handleChange = (editorState) => {\n    setData(editorState)\n    setThankyouNote(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  }\n\n\n  useEffect(() => {\n    if (invoice.clientid !== undefined) {\n      getCoatctInfo(invoice.clientid)\n    }\n    if (invoice.contactid !== undefined) {\n      getCoatctInfo(invoice.contactid)\n    }\n    if (Object.keys(invoice).length > 0) {\n      getOrganizationUsers()\n      getThankyouNotes()\n    }\n  }, [invoice])\n\n  const sendMail = () => {\n    setBlock(true)\n    const subject = `${invoice.uniqueno} Invoices Acknowledgement Mail`\n    axios.post('/google/sendGmail', { content: thankyouNote, subject, toEmail, ccEmail, taskinvoiceId: invoice.id, clientName: invoice.contactname })\n      .then(() => {\n        toggleSidebar(false)\n        setBlock(false)\n        toast.success('Email send Successfully', { position: 'bottom-right' })\n      })\n    console.log(() => { })\n  }\n\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-50' size='sm' initials content={data.name?.charAt(0)} />\n          {data.name} - {data.email}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleSidebar()\n  }\n\n  return (\n\n    <div className='email-application'>\n      <div className='content-area-wrapper'>\n        <div className='col-md-12'>\n          <div className='content-body'>\n            <Modal\n              scrollable\n              fade={false}\n              keyboard={false}\n              backdrop={false}\n              id='compose-mail'\n              container='.content-body'\n              className='modal-lg'\n              isOpen={open}\n              contentClassName='p-0'\n              toggle={toggleSidebar}\n              modalClassName='modal-sticky'\n            >\n              <UILoader blocking={block} loader={<Loader />}>\n                <div className='modal-header'>\n                  <h5 className='modal-title'>Compose Mail</h5>\n                  <div className='modal-actions'>\n                    {/* <a href='/' className='text-body me-75' onClick={togglePopUp}>\n                      <Minus size={14} />\n                    </a>\n                    <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\n                      <Maximize2 size={14} />\n                    </a> */}\n                    <a href='/' className='text-body' onClick={togglePopUp}>\n                      <X size={14} />\n                    </a>\n                  </div>\n                </div>\n                <ModalBody className='flex-grow-1 p-0'>\n                  <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-to' className='form-label'>\n                        To:\n                      </Label>\n                      <div className='flex-grow-1'>\n                        <CreatableSelect\n                          isMulti\n                          id='email-to'\n                          isClearable={false}\n                          theme={selectThemeColors}\n                          options={clientOptions}\n                          className='react-select select-borderless'\n                          classNamePrefix='select'\n                          components={{ Option: SelectComponent }}\n                          styles={colourStyles}\n                          onChange={(e) => { setToEmail(e.map(i => i.email)) }}\n                          getOptionLabel={(option) => `${option.name} - ${option.email}`}\n                          getOptionValue={(option) => option.id}\n                        />\n                      </div>\n                      <div>\n                        <a href='/' className='toggle-cc text-body me-1' onClick={toggleCC}>\n                          Cc\n                        </a>\n                      </div>\n                    </div>\n                    {ccOpen === true ? (\n                      <div className='compose-mail-form-field cc-wrapper'>\n                        <Label for='email-cc' className='form-label'>\n                          Cc:\n                        </Label>\n                        <div className='flex-grow-1'>\n                          <Select\n                            isMulti\n                            id='email-cc'\n                            onChange={(e) => { setCCEmail(e.map(i => i.email)) }}\n                            isClearable={false}\n                            theme={selectThemeColors}\n                            options={userOptions}\n                            className='react-select select-borderless'\n                            classNamePrefix='select'\n                            components={{ Option: SelectComponent }}\n                            styles={colourStyles}\n                            getOptionLabel={(option) => `${option.name} - ${option.email}`}\n                            getOptionValue={(option) => option.id}\n                          />\n                        </div>\n                        <div>\n                          <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                            <X size={14} />\n                          </a>\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className='compose-mail-form-field'>\n                      <Label for='email-subject' className='form-label'>\n                        Subject:\n                      </Label>\n                      <Input id='email-subject' placeholder='Subject' />\n                    </div>\n                    <div id='message-editor'>\n                      <Editor\n                        placeholder='Message'\n                        toolbarClassName='rounded-0'\n                        wrapperClassName='toolbar-bottom'\n                        editorState={data}\n                        onEditorStateChange={handleChange}\n                        editorClassName='rounded-0 border-0'\n                        toolbar={{\n                          options: ['inline', 'textAlign'],\n                          inline: {\n                            inDropdown: false,\n                            options: ['bold', 'italic', 'underline', 'strikethrough']\n                          }\n                        }}\n                      />\n                    </div>\n                    <div className='compose-footer-wrapper'>\n                      <div className='btn-wrapper d-flex align-items-center'>\n                        <Button outline color='primary' onClick={() => { sendMail() }}>Send</Button>\n                        <div className='email-attachement rounded border p-50 ms-50'>\n                          {invoice.uniqueno}.pdf\n                        </div>\n                      </div>\n                      <div className='footer-action d-flex align-items-center'>\n                        <Trash className='cursor-pointer' size={18} onClick={toggleSidebar} />\n                      </div>\n                    </div>\n                  </Form>\n                </ModalBody>\n              </UILoader>\n            </Modal>\n          </div></div></div>\n    </div>\n\n  )\n}\n\nexport default SidebarSendInvoice\n"],"sourceRoot":""}