{"version":3,"sources":["views/pages/authentication/Login.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["TwoStepsCover","skin","useSkin","useState","block","setBlock","verfiyCodesent","setVerifyCodeSent","Loader","illustration","source","require","default","dispatch","useDispatch","store","useSelector","state","register","VerifySchema","yup","shape","email","required","emailCode","matches","message","excludeEmptyString","acceptTermsAndCondition","oneOf","navigate","useNavigate","setEmail","search","useLocation","searchParams","URLSearchParams","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","errors","formState","setError","setValue","resend","obj","generateCode","onSubmit","data","length","verfiyCode","useEffect","verifyError","Object","keys","map","type","sendCode","val","axios","post","then","res","toast","success","users","position","catch","err","error","response","get","accessToken","loginUser","handleLogin","listOrg","id","className","to","onClick","e","preventDefault","src","themeConfig","app","appLogoImage","alt","width","height","lg","sm","blocking","loader","md","k","for","name","render","field","placeholder","onChange","target","value","classnames","defaultChecked","href","color","UILoader","props","children","tag","overlayColor","Tag","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/97.5eb3be2c.chunk.js","sourcesContent":["// ** React Imports\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\nimport themeConfig from '@src/configs/themeConfig'\nimport classnames from 'classnames'\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport { verfiyCode, generateCode, listOrg } from './register-multi-steps/store/index'\n// ** Actions\nimport { handleLogin } from '@store/authentication'\n\n// ** Reactstrap Imports\nimport { Form, Label, Row, Col, Button, FormFeedback, Input } from 'reactstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport toast from 'react-hot-toast'\n\nconst TwoStepsCover = () => {\n  // ** Hooks\n  const { skin } = useSkin()\n  const [block, setBlock] = useState(false)\n  const [verfiyCodesent, setVerifyCodeSent] = useState(false)\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const illustration =\n    skin === 'dark' ? 'two-steps-verification-illustration-dark.svg' : 'two-steps-verification-illustration.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const codeRegExp = /^[0-9\\- ]{4,4}$/\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.register)\n  const VerifySchema = yup.object().shape({\n    email: yup.string().required('Email required'),\n    emailCode: yup.string().required('Please Enter Verify Code').matches(codeRegExp, { message: 'Please Enter Valid verify Code', excludeEmptyString: true }),\n    acceptTermsAndCondition: yup.boolean().oneOf([true], 'Please Accept terms and Condition')\n  })\n  const navigate = useNavigate()\n  const [email, setEmail] = useState('')\n\n  const search = useLocation().search\n  const searchParams = new URLSearchParams(search)\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }, setError, setValue\n  } = useForm({\n    defaultValues: { emailCode: '', acceptTermsAndCondition: true },\n    resolver: yupResolver(VerifySchema)\n  })\n\n  const resend = async () => {\n    const obj = { email }\n    await dispatch(generateCode(obj))\n  }\n\n  const onSubmit = async data => {\n    if (data.emailCode && data.emailCode.length > 0) {\n      setBlock(true)\n      await dispatch(verfiyCode(data))\n      setBlock(false)\n\n    }\n  }\n  useEffect(async () => {\n\n    if (store.verifyError !== null) {\n      setBlock(false)\n      Object.keys(store.verifyError).map((obj) => {\n        setError(obj, { type: 'custom', message: store.verifyError[obj][0] })\n      })\n    }\n  }, [store.verifyError])\n\n  const sendCode = (val) => {\n\n    if (email) {\n      axios.post('/users/sendcode', { email: val ?? email })\n        .then((res) => {\n          toast.success(res.data.users, { position: 'bottom-right' })\n          setVerifyCodeSent(true)\n        })\n        .catch((err) => {\n          toast.error(err.response.data.errors, { position: 'bottom-right' })\n        })\n    }\n\n  }\n\n  useEffect(() => {\n    if (!searchParams.get('email')) {\n      navigate('/login')\n    } else {\n      setEmail(searchParams.get('email'))\n      sendCode(searchParams.get('email'))\n      setValue('email', searchParams.get('email'))\n    }\n  }, [])\n\n  useEffect(async () => {\n    if (store.accessToken) {\n      const data = {}\n      data['users'] = store.loginUser\n      data['token'] = store.accessToken\n      await dispatch(handleLogin(data))\n\n      await dispatch(listOrg(store.loginUser?.id))\n\n      navigate('/dashboard')\n    }\n  }, [store.accessToken])\n\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <img src={themeConfig.app.appLogoImage} alt={'Turia Logo'} width={45} height={35} />\n          <h1 className='brand-text text-primary'>Turia</h1>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <UILoader blocking={block} loader={<Loader />}>\n            <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <p>Please check mail inbox and spam folder for verification code</p>\n                {Object.keys(errors).map((obj, k) => {\n                  return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n                })}\n\n                <Row className='gx-2 mb-1'>\n                  {\n                    !verfiyCodesent &&\n                    <Fragment>\n\n                      <Col sm={12} className='mb-1'>\n                        <Label className='form-label' for='email'>\n                          Email\n                        </Label>\n                        <Controller\n                          name='email'\n                          control={control}\n                          render={({ field }) => (\n                            <Input\n                              {...field}\n                              type='email'\n                              id='email'\n                              placeholder='jhon@email.com'\n                              onChange={(e) => { setEmail(e.target.value); setValue('email', e.target.value) }}\n                              className={classnames('form-control', { 'is-invalid': errors.email })}\n                            />\n                          )}\n                        />\n                        <Row className='d-flex justify-content-between'>\n                          <Col>\n                            {errors.email && <FormFeedback>{errors.email?.message} </FormFeedback>}\n                          </Col>\n                          <Col className='d-flex justify-content-end mt-50'>\n                            <span className='text-primary cursor-pointer' onClick={() => { sendCode() }}>Send</span>\n                          </Col>\n                        </Row>\n                      </Col>\n\n                    </Fragment>\n                  }\n                  {verfiyCodesent &&\n                    <Fragment>\n                      <Col sm={12} className='mb-1'>\n                        <Label className='form-label' for='credit-card'>\n                          Verification Code\n                        </Label>\n                        <Controller\n                          name='emailCode'\n                          control={control}\n                          render={({ field }) => (\n                            <Input\n                              {...field}\n                              type='number'\n                              id='credit-card'\n                              placeholder='1356'\n                              className={classnames('form-control', { 'is-invalid': errors.emailCode })}\n                            />\n                          )}\n                        />\n                        <Row className='d-flex justify-content-between'>\n                          <Col>\n                            {errors.emailCode && <FormFeedback>{errors.emailCode?.message} </FormFeedback>}\n                          </Col>\n                          <Col className='d-flex justify-content-end mt-50'>\n                            <span className='text-primary cursor-pointer' onClick={() => { resend() }}>Resend</span>\n                          </Col>\n                        </Row>\n\n                      </Col>\n                      <Col sm={12} className='mb-1 '>\n                        <div className='form-check form-check-inline'>\n                          <Controller\n                            name='acceptTermsAndCondition'\n                            control={control}\n                            render={({ field }) => (\n                              <Input\n                                {...field}\n                                type='checkbox'\n                                defaultChecked={true}\n                                name='acceptTermsAndCondition'\n                                id='acceptTermsAndCondition'\n\n                              />\n                            )}\n                          />\n                          {errors['action'] && <p className='text-danger'>{errors['action']?.message}</p>}\n                          <Label className={classnames('form-label', { 'text-danger': errors.emailCode })}>\n                            <p>By choosing <b>Submit</b> you agree to <b>Turia's <a href=\"https://www.turia.in/terms\">Terms of Use</a>, <a href=\"https://www.turia.in/privacy\">Privacy</a> and <a href=\"https://www.turia.in/privacy\">Data Protection Policies</a>.</b></p>\n                          </Label>\n                        </div>\n\n                      </Col>\n                    </Fragment>\n                  }\n                </Row>\n                {verfiyCodesent &&\n                  <div className='d-flex justify-content-between mt-2'>\n                    <Button type='submit' color='primary' className='btn-next'>\n                      <span className='align-middle d-sm-inline-block d-none'>Submit</span>\n                    </Button>\n                  </div>\n                }\n              </Form>\n\n            </Col>\n          </UILoader>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TwoStepsCover\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}