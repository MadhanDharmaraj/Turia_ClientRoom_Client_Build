{"version":3,"sources":["views/pages/account-settings/RolesAndDesignation/store/roles.js","views/pages/account-settings/RolesAndDesignation/Permissions.js","views/pages/account-settings/RolesAndDesignation/Roles.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["userId","orgUserId","getData","createAsyncThunk","params","axios","post","response","data","roles","addRole","dispatch","getState","res","role","updateRole","addRolePermissions","updateRolePermissions","deleteRole","id","updatedBy","createSlice","name","initialState","total","allData","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","Permissions","roleId","useState","modules","setModules","permissions","setPermissions","useEffect","then","rolepermission","split","catch","xs","className","responsive","length","map","module","index","type","slug","value","defaultChecked","indexOf","disabled","for","activeOrgId","activeOrganizationid","Roles","MySwal","withReactContent","Swal","show","setShow","setData","modalType","setModalType","store","useSelector","useDispatch","permissionArr","setPermissionArr","formModal","setFormModal","selectedRoleId","setselectedRoleId","block","setBlock","levelOptions","Loader","getRolePermissions","schema","yup","shape","organizationId","default","required","description","nullable","panel","isDefault","isAdminRole","createdBy","permissionsArr","min","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","reset","setValue","onReset","onSubmit","obj","toString","eventname","toast","success","position","handleCheckbox","e","mod","trans","permissions_array","target","checked","splice","renderPermissions","transactions","onChange","editRole","parseInt","rolelevel","Can","I","a","color","size","onClick","item","status","noofusers","isdefault","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","dismiss","DismissReason","cancel","isOpen","toggle","onClosed","blocking","loader","tag","render","field","placeholder","invalid","ref","inputRef","classnames","classNamePrefix","options","find","c","getOptionLabel","option","getOptionValue","UILoader","props","children","overlayColor","Tag","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/82.e88bdc82.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\n\nexport const getData = createAsyncThunk('appRole/getData', async params => {\n  const response = await axios.post(`/roles/list`, params)\n  return {\n    params,\n    data: response.data.roles\n  }\n})\nexport const addRole = createAsyncThunk('appRole/addRole', async (data, { dispatch, getState }) => {\n\n  const res = await axios.post(`/roles/create`, data)\n  await dispatch(getData(getState().role.params))\n  return res.data.role\n\n})\n\nexport const updateRole = createAsyncThunk('appRole/updateRole', async (data, { dispatch, getState }) => {\n  await axios.post(`/roles/update`, data)\n  await dispatch(getData(getState().role.params))\n  return []\n})\n\nexport const addRolePermissions = createAsyncThunk('appRole/addRolePermissions', async (data, { }) => {\n\n  await axios.post(`/rolepermissions/create`, data)\n\n  return []\n\n})\n\nexport const updateRolePermissions = createAsyncThunk('appRole/updateRolePermissions', async (data, { }) => {\n  await axios.post(`/rolepermissions/update`, data)\n  return []\n})\n\nexport const deleteRole = createAsyncThunk('appRole/deleteRole', async (id, { dispatch, getState }) => {\n  await axios.post('/roles/delete', { id, updatedBy: userId })\n  await dispatch(getData(getState().role.params))\n  return id\n})\n\nexport const appRolesSlice = createSlice({\n  name: 'appRole',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getData.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n      })\n\n  }\n})\n\nexport default appRolesSlice.reducer\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\nconst Permissions = ({ roleId }) => {\n\n  const [modules, setModules] = useState([])\n  const [permissions, setPermissions] = useState([])\n\n  const getModules = () => {\n    axios.post('/modules/list').\n      then((res) => {\n        setModules(res.data.modules)\n      }).catch(() => { })\n  }\n\n  const getRolePermissions = () => {\n\n    if (roleId !== null) {\n      axios.post('/rolepermissions/list', { roleId }).\n        then((res) => {\n          setPermissions(res.data.rolepermission.permissions.split(','))\n        }).catch(() => { })\n    }\n  }\n\n  useEffect(() => {\n    if (roleId !== null) {\n      setModules([])\n      getRolePermissions()\n      getModules()\n    }\n  }, [roleId])\n\n  return (\n    <Fragment>\n\n      <Row >\n        <Col xs={12}>\n          <Table className='table-flush-spacing' responsive>\n            <tbody>{\n              permissions.length > 0 &&\n              modules.map((module, index) => {\n                return (\n                  <tr key={index}>\n                    <td className='text-nowrap fw-bolder'>{module.name}</td>\n                    <td>\n                      <div className='d-flex'>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`read-${module.slug}`} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled />\n                          <Label className='form-check-label' for={`read-${module.slug}`}>\n                            Read\n                          </Label>\n                        </div>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`write-${module.slug}`} value={`${module.slug}-write`} defaultChecked={permissions.indexOf(`${module.slug}-write`) > -1} disabled />\n                          <Label className='form-check-label' for={`write-${module.slug}`}>\n                            Write\n                          </Label>\n                        </div>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`delete-${module.slug}`} value={`${module.slug}-delete`} defaultChecked={permissions.indexOf(`${module.slug}-delete`) > -1} disabled />\n                          <Label className='form-check-label' for={`delete-${module.slug}`}>\n                            Delete\n                          </Label>\n                        </div>\n                        <div className='form-check me-3 me-lg-5'>\n                          <Input type='checkbox' id={`import-${module.slug}`} value={`${module.slug}-import`} defaultChecked={permissions.indexOf(`${module.slug}-import`) > -1} disabled />\n                          <Label className='form-check-label' for={`import-${module.slug}`}>\n                            import\n                          </Label>\n                        </div>\n                        <div className='form-check'>\n                          <Input type='checkbox' id={`export-${module.slug}`} value={`${module.slug}-export`} defaultChecked={permissions.indexOf(`${module.slug}-export`) > -1} disabled />\n                          <Label className='form-check-label' for={`export-${module.slug}`}>\n                            Export\n                          </Label>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                )\n              })\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Permissions","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Can } from '@src/utility/context/Can.js'\nimport {\n    Row,\n    Col,\n    Card,\n    Label,\n    Input,\n    Table,\n    Modal,\n    Button,\n    ModalBody,\n    ModalHeader,\n    FormFeedback,\n    Badge,\n    CardBody\n} from 'reactstrap'\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { Edit, Eye, Plus, Trash2 } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { getData, addRole, updateRole, deleteRole, addRolePermissions, updateRolePermissions } from './store/roles' //deleteRole\n// ** FAQ Illustrations\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport toast from 'react-hot-toast'\nimport Permissions from './Permissions'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\nconst Roles = ({ }) => {\n    // ** States\n    const MySwal = withReactContent(Swal)\n    const [show, setShow] = useState(false)\n    const [data, setData] = useState([])\n    const [modalType, setModalType] = useState('Add New')\n    const store = useSelector(state => state.role)\n    const dispatch = useDispatch()\n    const [modules, setModules] = useState([])\n    const [permissionArr, setPermissionArr] = useState([])\n    const [formModal, setFormModal] = useState(false)\n    const [selectedRoleId, setselectedRoleId] = useState(null)\n    const [permissions, setPermissions] = useState([])\n    const [block, setBlock] = useState(false)\n\n    const levelOptions = [{ id: 1, name: 'Level 1' }, { id: 2, name: 'Level 2' }, { id: 3, name: 'Level 3' }]\n    const Loader = () => {\n        return (\n            <Fragment>\n                <Spinner />\n            </Fragment>\n        )\n    }\n    const getModules = () => {\n        axios.post('/modules/list').\n            then((res) => {\n                setModules(res.data.modules)\n            }).catch(() => { })\n    }\n\n    const getRolePermissions = async (roleId) => {\n        const res = await axios.post('/rolepermissions/list', { roleId })\n        await setPermissions(res.data.rolepermission.permissions.split(','))\n        await setPermissionArr(res.data.rolepermission.permissions.split(','))\n    \n    }\n\n    // ** Hooks\n    const schema = yup.object().shape({\n        organizationId: yup.string().default(activeOrgId),\n        name: yup.string().required('Please Enter Role'),\n        description: yup.string().nullable(),\n        panel: yup.string().default('client'),\n        role: yup.string().default('client'),\n        isDefault: yup.number().default(3),\n        isAdminRole: yup.boolean().default(false),\n        updatedBy: yup.string().default(userId),\n        createdBy: yup.string().default(userId),\n        permissionsArr: yup.array().min('1')\n    })\n\n    const { handleSubmit, formState: { errors }, control, reset, setValue } = useForm({\n        resolver: yupResolver(schema),\n        defaultValues: schema.cast()\n    })\n\n    const onReset = async () => {\n        setShow(false)\n        await dispatch(getData())\n        reset({ id: '', name: '', description: '' })\n    }\n\n    const onSubmit = async data => {\n        setBlock(true)\n        let eventname\n        if (modalType === 'Edit') {\n            await dispatch(updateRole(data))\n\n            const obj = {\n                organizationId: activeOrgId,\n                roleId: data.id,\n                permissions: permissionArr.toString(),\n                updatedBy: userId\n            }\n\n            await dispatch(updateRolePermissions(obj))\n            eventname = 'Updated'\n        } else {\n            const res = await dispatch(addRole(data))\n            const obj = {\n                organizationId: activeOrgId,\n                roleId: res?.payload?.id,\n                permissions: permissionArr.toString(),\n                createdBy: userId\n            }\n            await dispatch(addRolePermissions(obj))\n            eventname = 'Added'\n        }\n        setBlock(false)\n        toast.success(`Role ${eventname} Successfully`, { position: 'bottom-right' })\n        onReset()\n    }\n\n    const handleCheckbox = (e, mod, trans) => {\n        const slug = `${mod}-${trans}`\n        let permissions_array = [...permissionArr]\n        if (e.target.checked) {\n            permissions_array = [...permissionArr, slug]\n        } else {\n            permissions_array.splice(permissionArr.indexOf(slug), 1)\n        }\n        setPermissionArr(permissions_array)\n        setValue('permissionsArr', permissions_array)\n    }\n    useEffect(() => {\n        setData(store.data)\n    }, [store.data])\n\n\n    const renderPermissions = () => {\n\n        return (\n            modules.map((module, index) => {\n                const transactions = module.transactions.split(',')\n                return (\n                    <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{module.name}</td>\n                        <td>\n                            <div className='d-flex'>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`read-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'read')} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled={transactions.indexOf('read') === -1} />\n                                    <Label className='form-check-label' for={`read-${module.slug}`}>\n                                        Read\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`write-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'write')} value={`${module.slug}-write`} defaultChecked={permissions.indexOf(`${module.slug}-write`) > -1} disabled={transactions.indexOf('write') === -1} />\n                                    <Label className='form-check-label' for={`write-${module.slug}`}>\n                                        Write\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`delete-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'delete')} value={`${module.slug}-delete`} defaultChecked={permissions.indexOf(`${module.slug}-delete`) > -1} disabled={transactions.indexOf('delete') === -1} />\n                                    <Label className='form-check-label' for={`delete-${module.slug}`}>\n                                        Delete\n                                    </Label>\n                                </div>\n                                <div className='form-check me-3 me-lg-5'>\n                                    <Input type='checkbox' id={`import-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'import')} value={`${module.slug}-import`} defaultChecked={permissions.indexOf(`${module.slug}-import`) > -1} disabled={transactions.indexOf('import') === -1} />\n                                    <Label className='form-check-label' for={`import-${module.slug}`}>\n                                        import\n                                    </Label>\n                                </div>\n                                <div className='form-check'>\n                                    <Input type='checkbox' id={`export-${module.slug}`} onChange={(e) => handleCheckbox(e, module.slug, 'export')} value={`${module.slug}-export`} defaultChecked={permissions.indexOf(`${module.slug}-export`) > -1} disabled={transactions.indexOf('export') === -1} />\n                                    <Label className='form-check-label' for={`export-${module.slug}`}>\n                                        Export\n                                    </Label>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                )\n            })\n        )\n    }\n\n    const showPermission = (role) => {\n        setselectedRoleId(role.id)\n        setFormModal(true)\n    }\n\n    const editRole = async (role) => {\n        reset(role)\n        setValue('rolelevel', parseInt(role.rolelevel))\n        await setselectedRoleId(role.id)\n        await getRolePermissions(role.id)\n        await setModalType('Edit')\n        setShow(true)\n        renderPermissions()\n    }\n\n    const deletefn = (id) => {\n        return MySwal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ms-1'\n            },\n            buttonsStyling: false\n        }).then(async (result) => {\n            if (result.value) {\n                await dispatch(deleteRole(id))\n                MySwal.fire({\n                    icon: 'success',\n                    title: 'Deleted!',\n                    text: 'Department has been deleted.',\n                    customClass: {\n                        confirmButton: 'btn btn-success'\n                    }\n                })\n                await dispatch(getData())\n                return true\n            } else if (result.dismiss === MySwal.DismissReason.cancel) {\n                return false\n            }\n        })\n    }\n\n    const handleModalClosed = () => {\n        setModalType('Add New')\n    }\n\n    useEffect(async () => {\n        await dispatch(getData())\n        getModules()\n    }, [])\n\n    return (\n        <Fragment>\n            <Card>\n                <CardBody>\n                    <Row>\n                        <Row>\n                            <Can I={'write'} a={'role'}>\n                                <Col>\n                                    <Button color='primary' size='sm' onClick={() => { setShow(true) }}> <Plus size={15} />Add</Button>\n                                </Col>\n                            </Can>\n                        </Row>\n                        <Table className='table table-bordered table-hover'>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Level</th>\n                                    <th>Status</th>\n                                    <th>No of Users</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.map((item, index) => {\n                                    return (\n                                        <tr key={index}>\n\n                                            <td className='fw-bolder'>{item.name}</td>\n                                            <td className='fw-bolder'>Level {item.rolelevel}</td>\n                                            <td>\n                                                {item.status === 1 ? (\n                                                    <Badge color='light-success' className='ms-50'>\n                                                        Active\n                                                    </Badge>\n                                                ) : (\n                                                    <Badge color='light-danger' className='ms-50'>\n                                                        InActive\n                                                    </Badge>\n                                                )}\n                                            </td>\n                                            <td>{item.noofusers}</td>\n                                            <td>\n                                                <Can I={'write'} a={'role'}>\n                                                    <div className='d-flex' >\n                                                        <Eye size={15} className='me-1' onClick={() => { showPermission(item) }} />\n                                                        {!item.isdefault &&\n                                                            <div className='d-flex'>\n                                                                <Edit size={15} className='me-1' onClick={() => { editRole(item) }} />\n                                                                <Trash2 size={15} onClick={() => deletefn(item.id)} />\n                                                            </div>\n                                                        }\n                                                    </div>\n                                                </Can>\n                                            </td>\n\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </Table>\n                    </Row>\n                </CardBody>\n            </Card>\n            <Modal\n                isOpen={formModal}\n                toggle={() => setFormModal(!formModal)}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={() => setFormModal(!formModal)}>\n                    Role Permissions\n                </ModalHeader>\n                <ModalBody>\n                    <Permissions roleId={selectedRoleId} />\n                </ModalBody>\n            </Modal>\n            <Modal\n                isOpen={show}\n                onClosed={handleModalClosed}\n                toggle={() => setShow(!show)}\n                className='modal-dialog-centered modal-lg'\n            >\n                <UILoader blocking={block} loader={<Loader />}>\n                    <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\n                    <ModalBody className='px-2'>\n                        <div className='text-center mb-1'>\n                            <h1>{modalType} Role</h1>\n                        </div>\n                        <Row tag='form' onSubmit={handleSubmit(onSubmit)}>\n                            <Col xs={12}>\n                                <Label className='form-label' for='name'>\n                                    Role Name\n                                </Label>\n                                <Controller\n                                    name='name'\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Input {...field} id='name' placeholder='Enter Role name' invalid={errors.name && true} />\n                                    )}\n                                />\n                                {errors.name && <FormFeedback>Please enter a valid role name</FormFeedback>}\n                            </Col>\n                            <Col xs={12} className='mt-1'>\n                                <Label className='form-label' for='name'>\n                                    Level\n                                </Label>\n                                <Controller\n                                    name='rolelevel'\n                                    control={control}\n                                    render={({ field, ref }) => (\n                                        <Select\n                                            inputRef={ref}\n                                            className={classnames('react-select', { 'is-invalid': errors.rolelevel })}\n                                            {...field}\n                                            classNamePrefix='select'\n                                            options={levelOptions}\n                                            onChange={(obj) => setValue('rolelevel', obj.id)}\n                                            value={levelOptions.find(c => { return c.id === field.value })} // set selected values\n                                            getOptionLabel={(option) => option.name}\n                                            getOptionValue={(option) => option.id}\n                                        />\n                                    )}\n                                />\n                                {errors.rolelevel && <FormFeedback>Please Select Role Level</FormFeedback>}\n                            </Col>\n                            <Col xs={12} className='mt-1'>\n                                <Label className='form-label' for='description'>\n                                    Description\n                                </Label>\n                                <Controller\n                                    name='description'\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Input {...field} id='description' placeholder='Enter Description' invalid={errors.description && true} />\n                                    )}\n                                />\n                            </Col>\n                            <Col xs={12}>\n                                <h4 className='mt-2 pt-50'>Role Permissions</h4>\n                                <Table className='table-flush-spacing' responsive>\n                                    <tbody>{\n                                        renderPermissions()\n                                    }\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col className='text-center mt-2' xs={12}>\n                                <Button type='submit' color='primary' className='me-1'>\n                                    Submit\n                                </Button>\n                                <Button type='button' color='warning' onClick={onReset}>\n                                    Cancel\n                                </Button>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                </UILoader>\n            </Modal>\n        </Fragment>\n    )\n}\n\nexport default Roles\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}