{"version":3,"sources":["views/ui-elements/cards/statistics/OrdersReceived.js","views/ui-elements/cards/statistics/SubscribersGained.js","@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/QuaterlySales.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js","views/ui-elements/cards/statistics/RevenueGenerated.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/statistics/StatsCard.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/ChartOptions.js"],"names":["OrdersReceived","kFormatter","warning","useState","data","setData","options","chart","id","toolbar","show","sparkline","enabled","grid","colors","dataLabels","stroke","curve","width","fill","type","gradient","shadeIntensity","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","useEffect","axios","get","then","res","icon","size","color","stats","analyticsData","orders","statTitle","series","SubscribersGained","subscribers","StatsWithLineChart","height","rest","className","defaultProps","lineChartOptions","Newsletter","dropShadow","top","left","blur","opacity","gradientToColors","SiteTraffic","ActiveUsers","success","QuarterlySales","danger","StatsWithAreaChart","sales","TinyChartStats","props","title","OrdersBarChart","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","ProfitLineChart","info","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize","RevenueGenerated","revenue","StatsVertical","StatisticsCards","context","useContext","ThemeColors","lg","xs","main","sm","StatsCard","cols","md","xl","StatsHorizontal","QuaterlySales","BreadCrumbs","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","renderStats","statsMargin","userId","orgUserId","activeOrg","activeOrganization","status","subtitle","dispatch","useDispatch","navigate","useNavigate","dataArr","updateParam","sts","obj","updateStatusParams","date","moment","startOf","utc","format","userType","organizationusersusertypeid","post","forEach","key","ind","tasks","findIndex","o","parseInt","taskstatus","count","catch","err","console","log","getStats","onClick","areaChartOptions"],"mappings":"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","file":"static/js/86.6db97280.chunk.js","sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Package } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Users } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='fw-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Custom Components\nimport StatsCard from './StatsCard'\nimport Newsletter from './Newsletter'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport RevenueGenerated from './RevenueGenerated'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SubscribersGained from './SubscribersGained'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport {\n  Eye,\n  Cpu,\n  Heart,\n  Award,\n  Truck,\n  Server,\n  Activity,\n  ShoppingBag,\n  AlertOctagon,\n  MessageSquare\n} from 'react-feather'\n\nconst StatisticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Statistics Cards' data={[{ title: 'Cards' }, { title: 'Statistics Cards' }]} />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { AlertOctagon, AlertTriangle, CheckCircle, CheckSquare, Circle, RefreshCcw, RefreshCw } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { updateStatusParams } from '@src/views/apps/task/store/index.js'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\nconst data = [\n  {\n    status: 1,\n    title: '0',\n    subtitle: 'Pending',\n    color: 'light-primary',\n    icon: <Circle size={20} />\n  },\n  {\n    status: 2,\n    title: '0',\n    subtitle: 'In Progress',\n    color: 'light-warning',\n    icon: <CheckSquare size={20} />\n  },\n  {\n    status: 3,\n    title: '0',\n    subtitle: 'Completed',\n    color: 'light-success',\n    icon: <CheckCircle size={20} />\n  },\n  {\n    status: 6,\n    title: '0',\n    subtitle: 'Pending Review',\n    color: 'light-ocean',\n    icon: <AlertOctagon size={20} />\n  },\n  {\n    status: 7,\n    title: '0',\n    subtitle: 'Request Changes',\n    color: 'light-info',\n    icon: <RefreshCcw size={20} />\n  },\n  {\n    status: 9,\n    title: '0',\n    subtitle: 'Overdue',\n    color: 'light-danger',\n    icon: <AlertTriangle size={20} />\n  }\n]\n\nconst StatsCard = ({ cols }) => {\n\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [dataArr, setData] = useState([])\n\n  const getStats = () => {\n\n    const obj = { date: moment().startOf('day').utc().format('x'), userId, userType: activeOrg.organizationusersusertypeid }\n    axios.post('tasks/taskcountbystatus', obj)\n      .then((res) => {\n        data.forEach((obj, key) => {\n          const ind = res.data.tasks.findIndex((o) => parseInt(o.taskstatus) === obj.status)\n          if (ind > -1) {\n            data[key].title = res.data.tasks[ind].count\n          }\n        })\n        setData(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const updateParam = async (sts) => {\n    const obj = {\n      status: sts\n    }\n    await dispatch(updateStatusParams(obj))\n    navigate('/task/list')\n  }\n\n\n  useEffect(() => {\n    if (activeOrg !== null) {\n      getStats()\n    }\n  }, [])\n\n  const renderData = () => {\n    return dataArr.map((item, index) => {\n\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2`]: index !== data.length - 1\n          }, [`col flex-50`])}\n        >\n          <div className='d-flex align-items-center cursor-pointer' onClick={() => { updateParam([item.status]) }}>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h6 className='fw-bolder mb-0'>{item.title}</h6>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Task Stats</CardTitle>\n        {/* <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText> */}\n      </CardHeader>\n      <CardBody className='py-0'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  color: 'primary',\n  options: areaChartOptions\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n"],"sourceRoot":""}