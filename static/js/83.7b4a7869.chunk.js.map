{"version":3,"sources":["views/apps/notes/index.js","views/apps/digital-signature/view/Conversation.js","views/apps/digital-signature/view/UserProjectsList.js","views/apps/digital-signature/view/Tabs.js","views/apps/digital-signature/view/UserInfoCard.js","views/apps/digital-signature/view/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","MySwal","withReactContent","Swal","Notes","props","moduleRefId","tabId","title","useState","block","setBlock","Loader","renderClient","row","initials","className","color","content","username","charAt","dispatch","useDispatch","data","setData","filesArr","setFilesArr","attachmentIds","setAttachmentsId","comment","setComment","editcomment","setEditComment","fileUploadProgress","setProgress","id","useParams","store","useSelector","state","notes","fileClassNames","image","pdf","xlsx","xls","docx","doc","deletefn","fire","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","value","deleteNotes","status","getData","editNote","k","temp","map","obj","i","description","editFlag","configUpload","headers","onUploadProgress","Math","round","loaded","total","uploadFiles","files","formData","FormData","forEach","file","key","append","axios","post","res","attachment_ids","catch","err","console","log","useDropzone","multiple","onDrop","rejectedFiles","acceptedFiles","extension","name","split","pop","push","length","toast","error","getRootProps","getInputProps","saveNote","updateNotes","success","position","useEffect","postComment","organizationId","createdBy","updatedBy","moduleReferenceId","moduleId","addNotes","fileList","index","md","substr","size","onClick","filtered","filter","splice","handleRemoveFile","blocking","loader","for","type","rows","placeholder","onInput","e","target","item","val","createdon","moment","format","tag","end","href","preventDefault","replace","driveid","originalfilename","roes","outline","ConversationTab","moduleName","selectedDigitalSignature","clientid","dateFormat","unix","statusArr","statusColArr","columns","sortable","minWidth","sortField","selector","cell","to","uniqueidentity","alt","imgWidth","email","contact","issueddate","expirydate","UserProjectsList","digitalsignature","dataArray","setDataArray","DSCLists","DSCList","noHeader","responsive","sortIcon","UserTabs","active","toggleTab","pills","activeTab","Conversation","UserInfoCard","currentLocation","setCurrentLocation","locationOptions","statusObj","updateLocation","location","updateDSCLocation","dsclocation","clientname","contentStyles","borderRadius","fontSize","width","height","style","renderUserImg","theme","selectThemeColors","isClearable","classNamePrefix","options","getOptionLabel","option","getOptionValue","onChange","password","Can","I","a","Link","ServiceView","getDsc","setActive","undefined","xl","lg","xs","order","tab","UILoader","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/83.7b4a7869.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Card,\n  Input,\n  Button,\n  CardBody,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Col,\n  Row,\n  Progress,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { X, Paperclip, File, MoreVertical, Edit2, Trash } from 'react-feather'\nimport Avatar from '@src/@core/components/avatar'\nimport { getData, addNotes, deleteNotes, updateNotes } from './store/index'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst MySwal = withReactContent(Swal)\n// ** Images\nconst Notes = props => {\n  // ** Hook\n  const { moduleRefId, tabId, title } = props\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const renderClient = row => {\n\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={'light-primary'}\n        content={row?.username?.charAt(0) || 'T'}\n      />\n    )\n\n  }\n\n  const dispatch = useDispatch()\n  //** State */\n  //const [files, setFiles] = useState([])\n  const [data, setData] = useState([])\n  const [filesArr, setFilesArr] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const [comment, setComment] = useState('')\n  const [editcomment, setEditComment] = useState('')\n  const [fileUploadProgress, setProgress] = useState(0)\n  const { id } = useParams()\n  const store = useSelector(state => state.notes)\n\n  const fileClassNames = {\n    image: \"ui-attachment--image\",\n    pdf: \"ui-attachment--pdf\",\n    xlsx: \"ui-attachment--excel\",\n    xls: \"ui-attachment--excel\",\n    docx: \"ui-attachment--docx\",\n    doc: \"ui-attachment--docx\"\n  }\n\n  const deletefn = async (row) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        setBlock(true)\n        await dispatch(deleteNotes(row))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Notes has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n        const status = tabId === 'clientpassword' ? 4 : 1\n        await dispatch(getData({ id, status }))\n        await setBlock(false)\n      }\n\n    })\n  }\n\n  const editNote = (k) => {\n    const temp = data.map((obj, i) => {\n      if (i === k) {\n        setEditComment(obj.description)\n        return { ...obj, editFlag: true }\n      } else {\n        return { ...obj, editFlag: false }\n      }\n    })\n    setData(temp)\n  }\n  const dateformat = (val) => {\n\n    return moment(val, 'x').format('YYYY, MMM-D h:m A')\n\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = (files) => {\n\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('id', moduleRefId)\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n    setBlock(true)\n    axios.post('/google/clientfolders', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      //setFiles([])\n      setBlock(false)\n    }).catch((err) => { console.log(err); setBlock(false) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: async (files, rejectedFiles) => {\n\n      const acceptedFiles = []\n      files.forEach(obj => {\n        obj.extension = obj.name.split('.').pop()\n        acceptedFiles.push(obj)\n      })\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        await uploadFiles(acceptedFiles)\n        //setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const handleRemoveFile = (file, index) => {\n    const uploadedFiles = filesArr\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setAttachmentsId([...attachmentIds.splice(index, 1)])\n    //setFiles(filtered)\n    setFilesArr(filtered)\n  }\n\n  const saveNote = async (obj) => {\n    obj.description = editcomment\n    if (obj.description !== '' || attachmentIds.length > 0) {\n      const status = tabId === 'clientpassword' ? 4 : 1\n      obj.status = status\n      await dispatch(updateNotes(obj))\n      toast.success('Comment Updated Successfully.', { position: 'bottom-right' })\n    }\n  }\n\n  useEffect(async () => {\n    if (tabId === 'clientpassword' || tabId === 'clientnotes' || tabId === 'tasknotes' || tabId === 'dscnotes') {\n      const status = tabId === 'clientpassword' ? 4 : 1\n      await dispatch(getData({ id, status }))\n    }\n  }, [tabId])\n\n  useEffect(() => {\n    setData(store.data || [])\n  }, [store.data])\n\n  const postComment = async () => {\n    if (comment !== '' || attachmentIds.length > 0) {\n      const status = tabId === 'clientpassword' ? 4 : 1\n      const data = {\n        organizationId: activeOrgId,\n        createdBy: userId,\n        updatedBy: userId,\n        description: comment,\n        attachmentIds,\n        moduleReferenceId: moduleRefId,\n        moduleId: id,\n        status\n      }\n      setBlock(true)\n      await dispatch(addNotes(data))\n      toast.success('Comment Added Successfully.', { position: 'bottom-right' })\n      setComment('')\n      //setFiles([])\n      setFilesArr([])\n      setProgress(0)\n      setAttachmentsId([])\n      setBlock(false)\n    }\n\n  }\n\n  const fileList = filesArr.map((file, index) => (\n    <Col md={4} key={`${file.name}-${index}`} className={`d-flex align-items-center justify-content-between ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n      <div className='file-details d-flex align-items-center'>\n        <div>\n          <p className='file-name mb-0 text-overflow-ellipsis'>{file.name.split('.')[0].length > 15 ? `${file.name.split('.')[0].substr(0, 15)}` : file.name}</p>\n        </div>\n      </div>\n      <X size={14} className='cursor-pointer' onClick={() => handleRemoveFile(file, index)} />\n    </Col>\n  ))\n\n  return (\n    <Fragment>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody>\n\n            <fieldset className='form-label-group mb-50'>\n              <Label className='form-check-label' for={`add-comment-`}>\n                {title}\n              </Label>\n              <Input id={`add-comment-`} type='textarea' rows='3' placeholder={title} value={comment} onInput={(e) => setComment(e.target.value)} />\n            </fieldset>\n\n            <input {...getInputProps()} />\n\n            <Button type='button' color='primary' size='sm' {...getRootProps({  })} >\n              <Paperclip size={14} className=''></Paperclip>\n            </Button>\n\n            <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n              {title}\n            </Button>\n\n            {fileUploadProgress > 0 && <Progress color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n            <Row className='d-flex p-1'>{fileList}</Row>\n\n            {data.map((item, k) => {\n              return (\n                <div className='d-flex align-items-start my-1' key={k}>\n                  {renderClient(item)}\n                  <div className='profile-user-info w-100'>\n                    <div className='d-flex align-items-center justify-content-between'>\n                      <h6 className='mb-0'>{item.username}</h6>\n                      <span className='d-flex text-body'>\n                        <span className='text-sm text-body font-small-3 mt-25'>{dateformat(item.createdon)}</span>\n                        {!item.editFlag &&\n                          <UncontrolledDropdown>\n                            <DropdownToggle tag='span'>\n                              <MoreVertical size={16} />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); editNote(k) }}>\n                                  <Edit2 size={13} /> Edit\n                                </Col>\n                              </DropdownItem>\n                              <DropdownItem>\n                                <Col tag={'a'} href='/' onClick={(e) => { e.preventDefault(); deletefn(item) }}>\n                                  <Trash size={13} /> Delete\n                                </Col>\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        }\n                      </span>\n                    </div>\n                    {!item.editFlag &&\n                      <Row className='mt-1'>\n\n                        <div className='white-space-wrap text-body '>\n                          {item.description !== '' &&\n                            < span className='rounded-3 bg-light-primary chat-bubble'>\n                              {item.description.replace(/(\\\\n)/g, \"\\n\")}\n                            </span>\n                          }\n                          <Row>\n                            {                              \n                              item?.files?.map((file, k) => {\n                                return (\n                                  <Col md={'3'} key={k} className='file-details d-flex align-items-center cursor-pointer'>\n                                    <ListGroupItem className={`col-12 d-flex mb-1 align-items-center ui-attachment ${fileClassNames[file.extension] || fileClassNames['image']}`}>\n                                      <a target='_blank' className='file-name text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}.${file.extension}` : file.originalfilename}</a>\n                                    </ListGroupItem>\n                                  </Col>\n                                )\n                              })\n                            }\n                          </Row>\n                        </div>\n                      </Row>\n                    }\n                    {item.editFlag &&\n                      <Row className='mt-2'>\n                        <Input type='textarea' roes='3' value={editcomment.replace(/(\\\\n)/g, \"\\n\")} onInput={(e) => { setEditComment(e.target.value) }} />\n\n                        <Col className='d-flex justify-content-end mt-1' >\n                          <Button size='sm' color='warning' outline onClick={() => editNote(-1)}>Cancel</Button>\n                          <Button size='sm' color='primary' className='ms-1' onClick={() => saveNote(item)} >Save</Button>\n                        </Col>\n                      </Row>\n                    }\n                  </div>\n                </div>\n              )\n            })\n            }\n          </CardBody>\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default Notes\n","// ** React Imports\nimport { Fragment } from 'react'\nimport Notes from '@src/views/apps/notes/index.js'\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\n// ** Images\nconst ConversationTab = (data) => {\n  \n  return (\n    <Fragment>\n      <Notes moduleName={'dsc'} moduleRefId={data.selectedDigitalSignature.clientid} tabId={data.tabId} title={'Add Comments'}/>\n    </Fragment>\n  )\n}\n\nexport default ConversationTab\n","// ** Reactstrap Imports\nimport { Badge, Card, CardHeader } from 'reactstrap'\n\n// ** Third Party Components\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nimport { DSCList } from '../store/index'\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst dateFormat = (value) => {\n\n  if (value.length === 13) {\n    return moment(value, 'x').format(\"MMM DD, YYYY\")\n  } else {\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n  }\n\n}\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"Inactive\",\n  'Expired'\n]\n\nconst statusColArr = [\n  '',\n  \"light-success\",\n  \"Inactive\",\n  'light-danger'\n]\n\n\nexport const columns = [\n  {\n    name: 'ID',\n    sortable: true,\n    minWidth: '102px',\n    sortField: 'role',\n    selector: row => row.id,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        <Link\n          to={`/digital-signature/view/${row.id}`}\n          className='user_name text-truncate text-body'\n        >\n          <span className='text-capitalize fw-bolder'>{row.uniqueidentity}</span>\n        </Link>\n      </div>\n    )\n  },\n  {\n    sortable: true,\n    minWidth: '300px',\n    name: 'Client',\n    selector: row => row.name,\n    cell: row => {\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          <div className='avatar-wrapper'>\n            <Avatar className='me-1' content={row.name?.charAt(0)} alt={row.name} imgWidth='32' />\n          </div>\n          <div className='d-flex flex-column'>\n            <span className='text-truncate fw-bolder'>{row.name}</span>\n            <small className='text-muted'>{row.email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Contact',\n    selector: row => row.contact\n  },\n  {\n    name: 'Issued Date',\n    selector: row => dateFormat(row.issueddate)\n  },\n  {\n    name: 'Expiry Date',\n    selector: row => dateFormat(row.expirydate)\n  },\n  {\n    name: 'Status',\n    selector: row => row.status,\n    sortable: true,\n    cell: row => {\n      return (\n        <div className='d-flex flex-column w-100'>\n          <Badge color={statusColArr[row.status]} >{`${statusArr[row.status]}`}</Badge>\n        </div>\n      )\n    }\n  }\n]\n\nconst UserProjectsList = () => {\n\n  const store = useSelector(state => state.digitalsignature)\n  const [dataArray, setDataArray] = useState([])\n  const dispatch = useDispatch()\n\n  useEffect(async () => {\n\n    if (store.DSCLists.length > 0) {\n      setDataArray(store.DSCLists)\n    }\n\n  }, [store.DSCLists])\n\n\n  useEffect(async () => {\n    if (store.selectedDigitalSignature !== null) {\n      await dispatch(DSCList(store.selectedDigitalSignature.clientid))\n    }\n\n  }, [store.selectedDigitalSignature])\n\n  return (\n    <Card>\n      <CardHeader tag='h4'>Digital Signature List</CardHeader>\n      <div className='react-dataTable user-view-account-projects'>\n        <DataTable\n          noHeader\n          responsive\n          columns={columns}\n          data={dataArray}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default UserProjectsList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { User, Lock } from 'react-feather'\n\n// ** User Components\nimport Conversation from './Conversation'\nimport UserProjectsList from './UserProjectsList'\n\nconst UserTabs = ({ active, toggleTab, selectedDigitalSignature }) => {\n\n  \n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n        <NavItem>\n          <NavLink active={active === 'dscnotes'} onClick={() => toggleTab('dscnotes')}>\n            <Lock className='font-medium-3 me-50' />\n            <span className='fw-bold'>Notes</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === 'dsclist'} onClick={() => toggleTab('dsclist')}>\n            <User className='font-medium-3 me-50' />\n            <span className='fw-bold'>Other DSC</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='dscnotes'>\n          <Conversation tabId={active} selectedDigitalSignature={selectedDigitalSignature}/>\n        </TabPane>\n        <TabPane tabId='dsclist'>\n          <UserProjectsList />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { Link, useParams } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Badge, Row, Col, Label } from 'reactstrap'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Select from 'react-select'\nimport { updateDSCLocation } from '../store/index'\nimport moment from 'moment'\nimport { Fragment, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { orgUserId } from '@src/helper/sassHelper'\nimport toast from 'react-hot-toast'\nconst userId = orgUserId()\n\nconst UserInfoCard = ({ selectedDigitalSignature }) => {\n  // ** State\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const [currentLocation, setCurrentLocation] = useState(null)\n  const dateFormat = (value) => {\n\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n  }\n\n  const locationOptions = [{ id: 1, name: 'Office' }, { id: 2, name: 'With Client' }]\n  const locationArr = ['', 'Office', 'With Client']\n  // ** render user img\n  const renderUserImg = () => {\n\n    return (\n      <Avatar\n        initials\n        color={'light-primary' || 'light-primary'}\n        className='rounded mt-3 mb-2'\n        content={selectedDigitalSignature.clientname?.charAt(0)}\n        contentStyles={{\n          borderRadius: 0,\n          fontSize: 'calc(48px)',\n          width: '100%',\n          height: '100%'\n        }}\n        style={{\n          height: '110px',\n          width: '110px'\n        }}\n      />\n    )\n\n  }\n\n  const statusObj = [\n    '',\n    'light-primary',\n    'light-success',\n    'light-warning'\n  ]\n\n  const statusArr = [\n    '',\n    \"Active\",\n    \"Inactive\",\n    'Expired'\n  ]\n\n  const updateLocation = async (val) => {\n    const obj = { id, location: val, updatedBy: userId }\n    setCurrentLocation(locationOptions[val - 1])\n    await dispatch(updateDSCLocation(obj))\n    toast.success('Digital Signature Location Update Successfully.', { position: 'bottom-right' })\n  }\n\n  useEffect(() => {\n    setCurrentLocation(locationOptions[selectedDigitalSignature.dsclocation - 1])\n  }, [selectedDigitalSignature])\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <div className='user-avatar-section'>\n            <div className='d-flex align-items-center flex-column'>\n              {renderUserImg()}\n              <div className='d-flex flex-column align-items-center text-center'>\n                <div className='user-info'>\n                  <h4>{selectedDigitalSignature !== null ? selectedDigitalSignature.clientname : 'Eleanor Aguilar'}</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Row className='align-items-end'>\n            <Col>\n              <h6>Details</h6>\n            </Col>\n            <Col>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={locationOptions}\n                value={currentLocation}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n                onChange={async data => { updateLocation(data.id) }}\n              />\n            </Col>\n          </Row>\n          <hr></hr>\n          <div className='info-container'>\n            {selectedDigitalSignature !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>DSC ID:</span>\n                  <span>{selectedDigitalSignature.uniqueidentity}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Name:</span>\n                  <span>{selectedDigitalSignature.name}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Email:</span>\n                  <span>{selectedDigitalSignature.email}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Contact:</span>\n                  <span>{selectedDigitalSignature.contact}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Password:</span>\n                  <span>{selectedDigitalSignature.password}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Location:</span>\n                  <Badge className='text-capitalize' color={statusObj[selectedDigitalSignature.dsclocation]}>\n                    {locationArr[selectedDigitalSignature.dsclocation]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Status:</span>\n                  <Badge className='text-capitalize' color={statusObj[selectedDigitalSignature.status]}>\n                    {statusArr[selectedDigitalSignature.status]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Issued Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.issueddate)}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Expiry Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.expirydate)}</span>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n          <div className='d-flex justify-content-center pt-2'>\n            <Can I={'write'} a={'digital-signature'}>\n              <Button color='primary' tag={Link} to={`/digital-signature/edit/${selectedDigitalSignature.id}`}>\n                Edit\n              </Button>\n            </Can>\n            <Button className='ms-1' color='danger' outline tag={Link}\n              to='/digital-signature/list'>\n              Cancel\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getDsc } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.digitalsignature)\n  const dispatch = useDispatch()\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(getDsc(id))\n    setBlock(false)\n  }, [dispatch])\n\n  const [active, setActive] = useState('dscnotes')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return store.selectedDigitalSignature !== null && store.selectedDigitalSignature !== undefined ? (\n    <UILoader blocking={block} loader={<Loader />}>\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n            <UserInfoCard selectedDigitalSignature={store.selectedDigitalSignature} />\n          </Col>\n          <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n            <UserTabs active={active} toggleTab={toggleTab} selectedDigitalSignature={store.selectedDigitalSignature}/>\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <UILoader blocking={block} loader={<Loader />}>\n      <Alert color='danger'>\n        <h4 className='alert-heading'>DSC not found</h4>\n        <div className='alert-body'>\n          DSC with id: {id} doesn't exist. Check list of all DSC's: <Link to='/digital-signature/list'>DSC's List</Link>\n        </div>\n      </Alert>\n    </UILoader>\n  )\n}\nexport default ServiceView\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}